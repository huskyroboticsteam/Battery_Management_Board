ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoDisableWcoLock
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoDisableWcoLock, %function
  25              	CySysClkImoDisableWcoLock:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 4


 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 5


 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 6


 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  28              		.loc 1 284 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  34              		.loc 1 294 0
  35 0000 0023     		movs	r3, #0
  36 0002 0AE0     		b	.L2
  37              	.LVL1:
  38              	.L5:
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  39              		.loc 1 296 0
  40 0004 0D4A     		ldr	r2, .L6
  41 0006 1268     		ldr	r2, [r2]
  42 0008 3F21     		movs	r1, #63
  43 000a 0A40     		ands	r2, r1
  44 000c 0C49     		ldr	r1, .L6+4
  45 000e C95C     		ldrb	r1, [r1, r3]
  46 0010 8A42     		cmp	r2, r1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 7


  47 0012 01D1     		bne	.L3
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  48              		.loc 1 298 0
  49 0014 0333     		adds	r3, r3, #3
  50              	.LVL2:
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
  51              		.loc 1 299 0
  52 0016 03E0     		b	.L4
  53              	.LVL3:
  54              	.L3:
 294:Generated_Source\PSoC4/CyLib.c ****             {
  55              		.loc 1 294 0 discriminator 2
  56 0018 0133     		adds	r3, r3, #1
  57              	.LVL4:
  58              	.L2:
 294:Generated_Source\PSoC4/CyLib.c ****             {
  59              		.loc 1 294 0 is_stmt 0 discriminator 1
  60 001a 2D2B     		cmp	r3, #45
  61 001c F2D9     		bls	.L5
 293:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  62              		.loc 1 293 0 is_stmt 1
  63 001e 0323     		movs	r3, #3
  64              	.LVL5:
  65              	.L4:
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  66              		.loc 1 316 0
  67 0020 0849     		ldr	r1, .L6+8
  68 0022 0868     		ldr	r0, [r1]
  69 0024 084A     		ldr	r2, .L6+12
  70 0026 0240     		ands	r2, r0
  71 0028 0A60     		str	r2, [r1]
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
  72              		.loc 1 321 0
  73 002a 084A     		ldr	r2, .L6+16
  74 002c 9446     		mov	ip, r2
  75 002e 6344     		add	r3, r3, ip
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 8


  76              	.LVL6:
  77 0030 1B78     		ldrb	r3, [r3]
  78              	.LVL7:
  79 0032 DBB2     		uxtb	r3, r3
  80 0034 064A     		ldr	r2, .L6+20
  81 0036 1360     		str	r3, [r2]
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
  82              		.loc 1 323 0
  83              		@ sp needed
  84 0038 7047     		bx	lr
  85              	.L7:
  86 003a C046     		.align	2
  87              	.L6:
  88 003c 2CFF0B40 		.word	1074528044
  89 0040 00000000 		.word	.LANCHOR0
  90 0044 00002240 		.word	1075970048
  91 0048 FFFFFFBF 		.word	-1073741825
  92 004c CDF1FF0F 		.word	268431821
  93 0050 28FF0B40 		.word	1074528040
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  97              		.section	.text.CySysClkImoStop,"ax",%progbits
  98              		.align	2
  99              		.global	CySysClkImoStop
 100              		.code	16
 101              		.thumb_func
 102              		.type	CySysClkImoStop, %function
 103              	CySysClkImoStop:
 104              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 105              		.loc 1 139 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113              		.loc 1 141 0
 114 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 115              	.LVL8:
 148:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 148 0
 117 0006 034A     		ldr	r2, .L9
 118 0008 1368     		ldr	r3, [r2]
 119 000a 5B00     		lsls	r3, r3, #1
 120 000c 5B08     		lsrs	r3, r3, #1
 121 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 122              		.loc 1 149 0
 123              		@ sp needed
 124 0010 10BD     		pop	{r4, pc}
 125              	.L10:
 126 0012 C046     		.align	2
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 9


 127              	.L9:
 128 0014 08010B40 		.word	1074462984
 129              		.cfi_endproc
 130              	.LFE2:
 131              		.size	CySysClkImoStop, .-CySysClkImoStop
 132              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 133              		.align	2
 134              		.global	CySysClkImoGetWcoLock
 135              		.code	16
 136              		.thumb_func
 137              		.type	CySysClkImoGetWcoLock, %function
 138              	CySysClkImoGetWcoLock:
 139              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 140              		.loc 1 340 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 145              		.loc 1 341 0
 146 0000 034B     		ldr	r3, .L13
 147 0002 1868     		ldr	r0, [r3]
 148 0004 8023     		movs	r3, #128
 149 0006 DB05     		lsls	r3, r3, #23
 150 0008 1840     		ands	r0, r3
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 151              		.loc 1 342 0
 152 000a 00D0     		beq	.L12
 153 000c 0120     		movs	r0, #1
 154              	.L12:
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 155              		.loc 1 344 0
 156              		@ sp needed
 157 000e 7047     		bx	lr
 158              	.L14:
 159              		.align	2
 160              	.L13:
 161 0010 00002240 		.word	1075970048
 162              		.cfi_endproc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 10


 163              	.LFE5:
 164              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 165              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 166              		.align	2
 167              		.global	CySysClkWriteHfclkDirect
 168              		.code	16
 169              		.thumb_func
 170              		.type	CySysClkWriteHfclkDirect, %function
 171              	CySysClkWriteHfclkDirect:
 172              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 11


 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 12


 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 13


 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 14


 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 173              		.loc 1 585 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL9:
 178 0000 10B5     		push	{r4, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 182 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 183              		.loc 1 593 0
 184 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 185              	.LVL10:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 15


 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 186              		.loc 1 625 0
 187 0008 044A     		ldr	r2, .L16
 188 000a 1368     		ldr	r3, [r2]
 189 000c 0721     		movs	r1, #7
 190 000e 8B43     		bics	r3, r1
 191              	.LVL11:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 192              		.loc 1 636 0
 193 0010 0C40     		ands	r4, r1
 194              	.LVL12:
 195 0012 1C43     		orrs	r4, r3
 196              	.LVL13:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 197              		.loc 1 639 0
 198 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 199              		.loc 1 641 0
 200 0016 FFF7FEFF 		bl	CyExitCriticalSection
 201              	.LVL14:
 642:Generated_Source\PSoC4/CyLib.c **** }
 202              		.loc 1 642 0
 203              		@ sp needed
 204              	.LVL15:
 205 001a 10BD     		pop	{r4, pc}
 206              	.L17:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 16


 207              		.align	2
 208              	.L16:
 209 001c 00010B40 		.word	1074462976
 210              		.cfi_endproc
 211              	.LFE6:
 212              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 213              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 214              		.align	2
 215              		.global	CySysEnablePumpClock
 216              		.code	16
 217              		.thumb_func
 218              		.type	CySysEnablePumpClock, %function
 219              	CySysEnablePumpClock:
 220              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 221              		.loc 1 662 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL16:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 227              		.loc 1 664 0
 228 0000 C307     		lsls	r3, r0, #31
 229 0002 07D5     		bpl	.L19
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 230              		.loc 1 666 0
 231 0004 094A     		ldr	r2, .L21
 232 0006 1168     		ldr	r1, [r2]
 233 0008 094B     		ldr	r3, .L21+4
 234 000a 1B68     		ldr	r3, [r3]
 235 000c 5B06     		lsls	r3, r3, #25
 236 000e 0B43     		orrs	r3, r1
 237 0010 1360     		str	r3, [r2]
 238 0012 0AE0     		b	.L18
 239              	.L19:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 17


 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 240              		.loc 1 670 0
 241 0014 054A     		ldr	r2, .L21
 242 0016 1368     		ldr	r3, [r2]
 243 0018 5B0E     		lsrs	r3, r3, #25
 244 001a 0721     		movs	r1, #7
 245 001c 0B40     		ands	r3, r1
 246 001e 0449     		ldr	r1, .L21+4
 247 0020 0B60     		str	r3, [r1]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 248              		.loc 1 672 0
 249 0022 1168     		ldr	r1, [r2]
 250 0024 034B     		ldr	r3, .L21+8
 251 0026 0B40     		ands	r3, r1
 252 0028 1360     		str	r3, [r2]
 253              	.L18:
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 686 0
 255              		@ sp needed
 256 002a 7047     		bx	lr
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 002c 08010B40 		.word	1074462984
 261 0030 00000000 		.word	.LANCHOR1
 262 0034 FFFFFFF1 		.word	-234881025
 263              		.cfi_endproc
 264              	.LFE7:
 265              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 266              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 267              		.align	2
 268              		.global	CySysClkGetSysclkSource
 269              		.code	16
 270              		.thumb_func
 271              		.type	CySysClkGetSysclkSource, %function
 272              	CySysClkGetSysclkSource:
 273              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 18


 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 274              		.loc 1 699 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 10B5     		push	{r4, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 282              		.loc 1 703 0
 283 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 284              	.LVL17:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 285              		.loc 1 713 0
 286 0006 044B     		ldr	r3, .L24
 287 0008 1B68     		ldr	r3, [r3]
 288 000a 0724     		movs	r4, #7
 289 000c 1C40     		ands	r4, r3
 290              	.LVL18:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 291              		.loc 1 722 0
 292 000e FFF7FEFF 		bl	CyExitCriticalSection
 293              	.LVL19:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 294              		.loc 1 725 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 19


 295 0012 2000     		movs	r0, r4
 296              		@ sp needed
 297              	.LVL20:
 298 0014 10BD     		pop	{r4, pc}
 299              	.L25:
 300 0016 C046     		.align	2
 301              	.L24:
 302 0018 00010B40 		.word	1074462976
 303              		.cfi_endproc
 304              	.LFE8:
 305              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 306              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 307              		.align	2
 308              		.global	CySysClkWriteSysclkDiv
 309              		.code	16
 310              		.thumb_func
 311              		.type	CySysClkWriteSysclkDiv, %function
 312              	CySysClkWriteSysclkDiv:
 313              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 314              		.loc 1 760 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 20


 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 323 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 324              		.loc 1 763 0
 325 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 326              	.LVL22:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 327              		.loc 1 765 0
 328 0008 E304     		lsls	r3, r4, #19
 329 000a E022     		movs	r2, #224
 330 000c 9203     		lsls	r2, r2, #14
 331 000e 1340     		ands	r3, r2
 332 0010 1900     		movs	r1, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 333              		.loc 1 767 0
 334 0012 054C     		ldr	r4, .L27
 335              	.LVL23:
 336 0014 2368     		ldr	r3, [r4]
 337 0016 054A     		ldr	r2, .L27+4
 338 0018 1A40     		ands	r2, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 339              		.loc 1 766 0
 340 001a 0B00     		movs	r3, r1
 341 001c 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 342              		.loc 1 765 0
 343 001e 2360     		str	r3, [r4]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 344              		.loc 1 770 0
 345 0020 FFF7FEFF 		bl	CyExitCriticalSection
 346              	.LVL24:
 771:Generated_Source\PSoC4/CyLib.c **** }
 347              		.loc 1 771 0
 348              		@ sp needed
 349 0024 10BD     		pop	{r4, pc}
 350              	.L28:
 351 0026 C046     		.align	2
 352              	.L27:
 353 0028 00010B40 		.word	1074462976
 354 002c FFFFC7FF 		.word	-3670017
 355              		.cfi_endproc
 356              	.LFE9:
 357              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 358              		.section	.text.CySysLvdDisable,"ax",%progbits
 359              		.align	2
 360              		.global	CySysLvdDisable
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 21


 361              		.code	16
 362              		.thumb_func
 363              		.type	CySysLvdDisable, %function
 364              	CySysLvdDisable:
 365              	.LFB12:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 22


 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 23


 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 24


 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 25


 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 26


1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 27


1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 28


1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 29


1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 30


1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 31


1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 32


1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 33


1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 34


1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 35


1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 36


1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 37


1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 38


1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 39


1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 40


1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 41


1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 42


1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 43


2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 44


2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 45


2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 46


2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 47


2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 48


2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 49


2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 50


2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 51


2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 52


2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 53


2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 54


2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 366              		.loc 1 2693 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 371              		.loc 1 2694 0
 372 0000 054A     		ldr	r2, .L30
 373 0002 1368     		ldr	r3, [r2]
 374 0004 0221     		movs	r1, #2
 375 0006 8B43     		bics	r3, r1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 55


 376 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 377              		.loc 1 2695 0
 378 000a 044A     		ldr	r2, .L30+4
 379 000c 1368     		ldr	r3, [r2]
 380 000e 0139     		subs	r1, r1, #1
 381 0010 8B43     		bics	r3, r1
 382 0012 1360     		str	r3, [r2]
2696:Generated_Source\PSoC4/CyLib.c ****     }
 383              		.loc 1 2696 0
 384              		@ sp needed
 385 0014 7047     		bx	lr
 386              	.L31:
 387 0016 C046     		.align	2
 388              	.L30:
 389 0018 08000B40 		.word	1074462728
 390 001c 18000B40 		.word	1074462744
 391              		.cfi_endproc
 392              	.LFE12:
 393              		.size	CySysLvdDisable, .-CySysLvdDisable
 394              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 395              		.align	2
 396              		.global	CySysLvdGetInterruptSource
 397              		.code	16
 398              		.thumb_func
 399              		.type	CySysLvdGetInterruptSource, %function
 400              	CySysLvdGetInterruptSource:
 401              	.LFB13:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 402              		.loc 1 2711 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 407              		.loc 1 2712 0
 408 0000 024B     		ldr	r3, .L33
 409 0002 1B68     		ldr	r3, [r3]
 410 0004 0220     		movs	r0, #2
 411 0006 1840     		ands	r0, r3
2713:Generated_Source\PSoC4/CyLib.c ****     }
 412              		.loc 1 2713 0
 413              		@ sp needed
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 56


 414 0008 7047     		bx	lr
 415              	.L34:
 416 000a C046     		.align	2
 417              	.L33:
 418 000c 04000B40 		.word	1074462724
 419              		.cfi_endproc
 420              	.LFE13:
 421              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 422              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 423              		.align	2
 424              		.global	CySysLvdClearInterrupt
 425              		.code	16
 426              		.thumb_func
 427              		.type	CySysLvdClearInterrupt, %function
 428              	CySysLvdClearInterrupt:
 429              	.LFB14:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 430              		.loc 1 2727 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 435              		.loc 1 2728 0
 436 0000 0222     		movs	r2, #2
 437 0002 014B     		ldr	r3, .L36
 438 0004 1A60     		str	r2, [r3]
2729:Generated_Source\PSoC4/CyLib.c ****     }
 439              		.loc 1 2729 0
 440              		@ sp needed
 441 0006 7047     		bx	lr
 442              	.L37:
 443              		.align	2
 444              	.L36:
 445 0008 04000B40 		.word	1074462724
 446              		.cfi_endproc
 447              	.LFE14:
 448              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 449              		.section	.text.CySysGetResetReason,"ax",%progbits
 450              		.align	2
 451              		.global	CySysGetResetReason
 452              		.code	16
 453              		.thumb_func
 454              		.type	CySysGetResetReason, %function
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 57


 455              	CySysGetResetReason:
 456              	.LFB15:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 457              		.loc 1 2753 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462              	.LVL25:
 463 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 464              		.loc 1 2756 0
 465 0002 1920     		movs	r0, #25
 466              	.LVL26:
 467 0004 0240     		ands	r2, r0
 468              	.LVL27:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 469              		.loc 1 2757 0
 470 0006 0249     		ldr	r1, .L39
 471 0008 0B68     		ldr	r3, [r1]
 472 000a 1840     		ands	r0, r3
 473              	.LVL28:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 474              		.loc 1 2759 0
 475 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 476              		.loc 1 2762 0
 477              		@ sp needed
 478 000e 7047     		bx	lr
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 58


 479              	.L40:
 480              		.align	2
 481              	.L39:
 482 0010 00030B40 		.word	1074463488
 483              		.cfi_endproc
 484              	.LFE15:
 485              		.size	CySysGetResetReason, .-CySysGetResetReason
 486              		.section	.text.CyDisableInts,"ax",%progbits
 487              		.align	2
 488              		.global	CyDisableInts
 489              		.code	16
 490              		.thumb_func
 491              		.type	CyDisableInts, %function
 492              	CyDisableInts:
 493              	.LFB16:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 494              		.loc 1 2776 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 499              		.loc 1 2780 0
 500 0000 024B     		ldr	r3, .L42
 501 0002 1868     		ldr	r0, [r3]
 502              	.LVL29:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 503              		.loc 1 2783 0
 504 0004 0122     		movs	r2, #1
 505 0006 5242     		rsbs	r2, r2, #0
 506 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 507              		.loc 1 2786 0
 508              		@ sp needed
 509 000a 7047     		bx	lr
 510              	.L43:
 511              		.align	2
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 59


 512              	.L42:
 513 000c 80E100E0 		.word	-536813184
 514              		.cfi_endproc
 515              	.LFE16:
 516              		.size	CyDisableInts, .-CyDisableInts
 517              		.section	.text.CyEnableInts,"ax",%progbits
 518              		.align	2
 519              		.global	CyEnableInts
 520              		.code	16
 521              		.thumb_func
 522              		.type	CyEnableInts, %function
 523              	CyEnableInts:
 524              	.LFB17:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 525              		.loc 1 2799 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530              	.LVL30:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 531              		.loc 1 2800 0
 532 0000 014B     		ldr	r3, .L45
 533 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 2801 0
 535              		@ sp needed
 536 0004 7047     		bx	lr
 537              	.L46:
 538 0006 C046     		.align	2
 539              	.L45:
 540 0008 00E100E0 		.word	-536813312
 541              		.cfi_endproc
 542              	.LFE17:
 543              		.size	CyEnableInts, .-CyEnableInts
 544              		.section	.text.CyIntEnable,"ax",%progbits
 545              		.align	2
 546              		.global	CyIntEnable
 547              		.code	16
 548              		.thumb_func
 549              		.type	CyIntEnable, %function
 550              	CyIntEnable:
 551              	.LFB24:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 60


2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 61


2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 62


2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 63


2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 552              		.loc 1 2982 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL31:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 558              		.loc 1 2983 0
 559 0000 1F23     		movs	r3, #31
 560 0002 1840     		ands	r0, r3
 561              	.LVL32:
 562 0004 1E3B     		subs	r3, r3, #30
 563 0006 8340     		lsls	r3, r3, r0
 564 0008 014A     		ldr	r2, .L48
 565 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 566              		.loc 1 2984 0
 567              		@ sp needed
 568 000c 7047     		bx	lr
 569              	.L49:
 570 000e C046     		.align	2
 571              	.L48:
 572 0010 00E100E0 		.word	-536813312
 573              		.cfi_endproc
 574              	.LFE24:
 575              		.size	CyIntEnable, .-CyIntEnable
 576              		.section	.text.CyIntGetState,"ax",%progbits
 577              		.align	2
 578              		.global	CyIntGetState
 579              		.code	16
 580              		.thumb_func
 581              		.type	CyIntGetState, %function
 582              	CyIntGetState:
 583              	.LFB25:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 64


3000:Generated_Source\PSoC4/CyLib.c **** {
 584              		.loc 1 3000 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL33:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 590              		.loc 1 3002 0
 591 0000 044B     		ldr	r3, .L51
 592 0002 1B68     		ldr	r3, [r3]
 593 0004 1F22     		movs	r2, #31
 594 0006 1040     		ands	r0, r2
 595              	.LVL34:
 596 0008 C340     		lsrs	r3, r3, r0
 597 000a 1800     		movs	r0, r3
 598 000c 0123     		movs	r3, #1
 599 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 3003 0
 601              		@ sp needed
 602 0010 7047     		bx	lr
 603              	.L52:
 604 0012 C046     		.align	2
 605              	.L51:
 606 0014 00E100E0 		.word	-536813312
 607              		.cfi_endproc
 608              	.LFE25:
 609              		.size	CyIntGetState, .-CyIntGetState
 610              		.section	.text.CyIntDisable,"ax",%progbits
 611              		.align	2
 612              		.global	CyIntDisable
 613              		.code	16
 614              		.thumb_func
 615              		.type	CyIntDisable, %function
 616              	CyIntDisable:
 617              	.LFB26:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 618              		.loc 1 3016 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL35:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 65


3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 624              		.loc 1 3017 0
 625 0000 1F23     		movs	r3, #31
 626 0002 1840     		ands	r0, r3
 627              	.LVL36:
 628 0004 1E3B     		subs	r3, r3, #30
 629 0006 8340     		lsls	r3, r3, r0
 630 0008 014A     		ldr	r2, .L54
 631 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 3018 0
 633              		@ sp needed
 634 000c 7047     		bx	lr
 635              	.L55:
 636 000e C046     		.align	2
 637              	.L54:
 638 0010 80E100E0 		.word	-536813184
 639              		.cfi_endproc
 640              	.LFE26:
 641              		.size	CyIntDisable, .-CyIntDisable
 642              		.section	.text.CyIntSetPending,"ax",%progbits
 643              		.align	2
 644              		.global	CyIntSetPending
 645              		.code	16
 646              		.thumb_func
 647              		.type	CyIntSetPending, %function
 648              	CyIntSetPending:
 649              	.LFB27:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 650              		.loc 1 3030 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL37:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 656              		.loc 1 3031 0
 657 0000 1F23     		movs	r3, #31
 658 0002 1840     		ands	r0, r3
 659              	.LVL38:
 660 0004 1E3B     		subs	r3, r3, #30
 661 0006 8340     		lsls	r3, r3, r0
 662 0008 014A     		ldr	r2, .L57
 663 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 3032 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 66


 665              		@ sp needed
 666 000c 7047     		bx	lr
 667              	.L58:
 668 000e C046     		.align	2
 669              	.L57:
 670 0010 00E200E0 		.word	-536813056
 671              		.cfi_endproc
 672              	.LFE27:
 673              		.size	CyIntSetPending, .-CyIntSetPending
 674              		.section	.text.CyIntClearPending,"ax",%progbits
 675              		.align	2
 676              		.global	CyIntClearPending
 677              		.code	16
 678              		.thumb_func
 679              		.type	CyIntClearPending, %function
 680              	CyIntClearPending:
 681              	.LFB28:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 682              		.loc 1 3045 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL39:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 688              		.loc 1 3046 0
 689 0000 1F23     		movs	r3, #31
 690 0002 1840     		ands	r0, r3
 691              	.LVL40:
 692 0004 1E3B     		subs	r3, r3, #30
 693 0006 8340     		lsls	r3, r3, r0
 694 0008 014A     		ldr	r2, .L60
 695 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 696              		.loc 1 3047 0
 697              		@ sp needed
 698 000c 7047     		bx	lr
 699              	.L61:
 700 000e C046     		.align	2
 701              	.L60:
 702 0010 80E200E0 		.word	-536812928
 703              		.cfi_endproc
 704              	.LFE28:
 705              		.size	CyIntClearPending, .-CyIntClearPending
 706              		.section	.text.CyHalt,"ax",%progbits
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 67


 707              		.align	2
 708              		.global	CyHalt
 709              		.code	16
 710              		.thumb_func
 711              		.type	CyHalt, %function
 712              	CyHalt:
 713              	.LFB29:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 714              		.loc 1 3060 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL41:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 720              		.loc 1 3069 0
 721              		.syntax divided
 722              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 723 0000 01BE     		    bkpt    1
 724              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 725              		.loc 1 3073 0
 726              		.thumb
 727              		.syntax unified
 728              		@ sp needed
 729 0002 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE29:
 732              		.size	CyHalt, .-CyHalt
 733              		.section	.text.CyIntSetSysVector,"ax",%progbits
 734              		.align	2
 735              		.global	CyIntSetSysVector
 736              		.code	16
 737              		.thumb_func
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 68


 738              		.type	CyIntSetSysVector, %function
 739              	CyIntSetSysVector:
 740              	.LFB18:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 741              		.loc 1 2824 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              	.LVL42:
 746 0000 70B5     		push	{r4, r5, r6, lr}
 747              		.cfi_def_cfa_offset 16
 748              		.cfi_offset 4, -16
 749              		.cfi_offset 5, -12
 750              		.cfi_offset 6, -8
 751              		.cfi_offset 14, -4
 752 0002 0400     		movs	r4, r0
 753 0004 0D00     		movs	r5, r1
 754              	.LVL43:
2828:Generated_Source\PSoC4/CyLib.c **** 
 755              		.loc 1 2828 0
 756 0006 0F28     		cmp	r0, #15
 757 0008 02D9     		bls	.L64
2828:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2828 0 is_stmt 0 discriminator 1
 759 000a 0020     		movs	r0, #0
 760              	.LVL44:
 761 000c FFF7FEFF 		bl	CyHalt
 762              	.LVL45:
 763              	.L64:
2831:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 2831 0 is_stmt 1
 765 0010 A400     		lsls	r4, r4, #2
 766 0012 8023     		movs	r3, #128
 767 0014 9B05     		lsls	r3, r3, #22
 768 0016 9C46     		mov	ip, r3
 769 0018 6444     		add	r4, r4, ip
 770 001a 2068     		ldr	r0, [r4]
 771              	.LVL46:
2834:Generated_Source\PSoC4/CyLib.c **** 
 772              		.loc 1 2834 0
 773 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 774              		.loc 1 2837 0
 775              		@ sp needed
 776              	.LVL47:
 777 001e 70BD     		pop	{r4, r5, r6, pc}
 778              		.cfi_endproc
 779              	.LFE18:
 780              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 781              		.section	.text.CyIntGetSysVector,"ax",%progbits
 782              		.align	2
 783              		.global	CyIntGetSysVector
 784              		.code	16
 785              		.thumb_func
 786              		.type	CyIntGetSysVector, %function
 787              	CyIntGetSysVector:
 788              	.LFB19:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 69


2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 789              		.loc 1 2858 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL48:
 794 0000 10B5     		push	{r4, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 4, -8
 797              		.cfi_offset 14, -4
 798 0002 0400     		movs	r4, r0
 799              	.LVL49:
2861:Generated_Source\PSoC4/CyLib.c **** 
 800              		.loc 1 2861 0
 801 0004 0F28     		cmp	r0, #15
 802 0006 02D9     		bls	.L66
2861:Generated_Source\PSoC4/CyLib.c **** 
 803              		.loc 1 2861 0 is_stmt 0 discriminator 1
 804 0008 0020     		movs	r0, #0
 805              	.LVL50:
 806 000a FFF7FEFF 		bl	CyHalt
 807              	.LVL51:
 808              	.L66:
2863:Generated_Source\PSoC4/CyLib.c **** }
 809              		.loc 1 2863 0 is_stmt 1
 810 000e A400     		lsls	r4, r4, #2
 811 0010 8023     		movs	r3, #128
 812 0012 9B05     		lsls	r3, r3, #22
 813 0014 9C46     		mov	ip, r3
 814 0016 6444     		add	r4, r4, ip
 815 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2864 0
 817              		@ sp needed
 818 001a 10BD     		pop	{r4, pc}
 819              		.cfi_endproc
 820              	.LFE19:
 821              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 822              		.section	.text.CyIntSetVector,"ax",%progbits
 823              		.align	2
 824              		.global	CyIntSetVector
 825              		.code	16
 826              		.thumb_func
 827              		.type	CyIntSetVector, %function
 828              	CyIntSetVector:
 829              	.LFB20:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 830              		.loc 1 2880 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              	.LVL52:
 835 0000 70B5     		push	{r4, r5, r6, lr}
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 6, -8
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 70


 840              		.cfi_offset 14, -4
 841 0002 0400     		movs	r4, r0
 842 0004 0D00     		movs	r5, r1
 843              	.LVL53:
2884:Generated_Source\PSoC4/CyLib.c **** 
 844              		.loc 1 2884 0
 845 0006 1F28     		cmp	r0, #31
 846 0008 02D9     		bls	.L68
2884:Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2884 0 is_stmt 0 discriminator 1
 848 000a 0020     		movs	r0, #0
 849              	.LVL54:
 850 000c FFF7FEFF 		bl	CyHalt
 851              	.LVL55:
 852              	.L68:
2887:Generated_Source\PSoC4/CyLib.c **** 
 853              		.loc 1 2887 0 is_stmt 1
 854 0010 1034     		adds	r4, r4, #16
 855 0012 A400     		lsls	r4, r4, #2
 856 0014 8023     		movs	r3, #128
 857 0016 9B05     		lsls	r3, r3, #22
 858 0018 9C46     		mov	ip, r3
 859 001a 6444     		add	r4, r4, ip
 860 001c 2068     		ldr	r0, [r4]
 861              	.LVL56:
2890:Generated_Source\PSoC4/CyLib.c **** 
 862              		.loc 1 2890 0
 863 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 864              		.loc 1 2893 0
 865              		@ sp needed
 866              	.LVL57:
 867 0020 70BD     		pop	{r4, r5, r6, pc}
 868              		.cfi_endproc
 869              	.LFE20:
 870              		.size	CyIntSetVector, .-CyIntSetVector
 871 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 872              		.align	2
 873              		.global	CyIntGetVector
 874              		.code	16
 875              		.thumb_func
 876              		.type	CyIntGetVector, %function
 877              	CyIntGetVector:
 878              	.LFB21:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 879              		.loc 1 2908 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              	.LVL58:
 884 0000 10B5     		push	{r4, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 4, -8
 887              		.cfi_offset 14, -4
 888 0002 0400     		movs	r4, r0
 889              	.LVL59:
2911:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 71


 890              		.loc 1 2911 0
 891 0004 1F28     		cmp	r0, #31
 892 0006 02D9     		bls	.L70
2911:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2911 0 is_stmt 0 discriminator 1
 894 0008 0020     		movs	r0, #0
 895              	.LVL60:
 896 000a FFF7FEFF 		bl	CyHalt
 897              	.LVL61:
 898              	.L70:
2913:Generated_Source\PSoC4/CyLib.c **** }
 899              		.loc 1 2913 0 is_stmt 1
 900 000e 1034     		adds	r4, r4, #16
 901 0010 A400     		lsls	r4, r4, #2
 902 0012 8023     		movs	r3, #128
 903 0014 9B05     		lsls	r3, r3, #22
 904 0016 9C46     		mov	ip, r3
 905 0018 6444     		add	r4, r4, ip
 906 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 907              		.loc 1 2914 0
 908              		@ sp needed
 909 001c 10BD     		pop	{r4, pc}
 910              		.cfi_endproc
 911              	.LFE21:
 912              		.size	CyIntGetVector, .-CyIntGetVector
 913 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 914              		.align	2
 915              		.global	CyIntSetPriority
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntSetPriority, %function
 919              	CyIntSetPriority:
 920              	.LFB22:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 921              		.loc 1 2927 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL62:
 926 0000 70B5     		push	{r4, r5, r6, lr}
 927              		.cfi_def_cfa_offset 16
 928              		.cfi_offset 4, -16
 929              		.cfi_offset 5, -12
 930              		.cfi_offset 6, -8
 931              		.cfi_offset 14, -4
 932 0002 0400     		movs	r4, r0
 933 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 934              		.loc 1 2932 0
 935 0006 0329     		cmp	r1, #3
 936 0008 02D9     		bls	.L72
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 937              		.loc 1 2932 0 is_stmt 0 discriminator 1
 938 000a 0020     		movs	r0, #0
 939              	.LVL63:
 940 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 72


 941              	.LVL64:
 942              	.L72:
2933:Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2933 0 is_stmt 1
 944 0010 1F2C     		cmp	r4, #31
 945 0012 02D9     		bls	.L73
2933:Generated_Source\PSoC4/CyLib.c **** 
 946              		.loc 1 2933 0 is_stmt 0 discriminator 1
 947 0014 0020     		movs	r0, #0
 948 0016 FFF7FEFF 		bl	CyHalt
 949              	.LVL65:
 950              	.L73:
2935:Generated_Source\PSoC4/CyLib.c **** 
 951              		.loc 1 2935 0 is_stmt 1
 952 001a 0325     		movs	r5, #3
 953 001c 2540     		ands	r5, r4
 954 001e ED00     		lsls	r5, r5, #3
 955 0020 0635     		adds	r5, r5, #6
 956              	.LVL66:
2937:Generated_Source\PSoC4/CyLib.c **** 
 957              		.loc 1 2937 0
 958 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 959              	.LVL67:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 960              		.loc 1 2939 0
 961 0026 A408     		lsrs	r4, r4, #2
 962 0028 A400     		lsls	r4, r4, #2
 963 002a 074B     		ldr	r3, .L74
 964 002c 9C46     		mov	ip, r3
 965 002e 6444     		add	r4, r4, ip
 966 0030 2168     		ldr	r1, [r4]
 967              	.LVL68:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 968              		.loc 1 2940 0
 969 0032 0323     		movs	r3, #3
 970 0034 AB40     		lsls	r3, r3, r5
 971 0036 9943     		bics	r1, r3
 972              	.LVL69:
 973 0038 0B00     		movs	r3, r1
 974              	.LVL70:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 975              		.loc 1 2941 0
 976 003a 3100     		movs	r1, r6
 977              	.LVL71:
 978 003c A940     		lsls	r1, r1, r5
 979 003e 1943     		orrs	r1, r3
 980              	.LVL72:
2942:Generated_Source\PSoC4/CyLib.c **** 
 981              		.loc 1 2942 0
 982 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 983              		.loc 1 2944 0
 984 0042 FFF7FEFF 		bl	CyExitCriticalSection
 985              	.LVL73:
2945:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2945 0
 987              		@ sp needed
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 73


 988              	.LVL74:
 989 0046 70BD     		pop	{r4, r5, r6, pc}
 990              	.L75:
 991              		.align	2
 992              	.L74:
 993 0048 00E400E0 		.word	-536812544
 994              		.cfi_endproc
 995              	.LFE22:
 996              		.size	CyIntSetPriority, .-CyIntSetPriority
 997              		.section	.text.CyIntGetPriority,"ax",%progbits
 998              		.align	2
 999              		.global	CyIntGetPriority
 1000              		.code	16
 1001              		.thumb_func
 1002              		.type	CyIntGetPriority, %function
 1003              	CyIntGetPriority:
 1004              	.LFB23:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1005              		.loc 1 2961 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              	.LVL75:
 1010 0000 10B5     		push	{r4, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 4, -8
 1013              		.cfi_offset 14, -4
 1014 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 1015              		.loc 1 2964 0
 1016 0004 1F28     		cmp	r0, #31
 1017 0006 02D9     		bls	.L77
2964:Generated_Source\PSoC4/CyLib.c **** 
 1018              		.loc 1 2964 0 is_stmt 0 discriminator 1
 1019 0008 0020     		movs	r0, #0
 1020              	.LVL76:
 1021 000a FFF7FEFF 		bl	CyHalt
 1022              	.LVL77:
 1023              	.L77:
2966:Generated_Source\PSoC4/CyLib.c **** 
 1024              		.loc 1 2966 0 is_stmt 1
 1025 000e A308     		lsrs	r3, r4, #2
 1026 0010 9B00     		lsls	r3, r3, #2
 1027 0012 054A     		ldr	r2, .L78
 1028 0014 9446     		mov	ip, r2
 1029 0016 6344     		add	r3, r3, ip
 1030 0018 1868     		ldr	r0, [r3]
 1031 001a 0323     		movs	r3, #3
 1032 001c 1C40     		ands	r4, r3
 1033 001e E400     		lsls	r4, r4, #3
 1034 0020 0634     		adds	r4, r4, #6
 1035 0022 E040     		lsrs	r0, r0, r4
 1036              	.LVL78:
2968:Generated_Source\PSoC4/CyLib.c **** }
 1037              		.loc 1 2968 0
 1038 0024 1840     		ands	r0, r3
 1039              	.LVL79:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 74


2969:Generated_Source\PSoC4/CyLib.c **** 
 1040              		.loc 1 2969 0
 1041              		@ sp needed
 1042 0026 10BD     		pop	{r4, pc}
 1043              	.L79:
 1044              		.align	2
 1045              	.L78:
 1046 0028 00E400E0 		.word	-536812544
 1047              		.cfi_endproc
 1048              	.LFE23:
 1049              		.size	CyIntGetPriority, .-CyIntGetPriority
 1050              		.section	.text.CySoftwareReset,"ax",%progbits
 1051              		.align	2
 1052              		.global	CySoftwareReset
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	CySoftwareReset, %function
 1056              	CySoftwareReset:
 1057              	.LFB30:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1058              		.loc 1 3084 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1063              		.loc 1 3089 0
 1064 0000 034A     		ldr	r2, .L81
 1065 0002 1368     		ldr	r3, [r2]
 1066 0004 1B04     		lsls	r3, r3, #16
 1067 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1068              		.loc 1 3090 0
 1069 0008 0249     		ldr	r1, .L81+4
 1070 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1071              		.loc 1 3089 0
 1072 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1073              		.loc 1 3091 0
 1074              		@ sp needed
 1075 000e 7047     		bx	lr
 1076              	.L82:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 75


 1077              		.align	2
 1078              	.L81:
 1079 0010 0CED00E0 		.word	-536810228
 1080 0014 0400FA05 		.word	100270084
 1081              		.cfi_endproc
 1082              	.LFE30:
 1083              		.size	CySoftwareReset, .-CySoftwareReset
 1084              		.section	.text.CyDelay,"ax",%progbits
 1085              		.align	2
 1086              		.global	CyDelay
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CyDelay, %function
 1090              	CyDelay:
 1091              	.LFB31:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1092              		.loc 1 3104 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL80:
 1097 0000 10B5     		push	{r4, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 4, -8
 1100              		.cfi_offset 14, -4
 1101 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1102              		.loc 1 3105 0
 1103 0004 06E0     		b	.L84
 1104              	.LVL81:
 1105              	.L85:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1106              		.loc 1 3110 0
 1107 0006 084B     		ldr	r3, .L86
 1108 0008 5868     		ldr	r0, [r3, #4]
 1109 000a FFF7FEFF 		bl	CyDelayCycles
 1110              	.LVL82:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1111              		.loc 1 3111 0
 1112 000e 074B     		ldr	r3, .L86+4
 1113 0010 9C46     		mov	ip, r3
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 76


 1114 0012 6444     		add	r4, r4, ip
 1115              	.LVL83:
 1116              	.L84:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1117              		.loc 1 3105 0
 1118 0014 8023     		movs	r3, #128
 1119 0016 1B02     		lsls	r3, r3, #8
 1120 0018 9C42     		cmp	r4, r3
 1121 001a F4D8     		bhi	.L85
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1122              		.loc 1 3114 0
 1123 001c 024B     		ldr	r3, .L86
 1124 001e 9868     		ldr	r0, [r3, #8]
 1125 0020 6043     		muls	r0, r4
 1126 0022 FFF7FEFF 		bl	CyDelayCycles
 1127              	.LVL84:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1128              		.loc 1 3115 0
 1129              		@ sp needed
 1130              	.LVL85:
 1131 0026 10BD     		pop	{r4, pc}
 1132              	.L87:
 1133              		.align	2
 1134              	.L86:
 1135 0028 00000000 		.word	.LANCHOR1
 1136 002c 0080FFFF 		.word	-32768
 1137              		.cfi_endproc
 1138              	.LFE31:
 1139              		.size	CyDelay, .-CyDelay
 1140              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1141              		.align	2
 1142              		.global	CySysClkImoEnableWcoLock
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	CySysClkImoEnableWcoLock, %function
 1146              	CySysClkImoEnableWcoLock:
 1147              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1148              		.loc 1 175 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 8
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152 0000 70B5     		push	{r4, r5, r6, lr}
 1153              		.cfi_def_cfa_offset 16
 1154              		.cfi_offset 4, -16
 1155              		.cfi_offset 5, -12
 1156              		.cfi_offset 6, -8
 1157              		.cfi_offset 14, -4
 1158 0002 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 24
 1160              	.LVL86:
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1161              		.loc 1 186 0
 1162 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1163              	.LVL87:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 77


 1164 0008 0028     		cmp	r0, #0
 1165 000a 5DD0     		beq	.L88
 188:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 188 0
 1167 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1168              	.LVL88:
 1169 0010 0500     		movs	r5, r0
 1170              	.LVL89:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1171              		.loc 1 200 0
 1172 0012 0023     		movs	r3, #0
 1173 0014 0AE0     		b	.L90
 1174              	.LVL90:
 1175              	.L93:
 202:Generated_Source\PSoC4/CyLib.c ****                     {
 1176              		.loc 1 202 0
 1177 0016 2D4A     		ldr	r2, .L97
 1178 0018 1268     		ldr	r2, [r2]
 1179 001a 3F21     		movs	r1, #63
 1180 001c 0A40     		ands	r2, r1
 1181 001e 2C49     		ldr	r1, .L97+4
 1182 0020 C95C     		ldrb	r1, [r1, r3]
 1183 0022 8A42     		cmp	r2, r1
 1184 0024 01D1     		bne	.L91
 204:Generated_Source\PSoC4/CyLib.c ****                         break;
 1185              		.loc 1 204 0
 1186 0026 0333     		adds	r3, r3, #3
 1187              	.LVL91:
 205:Generated_Source\PSoC4/CyLib.c ****                     }
 1188              		.loc 1 205 0
 1189 0028 03E0     		b	.L92
 1190              	.LVL92:
 1191              	.L91:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1192              		.loc 1 200 0 discriminator 2
 1193 002a 0133     		adds	r3, r3, #1
 1194              	.LVL93:
 1195              	.L90:
 200:Generated_Source\PSoC4/CyLib.c ****                 {
 1196              		.loc 1 200 0 is_stmt 0 discriminator 1
 1197 002c 2D2B     		cmp	r3, #45
 1198 002e F2D9     		bls	.L93
 199:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1199              		.loc 1 199 0 is_stmt 1
 1200 0030 0323     		movs	r3, #3
 1201              	.LVL94:
 1202              	.L92:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1203              		.loc 1 222 0
 1204 0032 0021     		movs	r1, #0
 1205 0034 274A     		ldr	r2, .L97+8
 1206 0036 1160     		str	r1, [r2]
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 1207              		.loc 1 226 0
 1208 0038 274A     		ldr	r2, .L97+12
 1209 003a 1268     		ldr	r2, [r2]
 1210 003c D206     		lsls	r2, r2, #27
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 78


 1211 003e 06D1     		bne	.L94
 228:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1212              		.loc 1 228 0
 1213 0040 2548     		ldr	r0, .L97+12
 1214 0042 0268     		ldr	r2, [r0]
 1215 0044 1F31     		adds	r1, r1, #31
 1216 0046 8A43     		bics	r2, r1
 1217 0048 1339     		subs	r1, r1, #19
 1218 004a 0A43     		orrs	r2, r1
 1219 004c 0260     		str	r2, [r0]
 1220              	.L94:
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1221              		.loc 1 233 0
 1222 004e 234C     		ldr	r4, .L97+16
 1223 0050 2168     		ldr	r1, [r4]
 1224 0052 234A     		ldr	r2, .L97+20
 1225 0054 1140     		ands	r1, r2
 1226              	.LVL95:
 239:Generated_Source\PSoC4/CyLib.c **** 
 1227              		.loc 1 239 0
 1228 0056 234A     		ldr	r2, .L97+24
 1229 0058 5A43     		muls	r2, r3
 1230 005a 8023     		movs	r3, #128
 1231              	.LVL96:
 1232 005c DB01     		lsls	r3, r3, #7
 1233 005e 9C46     		mov	ip, r3
 1234 0060 6244     		add	r2, r2, ip
 1235 0062 D20B     		lsrs	r2, r2, #15
 1236 0064 013A     		subs	r2, r2, #1
 1237 0066 5205     		lsls	r2, r2, #21
 1238 0068 520D     		lsrs	r2, r2, #21
 1239 006a 0B00     		movs	r3, r1
 1240 006c 1343     		orrs	r3, r2
 1241              	.LVL97:
 242:Generated_Source\PSoC4/CyLib.c **** 
 1242              		.loc 1 242 0
 1243 006e A022     		movs	r2, #160
 1244 0070 5203     		lsls	r2, r2, #13
 1245 0072 1343     		orrs	r3, r2
 1246              	.LVL98:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1247              		.loc 1 244 0
 1248 0074 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1249              		.loc 1 246 0
 1250 0076 1C4B     		ldr	r3, .L97+28
 1251              	.LVL99:
 1252 0078 1B68     		ldr	r3, [r3]
 1253 007a 0193     		str	r3, [sp, #4]
 1254              	.LVL100:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1255              		.loc 1 247 0
 1256 007c 3020     		movs	r0, #48
 1257 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1258              	.LVL101:
 248:Generated_Source\PSoC4/CyLib.c **** 
 1259              		.loc 1 248 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 79


 1260 0082 1A4A     		ldr	r2, .L97+32
 1261 0084 1368     		ldr	r3, [r2]
 1262 0086 8021     		movs	r1, #128
 1263 0088 C905     		lsls	r1, r1, #23
 1264 008a 0B43     		orrs	r3, r1
 1265 008c 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1266              		.loc 1 250 0
 1267 008e 2668     		ldr	r6, [r4]
 1268 0090 174B     		ldr	r3, .L97+36
 1269 0092 1E40     		ands	r6, r3
 1270              	.LVL102:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1271              		.loc 1 183 0
 1272 0094 0024     		movs	r4, #0
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1273              		.loc 1 252 0
 1274 0096 07E0     		b	.L95
 1275              	.LVL103:
 1276              	.L96:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1277              		.loc 1 254 0
 1278 0098 0120     		movs	r0, #1
 1279 009a FFF7FEFF 		bl	CyDelay
 1280              	.LVL104:
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1281              		.loc 1 255 0
 1282 009e 1034     		adds	r4, r4, #16
 1283              	.LVL105:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1284              		.loc 1 256 0
 1285 00a0 A305     		lsls	r3, r4, #22
 1286 00a2 3343     		orrs	r3, r6
 1287 00a4 0D4A     		ldr	r2, .L97+16
 1288 00a6 1360     		str	r3, [r2]
 1289              	.LVL106:
 1290              	.L95:
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1291              		.loc 1 252 0
 1292 00a8 EE2C     		cmp	r4, #238
 1293 00aa F5D9     		bls	.L96
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1294              		.loc 1 259 0
 1295 00ac 0120     		movs	r0, #1
 1296 00ae FFF7FEFF 		bl	CyDelay
 1297              	.LVL107:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1298              		.loc 1 260 0
 1299 00b2 FF23     		movs	r3, #255
 1300 00b4 9B05     		lsls	r3, r3, #22
 1301 00b6 1E43     		orrs	r6, r3
 1302              	.LVL108:
 1303 00b8 084B     		ldr	r3, .L97+16
 1304 00ba 1E60     		str	r6, [r3]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1305              		.loc 1 263 0
 1306 00bc 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 80


 1307 00be 0A4B     		ldr	r3, .L97+28
 1308 00c0 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1309              		.loc 1 265 0
 1310 00c2 2800     		movs	r0, r5
 1311 00c4 FFF7FEFF 		bl	CyExitCriticalSection
 1312              	.LVL109:
 1313              	.L88:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 267 0
 1315 00c8 02B0     		add	sp, sp, #8
 1316              		@ sp needed
 1317 00ca 70BD     		pop	{r4, r5, r6, pc}
 1318              	.L98:
 1319              		.align	2
 1320              	.L97:
 1321 00cc 2CFF0B40 		.word	1074528044
 1322 00d0 00000000 		.word	.LANCHOR0
 1323 00d4 28FF0B40 		.word	1074528040
 1324 00d8 34FF0B40 		.word	1074528052
 1325 00dc 08002240 		.word	1075970056
 1326 00e0 00F800C0 		.word	-1073678336
 1327 00e4 40420F00 		.word	1000000
 1328 00e8 30001040 		.word	1074790448
 1329 00ec 00002240 		.word	1075970048
 1330 00f0 FFFF3FC0 		.word	-1069547521
 1331              		.cfi_endproc
 1332              	.LFE3:
 1333              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1334              		.section	.text.CySysClkImoStart,"ax",%progbits
 1335              		.align	2
 1336              		.global	CySysClkImoStart
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	CySysClkImoStart, %function
 1340              	CySysClkImoStart:
 1341              	.LFB1:
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 1342              		.loc 1 106 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346 0000 10B5     		push	{r4, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 4, -8
 1349              		.cfi_offset 14, -4
 107:Generated_Source\PSoC4/CyLib.c **** 
 1350              		.loc 1 107 0
 1351 0002 044A     		ldr	r2, .L100
 1352 0004 1368     		ldr	r3, [r2]
 1353 0006 8021     		movs	r1, #128
 1354 0008 0906     		lsls	r1, r1, #24
 1355 000a 0B43     		orrs	r3, r1
 1356 000c 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 1357              		.loc 1 111 0
 1358 000e FFF7FEFF 		bl	CySysClkImoEnableWcoLock
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 81


 1359              	.LVL110:
 122:Generated_Source\PSoC4/CyLib.c **** 
 1360              		.loc 1 122 0
 1361              		@ sp needed
 1362 0012 10BD     		pop	{r4, pc}
 1363              	.L101:
 1364              		.align	2
 1365              	.L100:
 1366 0014 08010B40 		.word	1074462984
 1367              		.cfi_endproc
 1368              	.LFE1:
 1369              		.size	CySysClkImoStart, .-CySysClkImoStart
 1370              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1371              		.align	2
 1372              		.global	CySysClkWriteImoFreq
 1373              		.code	16
 1374              		.thumb_func
 1375              		.type	CySysClkWriteImoFreq, %function
 1376              	CySysClkWriteImoFreq:
 1377              	.LFB10:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1378              		.loc 1 818 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 24
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              	.LVL111:
 1383 0000 30B5     		push	{r4, r5, lr}
 1384              		.cfi_def_cfa_offset 12
 1385              		.cfi_offset 4, -12
 1386              		.cfi_offset 5, -8
 1387              		.cfi_offset 14, -4
 1388 0002 87B0     		sub	sp, sp, #28
 1389              		.cfi_def_cfa_offset 40
 1390 0004 0400     		movs	r4, r0
 1391              	.LVL112:
 840:Generated_Source\PSoC4/CyLib.c **** 
 1392              		.loc 1 840 0
 1393 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1394              	.LVL113:
 1395 000a 0500     		movs	r5, r0
 1396              	.LVL114:
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1397              		.loc 1 843 0
 1398 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1399              	.LVL115:
 1400 0010 0028     		cmp	r0, #0
 1401 0012 03D0     		beq	.L105
 1402              	.LVL116:
 846:Generated_Source\PSoC4/CyLib.c ****             }
 1403              		.loc 1 846 0
 1404 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1405              	.LVL117:
 845:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1406              		.loc 1 845 0
 1407 0018 0121     		movs	r1, #1
 1408 001a 00E0     		b	.L103
 1409              	.LVL118:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 82


 1410              	.L105:
 830:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1411              		.loc 1 830 0
 1412 001c 0021     		movs	r1, #0
 1413              	.LVL119:
 1414              	.L103:
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1415              		.loc 1 874 0
 1416 001e 104B     		ldr	r3, .L106
 1417 0020 1B68     		ldr	r3, [r3]
 1418 0022 0093     		str	r3, [sp]
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1419              		.loc 1 875 0
 1420 0024 0F4B     		ldr	r3, .L106+4
 1421 0026 1B68     		ldr	r3, [r3]
 1422 0028 0193     		str	r3, [sp, #4]
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1423              		.loc 1 876 0
 1424 002a 033C     		subs	r4, r4, #3
 1425              	.LVL120:
 1426 002c 0E4B     		ldr	r3, .L106+8
 1427 002e 1B5D     		ldrb	r3, [r3, r4]
 1428 0030 0293     		str	r3, [sp, #8]
 877:Generated_Source\PSoC4/CyLib.c **** 
 1429              		.loc 1 877 0
 1430 0032 0E4B     		ldr	r3, .L106+12
 1431 0034 1B68     		ldr	r3, [r3]
 1432 0036 0393     		str	r3, [sp, #12]
 879:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1433              		.loc 1 879 0
 1434 0038 04AA     		add	r2, sp, #16
 1435 003a 0D4B     		ldr	r3, .L106+16
 1436 003c 0493     		str	r3, [sp, #16]
 882:Generated_Source\PSoC4/CyLib.c **** 
 1437              		.loc 1 882 0
 1438 003e 6B46     		mov	r3, sp
 1439 0040 0593     		str	r3, [sp, #20]
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1440              		.loc 1 884 0
 1441 0042 0C4B     		ldr	r3, .L106+20
 1442 0044 1A60     		str	r2, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1443              		.loc 1 885 0
 1444 0046 0C48     		ldr	r0, .L106+24
 1445 0048 0C4A     		ldr	r2, .L106+28
 1446 004a 1060     		str	r0, [r2]
 886:Generated_Source\PSoC4/CyLib.c **** 
 1447              		.loc 1 886 0
 1448 004c 1B68     		ldr	r3, [r3]
 984:Generated_Source\PSoC4/CyLib.c ****             {
 1449              		.loc 1 984 0
 1450 004e 0129     		cmp	r1, #1
 1451 0050 01D1     		bne	.L104
 986:Generated_Source\PSoC4/CyLib.c ****             }
 1452              		.loc 1 986 0
 1453 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1454              	.LVL121:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 83


 1455              	.L104:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1456              		.loc 1 997 0
 1457 0056 2800     		movs	r0, r5
 1458 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1459              	.LVL122:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1460              		.loc 1 998 0
 1461 005c 07B0     		add	sp, sp, #28
 1462              		@ sp needed
 1463              	.LVL123:
 1464              	.LVL124:
 1465 005e 30BD     		pop	{r4, r5, pc}
 1466              	.L107:
 1467              		.align	2
 1468              	.L106:
 1469 0060 08010B40 		.word	1074462984
 1470 0064 00010B40 		.word	1074462976
 1471 0068 00000000 		.word	.LANCHOR0
 1472 006c 30001040 		.word	1074790448
 1473 0070 B6EA0000 		.word	60086
 1474 0074 08001040 		.word	1074790408
 1475 0078 17000080 		.word	-2147483625
 1476 007c 04001040 		.word	1074790404
 1477              		.cfi_endproc
 1478              	.LFE10:
 1479              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1480              		.section	.text.CyDelayUs,"ax",%progbits
 1481              		.align	2
 1482              		.global	CyDelayUs
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CyDelayUs, %function
 1486              	CyDelayUs:
 1487              	.LFB32:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1488              		.loc 1 3127 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL125:
 1493 0000 10B5     		push	{r4, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 4, -8
 1496              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 84


 1497              		.loc 1 3128 0
 1498 0002 034B     		ldr	r3, .L109
 1499 0004 1B7B     		ldrb	r3, [r3, #12]
 1500 0006 5843     		muls	r0, r3
 1501              	.LVL126:
 1502 0008 FFF7FEFF 		bl	CyDelayCycles
 1503              	.LVL127:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1504              		.loc 1 3129 0
 1505              		@ sp needed
 1506 000c 10BD     		pop	{r4, pc}
 1507              	.L110:
 1508 000e C046     		.align	2
 1509              	.L109:
 1510 0010 00000000 		.word	.LANCHOR1
 1511              		.cfi_endproc
 1512              	.LFE32:
 1513              		.size	CyDelayUs, .-CyDelayUs
 1514              		.section	.text.CySysLvdEnable,"ax",%progbits
 1515              		.align	2
 1516              		.global	CySysLvdEnable
 1517              		.code	16
 1518              		.thumb_func
 1519              		.type	CySysLvdEnable, %function
 1520              	CySysLvdEnable:
 1521              	.LFB11:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1522              		.loc 1 2663 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              	.LVL128:
 1527 0000 70B5     		push	{r4, r5, r6, lr}
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 1533 0002 0300     		movs	r3, r0
2665:Generated_Source\PSoC4/CyLib.c **** 
 1534              		.loc 1 2665 0
 1535 0004 0D4C     		ldr	r4, .L112
 1536 0006 2268     		ldr	r2, [r4]
 1537 0008 0225     		movs	r5, #2
 1538 000a AA43     		bics	r2, r5
 1539 000c 2260     		str	r2, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1540              		.loc 1 2668 0
 1541 000e 0C4A     		ldr	r2, .L112+4
 1542 0010 1168     		ldr	r1, [r2]
 1543 0012 1E20     		movs	r0, #30
 1544              	.LVL129:
 1545 0014 8143     		bics	r1, r0
2669:Generated_Source\PSoC4/CyLib.c **** 
 1546              		.loc 1 2669 0
 1547 0016 5B00     		lsls	r3, r3, #1
 1548              	.LVL130:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 85


 1549 0018 1840     		ands	r0, r3
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1550              		.loc 1 2668 0
 1551 001a 0843     		orrs	r0, r1
 1552 001c 1060     		str	r0, [r2]
2672:Generated_Source\PSoC4/CyLib.c **** 
 1553              		.loc 1 2672 0
 1554 001e 1168     		ldr	r1, [r2]
 1555 0020 0123     		movs	r3, #1
 1556 0022 0B43     		orrs	r3, r1
 1557 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1558              		.loc 1 2675 0
 1559 0026 FA20     		movs	r0, #250
 1560 0028 8000     		lsls	r0, r0, #2
 1561 002a FFF7FEFF 		bl	CyDelayUs
 1562              	.LVL131:
2678:Generated_Source\PSoC4/CyLib.c **** 
 1563              		.loc 1 2678 0
 1564 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1565              	.LVL132:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1566              		.loc 1 2681 0
 1567 0032 2368     		ldr	r3, [r4]
 1568 0034 1D43     		orrs	r5, r3
 1569 0036 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1570              		.loc 1 2682 0
 1571              		@ sp needed
 1572 0038 70BD     		pop	{r4, r5, r6, pc}
 1573              	.L113:
 1574 003a C046     		.align	2
 1575              	.L112:
 1576 003c 08000B40 		.word	1074462728
 1577 0040 18000B40 		.word	1074462744
 1578              		.cfi_endproc
 1579              	.LFE11:
 1580              		.size	CySysLvdEnable, .-CySysLvdEnable
 1581              		.global	__aeabi_uidiv
 1582              		.section	.text.CyDelayFreq,"ax",%progbits
 1583              		.align	2
 1584              		.global	CyDelayFreq
 1585              		.code	16
 1586              		.thumb_func
 1587              		.type	CyDelayFreq, %function
 1588              	CyDelayFreq:
 1589              	.LFB33:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 86


3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1590              		.loc 1 3141 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              	.LVL133:
 1595 0000 70B5     		push	{r4, r5, r6, lr}
 1596              		.cfi_def_cfa_offset 16
 1597              		.cfi_offset 4, -16
 1598              		.cfi_offset 5, -12
 1599              		.cfi_offset 6, -8
 1600              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1601              		.loc 1 3142 0
 1602 0002 0028     		cmp	r0, #0
 1603 0004 02D0     		beq	.L115
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1604              		.loc 1 3144 0
 1605 0006 0C4B     		ldr	r3, .L117
 1606 0008 1861     		str	r0, [r3, #16]
 1607 000a 02E0     		b	.L116
 1608              	.L115:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1609              		.loc 1 3148 0
 1610 000c 0B4A     		ldr	r2, .L117+4
 1611 000e 0A4B     		ldr	r3, .L117
 1612 0010 1A61     		str	r2, [r3, #16]
 1613              	.L116:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1614              		.loc 1 3151 0
 1615 0012 094C     		ldr	r4, .L117
 1616 0014 2569     		ldr	r5, [r4, #16]
 1617 0016 0A4B     		ldr	r3, .L117+8
 1618 0018 E818     		adds	r0, r5, r3
 1619              	.LVL134:
 1620 001a 0A49     		ldr	r1, .L117+12
 1621 001c FFF7FEFF 		bl	__aeabi_uidiv
 1622              	.LVL135:
 1623 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1624              		.loc 1 3152 0
 1625 0022 094B     		ldr	r3, .L117+16
 1626 0024 E818     		adds	r0, r5, r3
 1627 0026 FA21     		movs	r1, #250
 1628 0028 8900     		lsls	r1, r1, #2
 1629 002a FFF7FEFF 		bl	__aeabi_uidiv
 1630              	.LVL136:
 1631 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1632              		.loc 1 3153 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 87


 1633 0030 C003     		lsls	r0, r0, #15
 1634 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1635              		.loc 1 3154 0
 1636              		@ sp needed
 1637 0034 70BD     		pop	{r4, r5, r6, pc}
 1638              	.L118:
 1639 0036 C046     		.align	2
 1640              	.L117:
 1641 0038 00000000 		.word	.LANCHOR1
 1642 003c 005A6202 		.word	40000000
 1643 0040 3F420F00 		.word	999999
 1644 0044 40420F00 		.word	1000000
 1645 0048 E7030000 		.word	999
 1646              		.cfi_endproc
 1647              	.LFE33:
 1648              		.size	CyDelayFreq, .-CyDelayFreq
 1649              		.section	.text.CySysTickStop,"ax",%progbits
 1650              		.align	2
 1651              		.global	CySysTickStop
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CySysTickStop, %function
 1655              	CySysTickStop:
 1656              	.LFB37:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 88


3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 89


3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
 1657              		.loc 1 3249 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1662              		.loc 1 3250 0
 1663 0000 024A     		ldr	r2, .L120
 1664 0002 1368     		ldr	r3, [r2]
 1665 0004 0121     		movs	r1, #1
 1666 0006 8B43     		bics	r3, r1
 1667 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 1668              		.loc 1 3251 0
 1669              		@ sp needed
 1670 000a 7047     		bx	lr
 1671              	.L121:
 1672              		.align	2
 1673              	.L120:
 1674 000c 10E000E0 		.word	-536813552
 1675              		.cfi_endproc
 1676              	.LFE37:
 1677              		.size	CySysTickStop, .-CySysTickStop
 1678              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1679              		.align	2
 1680              		.global	CySysTickEnableInterrupt
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CySysTickEnableInterrupt, %function
 1684              	CySysTickEnableInterrupt:
 1685              	.LFB38:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1686              		.loc 1 3265 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 90


 1691              		.loc 1 3266 0
 1692 0000 024A     		ldr	r2, .L123
 1693 0002 1168     		ldr	r1, [r2]
 1694 0004 0223     		movs	r3, #2
 1695 0006 0B43     		orrs	r3, r1
 1696 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 3267 0
 1698              		@ sp needed
 1699 000a 7047     		bx	lr
 1700              	.L124:
 1701              		.align	2
 1702              	.L123:
 1703 000c 10E000E0 		.word	-536813552
 1704              		.cfi_endproc
 1705              	.LFE38:
 1706              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1707              		.section	.text.CySysTickEnable,"ax",%progbits
 1708              		.align	2
 1709              		.global	CySysTickEnable
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	CySysTickEnable, %function
 1713              	CySysTickEnable:
 1714              	.LFB36:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1715              		.loc 1 3232 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719 0000 10B5     		push	{r4, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 4, -8
 1722              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1723              		.loc 1 3233 0
 1724 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1725              	.LVL137:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1726              		.loc 1 3234 0
 1727 0006 034A     		ldr	r2, .L126
 1728 0008 1168     		ldr	r1, [r2]
 1729 000a 0123     		movs	r3, #1
 1730 000c 0B43     		orrs	r3, r1
 1731 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1732              		.loc 1 3235 0
 1733              		@ sp needed
 1734 0010 10BD     		pop	{r4, pc}
 1735              	.L127:
 1736 0012 C046     		.align	2
 1737              	.L126:
 1738 0014 10E000E0 		.word	-536813552
 1739              		.cfi_endproc
 1740              	.LFE36:
 1741              		.size	CySysTickEnable, .-CySysTickEnable
 1742              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 91


 1743              		.align	2
 1744              		.global	CySysTickDisableInterrupt
 1745              		.code	16
 1746              		.thumb_func
 1747              		.type	CySysTickDisableInterrupt, %function
 1748              	CySysTickDisableInterrupt:
 1749              	.LFB39:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1750              		.loc 1 3281 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 1754              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1755              		.loc 1 3282 0
 1756 0000 024A     		ldr	r2, .L129
 1757 0002 1368     		ldr	r3, [r2]
 1758 0004 0221     		movs	r1, #2
 1759 0006 8B43     		bics	r3, r1
 1760 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1761              		.loc 1 3283 0
 1762              		@ sp needed
 1763 000a 7047     		bx	lr
 1764              	.L130:
 1765              		.align	2
 1766              	.L129:
 1767 000c 10E000E0 		.word	-536813552
 1768              		.cfi_endproc
 1769              	.LFE39:
 1770              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1771              		.section	.text.CySysTickSetReload,"ax",%progbits
 1772              		.align	2
 1773              		.global	CySysTickSetReload
 1774              		.code	16
 1775              		.thumb_func
 1776              		.type	CySysTickSetReload, %function
 1777              	CySysTickSetReload:
 1778              	.LFB40:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 92


3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1779              		.loc 1 3298 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
 1783              		@ link register save eliminated.
 1784              	.LVL138:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1785              		.loc 1 3299 0
 1786 0000 0002     		lsls	r0, r0, #8
 1787              	.LVL139:
 1788 0002 000A     		lsrs	r0, r0, #8
 1789 0004 014B     		ldr	r3, .L132
 1790 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 1791              		.loc 1 3300 0
 1792              		@ sp needed
 1793 0008 7047     		bx	lr
 1794              	.L133:
 1795 000a C046     		.align	2
 1796              	.L132:
 1797 000c 14E000E0 		.word	-536813548
 1798              		.cfi_endproc
 1799              	.LFE40:
 1800              		.size	CySysTickSetReload, .-CySysTickSetReload
 1801              		.section	.text.CySysTickGetReload,"ax",%progbits
 1802              		.align	2
 1803              		.global	CySysTickGetReload
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CySysTickGetReload, %function
 1807              	CySysTickGetReload:
 1808              	.LFB41:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1809              		.loc 1 3314 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 93


 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1814              		.loc 1 3315 0
 1815 0000 024B     		ldr	r3, .L135
 1816 0002 1868     		ldr	r0, [r3]
 1817 0004 0002     		lsls	r0, r0, #8
 1818 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1819              		.loc 1 3316 0
 1820              		@ sp needed
 1821 0008 7047     		bx	lr
 1822              	.L136:
 1823 000a C046     		.align	2
 1824              	.L135:
 1825 000c 14E000E0 		.word	-536813548
 1826              		.cfi_endproc
 1827              	.LFE41:
 1828              		.size	CySysTickGetReload, .-CySysTickGetReload
 1829              		.section	.text.CySysTickGetValue,"ax",%progbits
 1830              		.align	2
 1831              		.global	CySysTickGetValue
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	CySysTickGetValue, %function
 1835              	CySysTickGetValue:
 1836              	.LFB42:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 1837              		.loc 1 3330 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1842              		.loc 1 3331 0
 1843 0000 024B     		ldr	r3, .L138
 1844 0002 1868     		ldr	r0, [r3]
 1845 0004 0002     		lsls	r0, r0, #8
 1846 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1847              		.loc 1 3332 0
 1848              		@ sp needed
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 94


 1849 0008 7047     		bx	lr
 1850              	.L139:
 1851 000a C046     		.align	2
 1852              	.L138:
 1853 000c 18E000E0 		.word	-536813544
 1854              		.cfi_endproc
 1855              	.LFE42:
 1856              		.size	CySysTickGetValue, .-CySysTickGetValue
 1857              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1858              		.align	2
 1859              		.global	CySysTickSetClockSource
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CySysTickSetClockSource, %function
 1863              	CySysTickSetClockSource:
 1864              	.LFB43:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 1865              		.loc 1 3362 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
 1870              	.LVL140:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1871              		.loc 1 3363 0
 1872 0000 0128     		cmp	r0, #1
 1873 0002 05D1     		bne	.L141
3364:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 95


3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1874              		.loc 1 3365 0
 1875 0004 054A     		ldr	r2, .L143
 1876 0006 1168     		ldr	r1, [r2]
 1877 0008 0423     		movs	r3, #4
 1878 000a 0B43     		orrs	r3, r1
 1879 000c 1360     		str	r3, [r2]
 1880 000e 04E0     		b	.L140
 1881              	.L141:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1882              		.loc 1 3369 0
 1883 0010 024A     		ldr	r2, .L143
 1884 0012 1368     		ldr	r3, [r2]
 1885 0014 0421     		movs	r1, #4
 1886 0016 8B43     		bics	r3, r1
 1887 0018 1360     		str	r3, [r2]
 1888              	.L140:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 1889              		.loc 1 3371 0
 1890              		@ sp needed
 1891 001a 7047     		bx	lr
 1892              	.L144:
 1893              		.align	2
 1894              	.L143:
 1895 001c 10E000E0 		.word	-536813552
 1896              		.cfi_endproc
 1897              	.LFE43:
 1898              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1899              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1900              		.align	2
 1901              		.global	CySysTickGetClockSource
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	CySysTickGetClockSource, %function
 1905              	CySysTickGetClockSource:
 1906              	.LFB44:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 1907              		.loc 1 3387 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 96


 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 0
 1910              		@ frame_needed = 0, uses_anonymous_args = 0
 1911              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1912              		.loc 1 3388 0
 1913 0000 024B     		ldr	r3, .L146
 1914 0002 1868     		ldr	r0, [r3]
 1915 0004 8008     		lsrs	r0, r0, #2
 1916 0006 0123     		movs	r3, #1
 1917 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 1918              		.loc 1 3389 0
 1919              		@ sp needed
 1920 000a 7047     		bx	lr
 1921              	.L147:
 1922              		.align	2
 1923              	.L146:
 1924 000c 10E000E0 		.word	-536813552
 1925              		.cfi_endproc
 1926              	.LFE44:
 1927              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1928              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1929              		.align	2
 1930              		.global	CySysTickGetCountFlag
 1931              		.code	16
 1932              		.thumb_func
 1933              		.type	CySysTickGetCountFlag, %function
 1934              	CySysTickGetCountFlag:
 1935              	.LFB45:
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1936              		.loc 1 3410 0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 0, uses_anonymous_args = 0
 1940              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 97


 1941              		.loc 1 3411 0
 1942 0000 024B     		ldr	r3, .L149
 1943 0002 1868     		ldr	r0, [r3]
 1944 0004 000C     		lsrs	r0, r0, #16
 1945 0006 0123     		movs	r3, #1
 1946 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 1947              		.loc 1 3412 0
 1948              		@ sp needed
 1949 000a 7047     		bx	lr
 1950              	.L150:
 1951              		.align	2
 1952              	.L149:
 1953 000c 10E000E0 		.word	-536813552
 1954              		.cfi_endproc
 1955              	.LFE45:
 1956              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1957              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1958              		.align	2
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	CySysTickServiceCallbacks, %function
 1962              	CySysTickServiceCallbacks:
 1963              	.LFB49:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 98


3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1964              		.loc 1 3495 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968 0000 10B5     		push	{r4, lr}
 1969              		.cfi_def_cfa_offset 8
 1970              		.cfi_offset 4, -8
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 99


 1971              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1972              		.loc 1 3499 0
 1973 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1974              	.LVL141:
 1975 0006 0128     		cmp	r0, #1
 1976 0008 0BD1     		bne	.L151
 1977 000a 07E0     		b	.L156
 1978              	.LVL142:
 1979              	.L155:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1980              		.loc 1 3503 0
 1981 000c A300     		lsls	r3, r4, #2
 1982 000e 054A     		ldr	r2, .L157
 1983 0010 9B58     		ldr	r3, [r3, r2]
 1984 0012 002B     		cmp	r3, #0
 1985 0014 00D0     		beq	.L154
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1986              		.loc 1 3505 0
 1987 0016 9847     		blx	r3
 1988              	.LVL143:
 1989              	.L154:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1990              		.loc 1 3501 0 discriminator 2
 1991 0018 0134     		adds	r4, r4, #1
 1992              	.LVL144:
 1993 001a 00E0     		b	.L152
 1994              	.LVL145:
 1995              	.L156:
 1996 001c 0024     		movs	r4, #0
 1997              	.L152:
 1998              	.LVL146:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1999              		.loc 1 3501 0 is_stmt 0 discriminator 1
 2000 001e 042C     		cmp	r4, #4
 2001 0020 F4D9     		bls	.L155
 2002              	.LVL147:
 2003              	.L151:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2004              		.loc 1 3509 0 is_stmt 1
 2005              		@ sp needed
 2006 0022 10BD     		pop	{r4, pc}
 2007              	.L158:
 2008              		.align	2
 2009              	.L157:
 2010 0024 00000000 		.word	.LANCHOR2
 2011              		.cfi_endproc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 100


 2012              	.LFE49:
 2013              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2014              		.section	.text.CySysTickClear,"ax",%progbits
 2015              		.align	2
 2016              		.global	CySysTickClear
 2017              		.code	16
 2018              		.thumb_func
 2019              		.type	CySysTickClear, %function
 2020              	CySysTickClear:
 2021              	.LFB46:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2022              		.loc 1 3423 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 0
 2025              		@ frame_needed = 0, uses_anonymous_args = 0
 2026              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2027              		.loc 1 3424 0
 2028 0000 0022     		movs	r2, #0
 2029 0002 014B     		ldr	r3, .L160
 2030 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2031              		.loc 1 3425 0
 2032              		@ sp needed
 2033 0006 7047     		bx	lr
 2034              	.L161:
 2035              		.align	2
 2036              	.L160:
 2037 0008 18E000E0 		.word	-536813544
 2038              		.cfi_endproc
 2039              	.LFE46:
 2040              		.size	CySysTickClear, .-CySysTickClear
 2041              		.section	.text.CySysTickInit,"ax",%progbits
 2042              		.align	2
 2043              		.global	CySysTickInit
 2044              		.code	16
 2045              		.thumb_func
 2046              		.type	CySysTickInit, %function
 2047              	CySysTickInit:
 2048              	.LFB35:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2049              		.loc 1 3202 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053 0000 10B5     		push	{r4, lr}
 2054              		.cfi_def_cfa_offset 8
 2055              		.cfi_offset 4, -8
 2056              		.cfi_offset 14, -4
 2057              	.LVL148:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2058              		.loc 1 3205 0
 2059 0002 0023     		movs	r3, #0
 2060 0004 04E0     		b	.L163
 2061              	.LVL149:
 2062              	.L164:
3207:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 101


 2063              		.loc 1 3207 0 discriminator 3
 2064 0006 9900     		lsls	r1, r3, #2
 2065 0008 0020     		movs	r0, #0
 2066 000a 0B4A     		ldr	r2, .L165
 2067 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2068              		.loc 1 3205 0 discriminator 3
 2069 000e 0133     		adds	r3, r3, #1
 2070              	.LVL150:
 2071              	.L163:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2072              		.loc 1 3205 0 is_stmt 0 discriminator 1
 2073 0010 042B     		cmp	r3, #4
 2074 0012 F8D9     		bls	.L164
3210:Generated_Source\PSoC4/CyLib.c **** 
 2075              		.loc 1 3210 0 is_stmt 1
 2076 0014 0949     		ldr	r1, .L165+4
 2077 0016 0F20     		movs	r0, #15
 2078 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2079              	.LVL151:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2080              		.loc 1 3213 0
 2081 001c 0120     		movs	r0, #1
 2082 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2083              	.LVL152:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2084              		.loc 1 3216 0
 2085 0022 074B     		ldr	r3, .L165+8
 2086 0024 1869     		ldr	r0, [r3, #16]
 2087 0026 FA21     		movs	r1, #250
 2088 0028 8900     		lsls	r1, r1, #2
 2089 002a FFF7FEFF 		bl	__aeabi_uidiv
 2090              	.LVL153:
 2091 002e FFF7FEFF 		bl	CySysTickSetReload
 2092              	.LVL154:
3217:Generated_Source\PSoC4/CyLib.c **** }
 2093              		.loc 1 3217 0
 2094 0032 FFF7FEFF 		bl	CySysTickClear
 2095              	.LVL155:
3218:Generated_Source\PSoC4/CyLib.c **** 
 2096              		.loc 1 3218 0
 2097              		@ sp needed
 2098 0036 10BD     		pop	{r4, pc}
 2099              	.L166:
 2100              		.align	2
 2101              	.L165:
 2102 0038 00000000 		.word	.LANCHOR2
 2103 003c 00000000 		.word	CySysTickServiceCallbacks
 2104 0040 00000000 		.word	.LANCHOR1
 2105              		.cfi_endproc
 2106              	.LFE35:
 2107              		.size	CySysTickInit, .-CySysTickInit
 2108              		.section	.text.CySysTickStart,"ax",%progbits
 2109              		.align	2
 2110              		.global	CySysTickStart
 2111              		.code	16
 2112              		.thumb_func
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 102


 2113              		.type	CySysTickStart, %function
 2114              	CySysTickStart:
 2115              	.LFB34:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2116              		.loc 1 3173 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 0
 2119              		@ frame_needed = 0, uses_anonymous_args = 0
 2120 0000 10B5     		push	{r4, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 4, -8
 2123              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 2124              		.loc 1 3174 0
 2125 0002 064B     		ldr	r3, .L169
 2126 0004 5B69     		ldr	r3, [r3, #20]
 2127 0006 002B     		cmp	r3, #0
 2128 0008 04D1     		bne	.L168
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2129              		.loc 1 3176 0
 2130 000a FFF7FEFF 		bl	CySysTickInit
 2131              	.LVL156:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 2132              		.loc 1 3177 0
 2133 000e 0122     		movs	r2, #1
 2134 0010 024B     		ldr	r3, .L169
 2135 0012 5A61     		str	r2, [r3, #20]
 2136              	.L168:
3180:Generated_Source\PSoC4/CyLib.c **** }
 2137              		.loc 1 3180 0
 2138 0014 FFF7FEFF 		bl	CySysTickEnable
 2139              	.LVL157:
3181:Generated_Source\PSoC4/CyLib.c **** 
 2140              		.loc 1 3181 0
 2141              		@ sp needed
 2142 0018 10BD     		pop	{r4, pc}
 2143              	.L170:
 2144 001a C046     		.align	2
 2145              	.L169:
 2146 001c 00000000 		.word	.LANCHOR2
 2147              		.cfi_endproc
 2148              	.LFE34:
 2149              		.size	CySysTickStart, .-CySysTickStart
 2150              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2151              		.align	2
 2152              		.global	CySysTickSetCallback
 2153              		.code	16
 2154              		.thumb_func
 2155              		.type	CySysTickSetCallback, %function
 2156              	CySysTickSetCallback:
 2157              	.LFB47:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2158              		.loc 1 3458 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 0, uses_anonymous_args = 0
 2162              		@ link register save eliminated.
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 103


 2163              	.LVL158:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2164              		.loc 1 3461 0
 2165 0000 024A     		ldr	r2, .L172
 2166 0002 8300     		lsls	r3, r0, #2
 2167 0004 9858     		ldr	r0, [r3, r2]
 2168              	.LVL159:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2169              		.loc 1 3462 0
 2170 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2171              		.loc 1 3464 0
 2172              		@ sp needed
 2173 0008 7047     		bx	lr
 2174              	.L173:
 2175 000a C046     		.align	2
 2176              	.L172:
 2177 000c 00000000 		.word	.LANCHOR2
 2178              		.cfi_endproc
 2179              	.LFE47:
 2180              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2181              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2182              		.align	2
 2183              		.global	CySysTickGetCallback
 2184              		.code	16
 2185              		.thumb_func
 2186              		.type	CySysTickGetCallback, %function
 2187              	CySysTickGetCallback:
 2188              	.LFB48:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2189              		.loc 1 3482 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
 2194              	.LVL160:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2195              		.loc 1 3483 0
 2196 0000 8000     		lsls	r0, r0, #2
 2197              	.LVL161:
 2198 0002 014B     		ldr	r3, .L175
 2199 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2200              		.loc 1 3484 0
 2201              		@ sp needed
 2202 0006 7047     		bx	lr
 2203              	.L176:
 2204              		.align	2
 2205              	.L175:
 2206 0008 00000000 		.word	.LANCHOR2
 2207              		.cfi_endproc
 2208              	.LFE48:
 2209              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2210              		.section	.text.CyGetUniqueId,"ax",%progbits
 2211              		.align	2
 2212              		.global	CyGetUniqueId
 2213              		.code	16
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 104


 2214              		.thumb_func
 2215              		.type	CyGetUniqueId, %function
 2216              	CyGetUniqueId:
 2217              	.LFB50:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2218              		.loc 1 3527 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              		@ link register save eliminated.
 2223              	.LVL162:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2224              		.loc 1 3529 0
 2225 0000 134B     		ldr	r3, .L178
 2226 0002 1B78     		ldrb	r3, [r3]
 2227 0004 DAB2     		uxtb	r2, r3
 2228 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2229              		.loc 1 3530 0
 2230 0008 124B     		ldr	r3, .L178+4
 2231 000a 1B78     		ldrb	r3, [r3]
 2232 000c 1B02     		lsls	r3, r3, #8
 2233 000e 1343     		orrs	r3, r2
 2234 0010 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2235              		.loc 1 3531 0
 2236 0012 114A     		ldr	r2, .L178+8
 2237 0014 1278     		ldrb	r2, [r2]
 2238 0016 1204     		lsls	r2, r2, #16
 2239 0018 1343     		orrs	r3, r2
 2240 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2241              		.loc 1 3532 0
 2242 001c 0F4A     		ldr	r2, .L178+12
 2243 001e 1278     		ldrb	r2, [r2]
 2244 0020 1206     		lsls	r2, r2, #24
 2245 0022 1343     		orrs	r3, r2
 2246 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 105


3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2247              		.loc 1 3534 0
 2248 0026 0E4B     		ldr	r3, .L178+16
 2249 0028 1B78     		ldrb	r3, [r3]
 2250 002a DAB2     		uxtb	r2, r3
 2251 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2252              		.loc 1 3535 0
 2253 002e 0D4B     		ldr	r3, .L178+20
 2254 0030 1B78     		ldrb	r3, [r3]
 2255 0032 1B02     		lsls	r3, r3, #8
 2256 0034 1343     		orrs	r3, r2
 2257 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2258              		.loc 1 3536 0
 2259 0038 0B4A     		ldr	r2, .L178+24
 2260 003a 1278     		ldrb	r2, [r2]
 2261 003c 1204     		lsls	r2, r2, #16
 2262 003e 1343     		orrs	r3, r2
 2263 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2264              		.loc 1 3537 0
 2265 0042 0A4A     		ldr	r2, .L178+28
 2266 0044 1278     		ldrb	r2, [r2]
 2267 0046 1206     		lsls	r2, r2, #24
 2268 0048 1343     		orrs	r3, r2
 2269 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2270              		.loc 1 3549 0
 2271              		@ sp needed
 2272 004c 7047     		bx	lr
 2273              	.L179:
 2274 004e C046     		.align	2
 2275              	.L178:
 2276 0050 78F1FF0F 		.word	268431736
 2277 0054 79F1FF0F 		.word	268431737
 2278 0058 7AF1FF0F 		.word	268431738
 2279 005c 7BF1FF0F 		.word	268431739
 2280 0060 7CF1FF0F 		.word	268431740
 2281 0064 7DF1FF0F 		.word	268431741
 2282 0068 7EF1FF0F 		.word	268431742
 2283 006c 7FF1FF0F 		.word	268431743
 2284              		.cfi_endproc
 2285              	.LFE50:
 2286              		.size	CyGetUniqueId, .-CyGetUniqueId
 2287              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 106


 2288              		.align	2
 2289              		.global	CySysSetRamAccessArbPriority
 2290              		.code	16
 2291              		.thumb_func
 2292              		.type	CySysSetRamAccessArbPriority, %function
 2293              	CySysSetRamAccessArbPriority:
 2294              	.LFB51:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2295              		.loc 1 3572 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 0
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              		@ link register save eliminated.
 2300              	.LVL163:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2301              		.loc 1 3575 0
 2302 0000 0549     		ldr	r1, .L181
 2303 0002 0A68     		ldr	r2, [r1]
 2304 0004 054B     		ldr	r3, .L181+4
 2305 0006 1A40     		ands	r2, r3
 2306              	.LVL164:
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2307              		.loc 1 3576 0
 2308 0008 4004     		lsls	r0, r0, #17
 2309              	.LVL165:
 2310 000a C023     		movs	r3, #192
 2311 000c DB02     		lsls	r3, r3, #11
 2312 000e 1840     		ands	r0, r3
 2313 0010 1043     		orrs	r0, r2
 2314              	.LVL166:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2315              		.loc 1 3577 0
 2316 0012 0860     		str	r0, [r1]
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 107


3578:Generated_Source\PSoC4/CyLib.c ****     }
 2317              		.loc 1 3578 0
 2318              		@ sp needed
 2319 0014 7047     		bx	lr
 2320              	.L182:
 2321 0016 C046     		.align	2
 2322              	.L181:
 2323 0018 38001040 		.word	1074790456
 2324 001c FFFFF9FF 		.word	-393217
 2325              		.cfi_endproc
 2326              	.LFE51:
 2327              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2328              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2329              		.align	2
 2330              		.global	CySysSetFlashAccessArbPriority
 2331              		.code	16
 2332              		.thumb_func
 2333              		.type	CySysSetFlashAccessArbPriority, %function
 2334              	CySysSetFlashAccessArbPriority:
 2335              	.LFB52:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2336              		.loc 1 3600 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341              	.LVL167:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2342              		.loc 1 3603 0
 2343 0000 0549     		ldr	r1, .L184
 2344 0002 0A68     		ldr	r2, [r1]
 2345 0004 054B     		ldr	r3, .L184+4
 2346 0006 1A40     		ands	r2, r3
 2347              	.LVL168:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 108


3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2348              		.loc 1 3604 0
 2349 0008 4004     		lsls	r0, r0, #17
 2350              	.LVL169:
 2351 000a C023     		movs	r3, #192
 2352 000c DB02     		lsls	r3, r3, #11
 2353 000e 1840     		ands	r0, r3
 2354 0010 1043     		orrs	r0, r2
 2355              	.LVL170:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2356              		.loc 1 3605 0
 2357 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2358              		.loc 1 3606 0
 2359              		@ sp needed
 2360 0014 7047     		bx	lr
 2361              	.L185:
 2362 0016 C046     		.align	2
 2363              	.L184:
 2364 0018 30001040 		.word	1074790448
 2365 001c FFFFF9FF 		.word	-393217
 2366              		.cfi_endproc
 2367              	.LFE52:
 2368              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2369              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2370              		.align	2
 2371              		.global	CySysSetDmacAccessArbPriority
 2372              		.code	16
 2373              		.thumb_func
 2374              		.type	CySysSetDmacAccessArbPriority, %function
 2375              	CySysSetDmacAccessArbPriority:
 2376              	.LFB53:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2377              		.loc 1 3628 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 109


 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
 2382              	.LVL171:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2383              		.loc 1 3631 0
 2384 0000 0549     		ldr	r1, .L187
 2385 0002 0A68     		ldr	r2, [r1]
 2386 0004 054B     		ldr	r3, .L187+4
 2387 0006 1A40     		ands	r2, r3
 2388              	.LVL172:
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2389              		.loc 1 3632 0
 2390 0008 4004     		lsls	r0, r0, #17
 2391              	.LVL173:
 2392 000a C023     		movs	r3, #192
 2393 000c DB02     		lsls	r3, r3, #11
 2394 000e 1840     		ands	r0, r3
 2395 0010 1043     		orrs	r0, r2
 2396              	.LVL174:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2397              		.loc 1 3633 0
 2398 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2399              		.loc 1 3634 0
 2400              		@ sp needed
 2401 0014 7047     		bx	lr
 2402              	.L188:
 2403 0016 C046     		.align	2
 2404              	.L187:
 2405 0018 3C001040 		.word	1074790460
 2406 001c FFFFF9FF 		.word	-393217
 2407              		.cfi_endproc
 2408              	.LFE53:
 2409              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2410              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2411              		.align	2
 2412              		.global	CySysSetPeripheralAccessArbPriority
 2413              		.code	16
 2414              		.thumb_func
 2415              		.type	CySysSetPeripheralAccessArbPriority, %function
 2416              	CySysSetPeripheralAccessArbPriority:
 2417              	.LFB54:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 110


3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2418              		.loc 1 3658 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              	.LVL175:
 2423 0000 10B5     		push	{r4, lr}
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 4, -8
 2426              		.cfi_offset 14, -4
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2427              		.loc 1 3661 0
 2428 0002 0028     		cmp	r0, #0
 2429 0004 0AD1     		bne	.L190
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2430              		.loc 1 3663 0
 2431 0006 1448     		ldr	r0, .L194
 2432              	.LVL176:
 2433 0008 0268     		ldr	r2, [r0]
 2434 000a 144B     		ldr	r3, .L194+4
 2435 000c 1A40     		ands	r2, r3
 2436              	.LVL177:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2437              		.loc 1 3664 0
 2438 000e 4904     		lsls	r1, r1, #17
 2439              	.LVL178:
 2440 0010 C023     		movs	r3, #192
 2441 0012 DB02     		lsls	r3, r3, #11
 2442 0014 1940     		ands	r1, r3
 2443 0016 1143     		orrs	r1, r2
 2444              	.LVL179:
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2445              		.loc 1 3665 0
 2446 0018 0160     		str	r1, [r0]
 2447 001a 1CE0     		b	.L189
 2448              	.LVL180:
 2449              	.L190:
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2450              		.loc 1 3668 0
 2451 001c 0128     		cmp	r0, #1
 2452 001e 0AD1     		bne	.L192
3669:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 111


3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2453              		.loc 1 3670 0
 2454 0020 0F48     		ldr	r0, .L194+8
 2455              	.LVL181:
 2456 0022 0268     		ldr	r2, [r0]
 2457 0024 0D4B     		ldr	r3, .L194+4
 2458 0026 1A40     		ands	r2, r3
 2459              	.LVL182:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2460              		.loc 1 3671 0
 2461 0028 4904     		lsls	r1, r1, #17
 2462              	.LVL183:
 2463 002a C023     		movs	r3, #192
 2464 002c DB02     		lsls	r3, r3, #11
 2465 002e 1940     		ands	r1, r3
 2466 0030 1143     		orrs	r1, r2
 2467              	.LVL184:
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2468              		.loc 1 3672 0
 2469 0032 0160     		str	r1, [r0]
 2470 0034 0FE0     		b	.L189
 2471              	.LVL185:
 2472              	.L192:
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2473              		.loc 1 3676 0
 2474 0036 0228     		cmp	r0, #2
 2475 0038 0AD1     		bne	.L193
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2476              		.loc 1 3678 0
 2477 003a 0A48     		ldr	r0, .L194+12
 2478              	.LVL186:
 2479 003c 0268     		ldr	r2, [r0]
 2480 003e 074B     		ldr	r3, .L194+4
 2481 0040 1A40     		ands	r2, r3
 2482              	.LVL187:
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2483              		.loc 1 3679 0
 2484 0042 4904     		lsls	r1, r1, #17
 2485              	.LVL188:
 2486 0044 C023     		movs	r3, #192
 2487 0046 DB02     		lsls	r3, r3, #11
 2488 0048 1940     		ands	r1, r3
 2489 004a 1143     		orrs	r1, r2
 2490              	.LVL189:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2491              		.loc 1 3680 0
 2492 004c 0160     		str	r1, [r0]
 2493 004e 02E0     		b	.L189
 2494              	.LVL190:
 2495              	.L193:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 112


3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2496              		.loc 1 3685 0 discriminator 1
 2497 0050 0020     		movs	r0, #0
 2498              	.LVL191:
 2499 0052 FFF7FEFF 		bl	CyHalt
 2500              	.LVL192:
 2501              	.L189:
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2502              		.loc 1 3687 0
 2503              		@ sp needed
 2504 0056 10BD     		pop	{r4, pc}
 2505              	.L195:
 2506              		.align	2
 2507              	.L194:
 2508 0058 00011040 		.word	1074790656
 2509 005c FFFFF9FF 		.word	-393217
 2510 0060 04011040 		.word	1074790660
 2511 0064 08011040 		.word	1074790664
 2512              		.cfi_endproc
 2513              	.LFE54:
 2514              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2515              		.global	CySysClkPumpConfig
 2516              		.global	cyImoFreqMhz2Reg
 2517              		.global	CySysTickInitVar
 2518              		.global	cydelay32kMs
 2519              		.global	cydelayFreqMhz
 2520              		.global	cydelayFreqKhz
 2521              		.global	cydelayFreqHz
 2522              		.section	.rodata
 2523              		.align	2
 2524              		.set	.LANCHOR0,. + 0
 2525              		.type	cyImoFreqMhz2Reg, %object
 2526              		.size	cyImoFreqMhz2Reg, 46
 2527              	cyImoFreqMhz2Reg:
 2528 0000 03       		.byte	3
 2529 0001 04       		.byte	4
 2530 0002 05       		.byte	5
 2531 0003 06       		.byte	6
 2532 0004 07       		.byte	7
 2533 0005 08       		.byte	8
 2534 0006 09       		.byte	9
 2535 0007 0A       		.byte	10
 2536 0008 0B       		.byte	11
 2537 0009 0C       		.byte	12
 2538 000a 0E       		.byte	14
 2539 000b 0F       		.byte	15
 2540 000c 10       		.byte	16
 2541 000d 11       		.byte	17
 2542 000e 12       		.byte	18
 2543 000f 13       		.byte	19
 2544 0010 14       		.byte	20
 2545 0011 15       		.byte	21
 2546 0012 16       		.byte	22
 2547 0013 17       		.byte	23
 2548 0014 18       		.byte	24
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 113


 2549 0015 19       		.byte	25
 2550 0016 1B       		.byte	27
 2551 0017 1C       		.byte	28
 2552 0018 1D       		.byte	29
 2553 0019 1E       		.byte	30
 2554 001a 1F       		.byte	31
 2555 001b 20       		.byte	32
 2556 001c 21       		.byte	33
 2557 001d 22       		.byte	34
 2558 001e 23       		.byte	35
 2559 001f 25       		.byte	37
 2560 0020 26       		.byte	38
 2561 0021 27       		.byte	39
 2562 0022 28       		.byte	40
 2563 0023 29       		.byte	41
 2564 0024 2A       		.byte	42
 2565 0025 2B       		.byte	43
 2566 0026 2E       		.byte	46
 2567 0027 2F       		.byte	47
 2568 0028 30       		.byte	48
 2569 0029 31       		.byte	49
 2570 002a 32       		.byte	50
 2571 002b 33       		.byte	51
 2572 002c 34       		.byte	52
 2573 002d 35       		.byte	53
 2574              		.data
 2575              		.align	2
 2576              		.set	.LANCHOR1,. + 0
 2577              		.type	CySysClkPumpConfig, %object
 2578              		.size	CySysClkPumpConfig, 4
 2579              	CySysClkPumpConfig:
 2580 0000 01000000 		.word	1
 2581              		.type	cydelay32kMs, %object
 2582              		.size	cydelay32kMs, 4
 2583              	cydelay32kMs:
 2584 0004 0000204E 		.word	1310720000
 2585              		.type	cydelayFreqKhz, %object
 2586              		.size	cydelayFreqKhz, 4
 2587              	cydelayFreqKhz:
 2588 0008 409C0000 		.word	40000
 2589              		.type	cydelayFreqMhz, %object
 2590              		.size	cydelayFreqMhz, 1
 2591              	cydelayFreqMhz:
 2592 000c 28       		.byte	40
 2593 000d 000000   		.space	3
 2594              		.type	cydelayFreqHz, %object
 2595              		.size	cydelayFreqHz, 4
 2596              	cydelayFreqHz:
 2597 0010 005A6202 		.word	40000000
 2598              		.bss
 2599              		.align	2
 2600              		.set	.LANCHOR2,. + 0
 2601              		.type	CySysTickCallbacks, %object
 2602              		.size	CySysTickCallbacks, 20
 2603              	CySysTickCallbacks:
 2604 0000 00000000 		.space	20
 2604      00000000 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 114


 2604      00000000 
 2604      00000000 
 2604      00000000 
 2605              		.type	CySysTickInitVar, %object
 2606              		.size	CySysTickInitVar, 4
 2607              	CySysTickInitVar:
 2608 0014 00000000 		.space	4
 2609              		.text
 2610              	.Letext0:
 2611              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2612              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2613              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2614              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2615              		.section	.debug_info,"",%progbits
 2616              	.Ldebug_info0:
 2617 0000 4A0D0000 		.4byte	0xd4a
 2618 0004 0400     		.2byte	0x4
 2619 0006 00000000 		.4byte	.Ldebug_abbrev0
 2620 000a 04       		.byte	0x4
 2621 000b 01       		.uleb128 0x1
 2622 000c 75000000 		.4byte	.LASF120
 2623 0010 0C       		.byte	0xc
 2624 0011 BF070000 		.4byte	.LASF121
 2625 0015 FA050000 		.4byte	.LASF122
 2626 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2627 001d 00000000 		.4byte	0
 2628 0021 00000000 		.4byte	.Ldebug_line0
 2629 0025 02       		.uleb128 0x2
 2630 0026 01       		.byte	0x1
 2631 0027 06       		.byte	0x6
 2632 0028 87010000 		.4byte	.LASF0
 2633 002c 02       		.uleb128 0x2
 2634 002d 01       		.byte	0x1
 2635 002e 08       		.byte	0x8
 2636 002f C4050000 		.4byte	.LASF1
 2637 0033 02       		.uleb128 0x2
 2638 0034 02       		.byte	0x2
 2639 0035 05       		.byte	0x5
 2640 0036 D2050000 		.4byte	.LASF2
 2641 003a 02       		.uleb128 0x2
 2642 003b 02       		.byte	0x2
 2643 003c 07       		.byte	0x7
 2644 003d 94030000 		.4byte	.LASF3
 2645 0041 02       		.uleb128 0x2
 2646 0042 04       		.byte	0x4
 2647 0043 05       		.byte	0x5
 2648 0044 EC010000 		.4byte	.LASF4
 2649 0048 02       		.uleb128 0x2
 2650 0049 04       		.byte	0x4
 2651 004a 07       		.byte	0x7
 2652 004b 07030000 		.4byte	.LASF5
 2653 004f 02       		.uleb128 0x2
 2654 0050 08       		.byte	0x8
 2655 0051 05       		.byte	0x5
 2656 0052 79010000 		.4byte	.LASF6
 2657 0056 02       		.uleb128 0x2
 2658 0057 08       		.byte	0x8
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 115


 2659 0058 07       		.byte	0x7
 2660 0059 03010000 		.4byte	.LASF7
 2661 005d 03       		.uleb128 0x3
 2662 005e 04       		.byte	0x4
 2663 005f 05       		.byte	0x5
 2664 0060 696E7400 		.ascii	"int\000"
 2665 0064 02       		.uleb128 0x2
 2666 0065 04       		.byte	0x4
 2667 0066 07       		.byte	0x7
 2668 0067 EB020000 		.4byte	.LASF8
 2669 006b 04       		.uleb128 0x4
 2670 006c 0C020000 		.4byte	.LASF9
 2671 0070 02       		.byte	0x2
 2672 0071 FB01     		.2byte	0x1fb
 2673 0073 2C000000 		.4byte	0x2c
 2674 0077 04       		.uleb128 0x4
 2675 0078 0F000000 		.4byte	.LASF10
 2676 007c 02       		.byte	0x2
 2677 007d FC01     		.2byte	0x1fc
 2678 007f 3A000000 		.4byte	0x3a
 2679 0083 04       		.uleb128 0x4
 2680 0084 4C020000 		.4byte	.LASF11
 2681 0088 02       		.byte	0x2
 2682 0089 FD01     		.2byte	0x1fd
 2683 008b 48000000 		.4byte	0x48
 2684 008f 02       		.uleb128 0x2
 2685 0090 04       		.byte	0x4
 2686 0091 04       		.byte	0x4
 2687 0092 2A050000 		.4byte	.LASF12
 2688 0096 02       		.uleb128 0x2
 2689 0097 08       		.byte	0x8
 2690 0098 04       		.byte	0x4
 2691 0099 28020000 		.4byte	.LASF13
 2692 009d 02       		.uleb128 0x2
 2693 009e 01       		.byte	0x1
 2694 009f 08       		.byte	0x8
 2695 00a0 79060000 		.4byte	.LASF14
 2696 00a4 04       		.uleb128 0x4
 2697 00a5 91050000 		.4byte	.LASF15
 2698 00a9 02       		.byte	0x2
 2699 00aa A502     		.2byte	0x2a5
 2700 00ac B0000000 		.4byte	0xb0
 2701 00b0 05       		.uleb128 0x5
 2702 00b1 6B000000 		.4byte	0x6b
 2703 00b5 04       		.uleb128 0x4
 2704 00b6 45040000 		.4byte	.LASF16
 2705 00ba 02       		.byte	0x2
 2706 00bb A702     		.2byte	0x2a7
 2707 00bd C1000000 		.4byte	0xc1
 2708 00c1 05       		.uleb128 0x5
 2709 00c2 83000000 		.4byte	0x83
 2710 00c6 04       		.uleb128 0x4
 2711 00c7 7E060000 		.4byte	.LASF17
 2712 00cb 02       		.byte	0x2
 2713 00cc B702     		.2byte	0x2b7
 2714 00ce D2000000 		.4byte	0xd2
 2715 00d2 06       		.uleb128 0x6
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 116


 2716 00d3 04       		.byte	0x4
 2717 00d4 D8000000 		.4byte	0xd8
 2718 00d8 07       		.uleb128 0x7
 2719 00d9 02       		.uleb128 0x2
 2720 00da 08       		.byte	0x8
 2721 00db 04       		.byte	0x4
 2722 00dc BE040000 		.4byte	.LASF18
 2723 00e0 02       		.uleb128 0x2
 2724 00e1 04       		.byte	0x4
 2725 00e2 07       		.byte	0x7
 2726 00e3 6E040000 		.4byte	.LASF19
 2727 00e7 04       		.uleb128 0x4
 2728 00e8 55050000 		.4byte	.LASF20
 2729 00ec 03       		.byte	0x3
 2730 00ed 0801     		.2byte	0x108
 2731 00ef D2000000 		.4byte	0xd2
 2732 00f3 08       		.uleb128 0x8
 2733 00f4 2B040000 		.4byte	.LASF22
 2734 00f8 01       		.byte	0x1
 2735 00f9 1B01     		.2byte	0x11b
 2736 00fb 00000000 		.4byte	.LFB4
 2737 00ff 54000000 		.4byte	.LFE4-.LFB4
 2738 0103 01       		.uleb128 0x1
 2739 0104 9C       		.byte	0x9c
 2740 0105 28010000 		.4byte	0x128
 2741 0109 09       		.uleb128 0x9
 2742 010a 6900     		.ascii	"i\000"
 2743 010c 01       		.byte	0x1
 2744 010d 1E01     		.2byte	0x11e
 2745 010f 83000000 		.4byte	0x83
 2746 0113 00000000 		.4byte	.LLST0
 2747 0117 0A       		.uleb128 0xa
 2748 0118 93010000 		.4byte	.LASF21
 2749 011c 01       		.byte	0x1
 2750 011d 2101     		.2byte	0x121
 2751 011f 83000000 		.4byte	0x83
 2752 0123 37000000 		.4byte	.LLST1
 2753 0127 00       		.byte	0
 2754 0128 0B       		.uleb128 0xb
 2755 0129 34030000 		.4byte	.LASF23
 2756 012d 01       		.byte	0x1
 2757 012e 8A       		.byte	0x8a
 2758 012f 00000000 		.4byte	.LFB2
 2759 0133 18000000 		.4byte	.LFE2-.LFB2
 2760 0137 01       		.uleb128 0x1
 2761 0138 9C       		.byte	0x9c
 2762 0139 47010000 		.4byte	0x147
 2763 013d 0C       		.uleb128 0xc
 2764 013e 06000000 		.4byte	.LVL8
 2765 0142 F3000000 		.4byte	0xf3
 2766 0146 00       		.byte	0
 2767 0147 0D       		.uleb128 0xd
 2768 0148 CE010000 		.4byte	.LASF33
 2769 014c 01       		.byte	0x1
 2770 014d 5301     		.2byte	0x153
 2771 014f 83000000 		.4byte	0x83
 2772 0153 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 117


 2773 0157 14000000 		.4byte	.LFE5-.LFB5
 2774 015b 01       		.uleb128 0x1
 2775 015c 9C       		.byte	0x9c
 2776 015d 08       		.uleb128 0x8
 2777 015e 1F000000 		.4byte	.LASF24
 2778 0162 01       		.byte	0x1
 2779 0163 4802     		.2byte	0x248
 2780 0165 00000000 		.4byte	.LFB6
 2781 0169 20000000 		.4byte	.LFE6-.LFB6
 2782 016d 01       		.uleb128 0x1
 2783 016e 9C       		.byte	0x9c
 2784 016f B6010000 		.4byte	0x1b6
 2785 0173 0E       		.uleb128 0xe
 2786 0174 5E060000 		.4byte	.LASF28
 2787 0178 01       		.byte	0x1
 2788 0179 4802     		.2byte	0x248
 2789 017b 83000000 		.4byte	0x83
 2790 017f 7E000000 		.4byte	.LLST2
 2791 0183 0A       		.uleb128 0xa
 2792 0184 A4010000 		.4byte	.LASF25
 2793 0188 01       		.byte	0x1
 2794 0189 4A02     		.2byte	0x24a
 2795 018b 6B000000 		.4byte	0x6b
 2796 018f AA000000 		.4byte	.LLST3
 2797 0193 0A       		.uleb128 0xa
 2798 0194 EB070000 		.4byte	.LASF26
 2799 0198 01       		.byte	0x1
 2800 0199 4B02     		.2byte	0x24b
 2801 019b 83000000 		.4byte	0x83
 2802 019f BD000000 		.4byte	.LLST4
 2803 01a3 0C       		.uleb128 0xc
 2804 01a4 08000000 		.4byte	.LVL10
 2805 01a8 160D0000 		.4byte	0xd16
 2806 01ac 0C       		.uleb128 0xc
 2807 01ad 1A000000 		.4byte	.LVL14
 2808 01b1 210D0000 		.4byte	0xd21
 2809 01b5 00       		.byte	0
 2810 01b6 08       		.uleb128 0x8
 2811 01b7 4B000000 		.4byte	.LASF27
 2812 01bb 01       		.byte	0x1
 2813 01bc 9502     		.2byte	0x295
 2814 01be 00000000 		.4byte	.LFB7
 2815 01c2 38000000 		.4byte	.LFE7-.LFB7
 2816 01c6 01       		.uleb128 0x1
 2817 01c7 9C       		.byte	0x9c
 2818 01c8 DB010000 		.4byte	0x1db
 2819 01cc 0F       		.uleb128 0xf
 2820 01cd 21020000 		.4byte	.LASF29
 2821 01d1 01       		.byte	0x1
 2822 01d2 9502     		.2byte	0x295
 2823 01d4 83000000 		.4byte	0x83
 2824 01d8 01       		.uleb128 0x1
 2825 01d9 50       		.byte	0x50
 2826 01da 00       		.byte	0
 2827 01db 10       		.uleb128 0x10
 2828 01dc 58020000 		.4byte	.LASF37
 2829 01e0 01       		.byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 118


 2830 01e1 BA02     		.2byte	0x2ba
 2831 01e3 83000000 		.4byte	0x83
 2832 01e7 00000000 		.4byte	.LFB8
 2833 01eb 1C000000 		.4byte	.LFE8-.LFB8
 2834 01ef 01       		.uleb128 0x1
 2835 01f0 9C       		.byte	0x9c
 2836 01f1 28020000 		.4byte	0x228
 2837 01f5 0A       		.uleb128 0xa
 2838 01f6 A4010000 		.4byte	.LASF25
 2839 01fa 01       		.byte	0x1
 2840 01fb BC02     		.2byte	0x2bc
 2841 01fd 6B000000 		.4byte	0x6b
 2842 0201 DB000000 		.4byte	.LLST5
 2843 0205 0A       		.uleb128 0xa
 2844 0206 D2040000 		.4byte	.LASF30
 2845 020a 01       		.byte	0x1
 2846 020b BD02     		.2byte	0x2bd
 2847 020d 83000000 		.4byte	0x83
 2848 0211 EE000000 		.4byte	.LLST6
 2849 0215 0C       		.uleb128 0xc
 2850 0216 06000000 		.4byte	.LVL17
 2851 021a 160D0000 		.4byte	0xd16
 2852 021e 0C       		.uleb128 0xc
 2853 021f 12000000 		.4byte	.LVL19
 2854 0223 210D0000 		.4byte	0xd21
 2855 0227 00       		.byte	0
 2856 0228 08       		.uleb128 0x8
 2857 0229 9B060000 		.4byte	.LASF31
 2858 022d 01       		.byte	0x1
 2859 022e F702     		.2byte	0x2f7
 2860 0230 00000000 		.4byte	.LFB9
 2861 0234 30000000 		.4byte	.LFE9-.LFB9
 2862 0238 01       		.uleb128 0x1
 2863 0239 9C       		.byte	0x9c
 2864 023a 71020000 		.4byte	0x271
 2865 023e 0E       		.uleb128 0xe
 2866 023f 8E070000 		.4byte	.LASF32
 2867 0243 01       		.byte	0x1
 2868 0244 F702     		.2byte	0x2f7
 2869 0246 83000000 		.4byte	0x83
 2870 024a 0C010000 		.4byte	.LLST7
 2871 024e 0A       		.uleb128 0xa
 2872 024f A4010000 		.4byte	.LASF25
 2873 0253 01       		.byte	0x1
 2874 0254 F902     		.2byte	0x2f9
 2875 0256 6B000000 		.4byte	0x6b
 2876 025a 38010000 		.4byte	.LLST8
 2877 025e 0C       		.uleb128 0xc
 2878 025f 08000000 		.4byte	.LVL22
 2879 0263 160D0000 		.4byte	0xd16
 2880 0267 0C       		.uleb128 0xc
 2881 0268 24000000 		.4byte	.LVL24
 2882 026c 210D0000 		.4byte	0xd21
 2883 0270 00       		.byte	0
 2884 0271 11       		.uleb128 0x11
 2885 0272 29070000 		.4byte	.LASF35
 2886 0276 01       		.byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 119


 2887 0277 840A     		.2byte	0xa84
 2888 0279 00000000 		.4byte	.LFB12
 2889 027d 20000000 		.4byte	.LFE12-.LFB12
 2890 0281 01       		.uleb128 0x1
 2891 0282 9C       		.byte	0x9c
 2892 0283 0D       		.uleb128 0xd
 2893 0284 19030000 		.4byte	.LASF34
 2894 0288 01       		.byte	0x1
 2895 0289 960A     		.2byte	0xa96
 2896 028b 83000000 		.4byte	0x83
 2897 028f 00000000 		.4byte	.LFB13
 2898 0293 10000000 		.4byte	.LFE13-.LFB13
 2899 0297 01       		.uleb128 0x1
 2900 0298 9C       		.byte	0x9c
 2901 0299 11       		.uleb128 0x11
 2902 029a 35020000 		.4byte	.LASF36
 2903 029e 01       		.byte	0x1
 2904 029f A60A     		.2byte	0xaa6
 2905 02a1 00000000 		.4byte	.LFB14
 2906 02a5 0C000000 		.4byte	.LFE14-.LFB14
 2907 02a9 01       		.uleb128 0x1
 2908 02aa 9C       		.byte	0x9c
 2909 02ab 10       		.uleb128 0x10
 2910 02ac 80030000 		.4byte	.LASF38
 2911 02b0 01       		.byte	0x1
 2912 02b1 C00A     		.2byte	0xac0
 2913 02b3 83000000 		.4byte	0x83
 2914 02b7 00000000 		.4byte	.LFB15
 2915 02bb 14000000 		.4byte	.LFE15-.LFB15
 2916 02bf 01       		.uleb128 0x1
 2917 02c0 9C       		.byte	0x9c
 2918 02c1 E4020000 		.4byte	0x2e4
 2919 02c5 0E       		.uleb128 0xe
 2920 02c6 72060000 		.4byte	.LASF39
 2921 02ca 01       		.byte	0x1
 2922 02cb C00A     		.2byte	0xac0
 2923 02cd 83000000 		.4byte	0x83
 2924 02d1 4B010000 		.4byte	.LLST9
 2925 02d5 12       		.uleb128 0x12
 2926 02d6 5A040000 		.4byte	.LASF40
 2927 02da 01       		.byte	0x1
 2928 02db C20A     		.2byte	0xac2
 2929 02dd 83000000 		.4byte	0x83
 2930 02e1 01       		.uleb128 0x1
 2931 02e2 50       		.byte	0x50
 2932 02e3 00       		.byte	0
 2933 02e4 10       		.uleb128 0x10
 2934 02e5 67000000 		.4byte	.LASF41
 2935 02e9 01       		.byte	0x1
 2936 02ea D70A     		.2byte	0xad7
 2937 02ec 83000000 		.4byte	0x83
 2938 02f0 00000000 		.4byte	.LFB16
 2939 02f4 10000000 		.4byte	.LFE16-.LFB16
 2940 02f8 01       		.uleb128 0x1
 2941 02f9 9C       		.byte	0x9c
 2942 02fa 0D030000 		.4byte	0x30d
 2943 02fe 12       		.uleb128 0x12
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 120


 2944 02ff 16000000 		.4byte	.LASF42
 2945 0303 01       		.byte	0x1
 2946 0304 D90A     		.2byte	0xad9
 2947 0306 83000000 		.4byte	0x83
 2948 030a 01       		.uleb128 0x1
 2949 030b 50       		.byte	0x50
 2950 030c 00       		.byte	0
 2951 030d 08       		.uleb128 0x8
 2952 030e 25010000 		.4byte	.LASF43
 2953 0312 01       		.byte	0x1
 2954 0313 EE0A     		.2byte	0xaee
 2955 0315 00000000 		.4byte	.LFB17
 2956 0319 0C000000 		.4byte	.LFE17-.LFB17
 2957 031d 01       		.uleb128 0x1
 2958 031e 9C       		.byte	0x9c
 2959 031f 32030000 		.4byte	0x332
 2960 0323 0F       		.uleb128 0xf
 2961 0324 53020000 		.4byte	.LASF44
 2962 0328 01       		.byte	0x1
 2963 0329 EE0A     		.2byte	0xaee
 2964 032b 83000000 		.4byte	0x83
 2965 032f 01       		.uleb128 0x1
 2966 0330 50       		.byte	0x50
 2967 0331 00       		.byte	0
 2968 0332 08       		.uleb128 0x8
 2969 0333 DC050000 		.4byte	.LASF45
 2970 0337 01       		.byte	0x1
 2971 0338 A50B     		.2byte	0xba5
 2972 033a 00000000 		.4byte	.LFB24
 2973 033e 14000000 		.4byte	.LFE24-.LFB24
 2974 0342 01       		.uleb128 0x1
 2975 0343 9C       		.byte	0x9c
 2976 0344 59030000 		.4byte	0x359
 2977 0348 0E       		.uleb128 0xe
 2978 0349 D5030000 		.4byte	.LASF46
 2979 034d 01       		.byte	0x1
 2980 034e A50B     		.2byte	0xba5
 2981 0350 6B000000 		.4byte	0x6b
 2982 0354 69010000 		.4byte	.LLST10
 2983 0358 00       		.byte	0
 2984 0359 10       		.uleb128 0x10
 2985 035a 6B010000 		.4byte	.LASF47
 2986 035e 01       		.byte	0x1
 2987 035f B70B     		.2byte	0xbb7
 2988 0361 6B000000 		.4byte	0x6b
 2989 0365 00000000 		.4byte	.LFB25
 2990 0369 18000000 		.4byte	.LFE25-.LFB25
 2991 036d 01       		.uleb128 0x1
 2992 036e 9C       		.byte	0x9c
 2993 036f 84030000 		.4byte	0x384
 2994 0373 0E       		.uleb128 0xe
 2995 0374 D5030000 		.4byte	.LASF46
 2996 0378 01       		.byte	0x1
 2997 0379 B70B     		.2byte	0xbb7
 2998 037b 6B000000 		.4byte	0x6b
 2999 037f 8A010000 		.4byte	.LLST11
 3000 0383 00       		.byte	0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 121


 3001 0384 08       		.uleb128 0x8
 3002 0385 F5010000 		.4byte	.LASF48
 3003 0389 01       		.byte	0x1
 3004 038a C70B     		.2byte	0xbc7
 3005 038c 00000000 		.4byte	.LFB26
 3006 0390 14000000 		.4byte	.LFE26-.LFB26
 3007 0394 01       		.uleb128 0x1
 3008 0395 9C       		.byte	0x9c
 3009 0396 AB030000 		.4byte	0x3ab
 3010 039a 0E       		.uleb128 0xe
 3011 039b D5030000 		.4byte	.LASF46
 3012 039f 01       		.byte	0x1
 3013 03a0 C70B     		.2byte	0xbc7
 3014 03a2 6B000000 		.4byte	0x6b
 3015 03a6 AB010000 		.4byte	.LLST12
 3016 03aa 00       		.byte	0
 3017 03ab 08       		.uleb128 0x8
 3018 03ac 5B030000 		.4byte	.LASF49
 3019 03b0 01       		.byte	0x1
 3020 03b1 D50B     		.2byte	0xbd5
 3021 03b3 00000000 		.4byte	.LFB27
 3022 03b7 14000000 		.4byte	.LFE27-.LFB27
 3023 03bb 01       		.uleb128 0x1
 3024 03bc 9C       		.byte	0x9c
 3025 03bd D2030000 		.4byte	0x3d2
 3026 03c1 0E       		.uleb128 0xe
 3027 03c2 D5030000 		.4byte	.LASF46
 3028 03c6 01       		.byte	0x1
 3029 03c7 D50B     		.2byte	0xbd5
 3030 03c9 6B000000 		.4byte	0x6b
 3031 03cd CC010000 		.4byte	.LLST13
 3032 03d1 00       		.byte	0
 3033 03d2 08       		.uleb128 0x8
 3034 03d3 AC040000 		.4byte	.LASF50
 3035 03d7 01       		.byte	0x1
 3036 03d8 E40B     		.2byte	0xbe4
 3037 03da 00000000 		.4byte	.LFB28
 3038 03de 14000000 		.4byte	.LFE28-.LFB28
 3039 03e2 01       		.uleb128 0x1
 3040 03e3 9C       		.byte	0x9c
 3041 03e4 F9030000 		.4byte	0x3f9
 3042 03e8 0E       		.uleb128 0xe
 3043 03e9 D5030000 		.4byte	.LASF46
 3044 03ed 01       		.byte	0x1
 3045 03ee E40B     		.2byte	0xbe4
 3046 03f0 6B000000 		.4byte	0x6b
 3047 03f4 ED010000 		.4byte	.LLST14
 3048 03f8 00       		.byte	0
 3049 03f9 08       		.uleb128 0x8
 3050 03fa A0050000 		.4byte	.LASF51
 3051 03fe 01       		.byte	0x1
 3052 03ff F30B     		.2byte	0xbf3
 3053 0401 00000000 		.4byte	.LFB29
 3054 0405 04000000 		.4byte	.LFE29-.LFB29
 3055 0409 01       		.uleb128 0x1
 3056 040a 9C       		.byte	0x9c
 3057 040b 1E040000 		.4byte	0x41e
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 122


 3058 040f 0F       		.uleb128 0xf
 3059 0410 72060000 		.4byte	.LASF39
 3060 0414 01       		.byte	0x1
 3061 0415 F30B     		.2byte	0xbf3
 3062 0417 6B000000 		.4byte	0x6b
 3063 041b 01       		.uleb128 0x1
 3064 041c 50       		.byte	0x50
 3065 041d 00       		.byte	0
 3066 041e 10       		.uleb128 0x10
 3067 041f 19040000 		.4byte	.LASF52
 3068 0423 01       		.byte	0x1
 3069 0424 070B     		.2byte	0xb07
 3070 0426 C6000000 		.4byte	0xc6
 3071 042a 00000000 		.4byte	.LFB18
 3072 042e 20000000 		.4byte	.LFE18-.LFB18
 3073 0432 01       		.uleb128 0x1
 3074 0433 9C       		.byte	0x9c
 3075 0434 86040000 		.4byte	0x486
 3076 0438 0E       		.uleb128 0xe
 3077 0439 D5030000 		.4byte	.LASF46
 3078 043d 01       		.byte	0x1
 3079 043e 070B     		.2byte	0xb07
 3080 0440 6B000000 		.4byte	0x6b
 3081 0444 0E020000 		.4byte	.LLST15
 3082 0448 0E       		.uleb128 0xe
 3083 0449 CA040000 		.4byte	.LASF53
 3084 044d 01       		.byte	0x1
 3085 044e 070B     		.2byte	0xb07
 3086 0450 C6000000 		.4byte	0xc6
 3087 0454 2F020000 		.4byte	.LLST16
 3088 0458 12       		.uleb128 0x12
 3089 0459 39070000 		.4byte	.LASF54
 3090 045d 01       		.byte	0x1
 3091 045e 090B     		.2byte	0xb09
 3092 0460 C6000000 		.4byte	0xc6
 3093 0464 01       		.uleb128 0x1
 3094 0465 50       		.byte	0x50
 3095 0466 13       		.uleb128 0x13
 3096 0467 00000000 		.4byte	.LASF55
 3097 046b 01       		.byte	0x1
 3098 046c 0A0B     		.2byte	0xb0a
 3099 046e 86040000 		.4byte	0x486
 3100 0472 00000020 		.4byte	0x20000000
 3101 0476 14       		.uleb128 0x14
 3102 0477 10000000 		.4byte	.LVL45
 3103 047b F9030000 		.4byte	0x3f9
 3104 047f 15       		.uleb128 0x15
 3105 0480 01       		.uleb128 0x1
 3106 0481 50       		.byte	0x50
 3107 0482 01       		.uleb128 0x1
 3108 0483 30       		.byte	0x30
 3109 0484 00       		.byte	0
 3110 0485 00       		.byte	0
 3111 0486 06       		.uleb128 0x6
 3112 0487 04       		.byte	0x4
 3113 0488 C6000000 		.4byte	0xc6
 3114 048c 10       		.uleb128 0x10
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 123


 3115 048d E8050000 		.4byte	.LASF56
 3116 0491 01       		.byte	0x1
 3117 0492 290B     		.2byte	0xb29
 3118 0494 C6000000 		.4byte	0xc6
 3119 0498 00000000 		.4byte	.LFB19
 3120 049c 1C000000 		.4byte	.LFE19-.LFB19
 3121 04a0 01       		.uleb128 0x1
 3122 04a1 9C       		.byte	0x9c
 3123 04a2 D6040000 		.4byte	0x4d6
 3124 04a6 0E       		.uleb128 0xe
 3125 04a7 D5030000 		.4byte	.LASF46
 3126 04ab 01       		.byte	0x1
 3127 04ac 290B     		.2byte	0xb29
 3128 04ae 6B000000 		.4byte	0x6b
 3129 04b2 5B020000 		.4byte	.LLST17
 3130 04b6 13       		.uleb128 0x13
 3131 04b7 00000000 		.4byte	.LASF55
 3132 04bb 01       		.byte	0x1
 3133 04bc 2B0B     		.2byte	0xb2b
 3134 04be 86040000 		.4byte	0x486
 3135 04c2 00000020 		.4byte	0x20000000
 3136 04c6 14       		.uleb128 0x14
 3137 04c7 0E000000 		.4byte	.LVL51
 3138 04cb F9030000 		.4byte	0x3f9
 3139 04cf 15       		.uleb128 0x15
 3140 04d0 01       		.uleb128 0x1
 3141 04d1 50       		.byte	0x50
 3142 04d2 01       		.uleb128 0x1
 3143 04d3 30       		.byte	0x30
 3144 04d4 00       		.byte	0
 3145 04d5 00       		.byte	0
 3146 04d6 10       		.uleb128 0x10
 3147 04d7 C6030000 		.4byte	.LASF57
 3148 04db 01       		.byte	0x1
 3149 04dc 3F0B     		.2byte	0xb3f
 3150 04de C6000000 		.4byte	0xc6
 3151 04e2 00000000 		.4byte	.LFB20
 3152 04e6 22000000 		.4byte	.LFE20-.LFB20
 3153 04ea 01       		.uleb128 0x1
 3154 04eb 9C       		.byte	0x9c
 3155 04ec 3E050000 		.4byte	0x53e
 3156 04f0 0E       		.uleb128 0xe
 3157 04f1 D5030000 		.4byte	.LASF46
 3158 04f5 01       		.byte	0x1
 3159 04f6 3F0B     		.2byte	0xb3f
 3160 04f8 6B000000 		.4byte	0x6b
 3161 04fc 7C020000 		.4byte	.LLST18
 3162 0500 0E       		.uleb128 0xe
 3163 0501 CA040000 		.4byte	.LASF53
 3164 0505 01       		.byte	0x1
 3165 0506 3F0B     		.2byte	0xb3f
 3166 0508 C6000000 		.4byte	0xc6
 3167 050c 9D020000 		.4byte	.LLST19
 3168 0510 12       		.uleb128 0x12
 3169 0511 39070000 		.4byte	.LASF54
 3170 0515 01       		.byte	0x1
 3171 0516 410B     		.2byte	0xb41
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 124


 3172 0518 C6000000 		.4byte	0xc6
 3173 051c 01       		.uleb128 0x1
 3174 051d 50       		.byte	0x50
 3175 051e 13       		.uleb128 0x13
 3176 051f 00000000 		.4byte	.LASF55
 3177 0523 01       		.byte	0x1
 3178 0524 420B     		.2byte	0xb42
 3179 0526 86040000 		.4byte	0x486
 3180 052a 00000020 		.4byte	0x20000000
 3181 052e 14       		.uleb128 0x14
 3182 052f 10000000 		.4byte	.LVL55
 3183 0533 F9030000 		.4byte	0x3f9
 3184 0537 15       		.uleb128 0x15
 3185 0538 01       		.uleb128 0x1
 3186 0539 50       		.byte	0x50
 3187 053a 01       		.uleb128 0x1
 3188 053b 30       		.byte	0x30
 3189 053c 00       		.byte	0
 3190 053d 00       		.byte	0
 3191 053e 10       		.uleb128 0x10
 3192 053f 67050000 		.4byte	.LASF58
 3193 0543 01       		.byte	0x1
 3194 0544 5B0B     		.2byte	0xb5b
 3195 0546 C6000000 		.4byte	0xc6
 3196 054a 00000000 		.4byte	.LFB21
 3197 054e 1E000000 		.4byte	.LFE21-.LFB21
 3198 0552 01       		.uleb128 0x1
 3199 0553 9C       		.byte	0x9c
 3200 0554 88050000 		.4byte	0x588
 3201 0558 0E       		.uleb128 0xe
 3202 0559 D5030000 		.4byte	.LASF46
 3203 055d 01       		.byte	0x1
 3204 055e 5B0B     		.2byte	0xb5b
 3205 0560 6B000000 		.4byte	0x6b
 3206 0564 C9020000 		.4byte	.LLST20
 3207 0568 13       		.uleb128 0x13
 3208 0569 00000000 		.4byte	.LASF55
 3209 056d 01       		.byte	0x1
 3210 056e 5D0B     		.2byte	0xb5d
 3211 0570 86040000 		.4byte	0x486
 3212 0574 00000020 		.4byte	0x20000000
 3213 0578 14       		.uleb128 0x14
 3214 0579 0E000000 		.4byte	.LVL61
 3215 057d F9030000 		.4byte	0x3f9
 3216 0581 15       		.uleb128 0x15
 3217 0582 01       		.uleb128 0x1
 3218 0583 50       		.byte	0x50
 3219 0584 01       		.uleb128 0x1
 3220 0585 30       		.byte	0x30
 3221 0586 00       		.byte	0
 3222 0587 00       		.byte	0
 3223 0588 08       		.uleb128 0x8
 3224 0589 19050000 		.4byte	.LASF59
 3225 058d 01       		.byte	0x1
 3226 058e 6E0B     		.2byte	0xb6e
 3227 0590 00000000 		.4byte	.LFB22
 3228 0594 4C000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 125


 3229 0598 01       		.uleb128 0x1
 3230 0599 9C       		.byte	0x9c
 3231 059a 27060000 		.4byte	0x627
 3232 059e 0E       		.uleb128 0xe
 3233 059f D5030000 		.4byte	.LASF46
 3234 05a3 01       		.byte	0x1
 3235 05a4 6E0B     		.2byte	0xb6e
 3236 05a6 6B000000 		.4byte	0x6b
 3237 05aa EA020000 		.4byte	.LLST21
 3238 05ae 0E       		.uleb128 0xe
 3239 05af DC030000 		.4byte	.LASF60
 3240 05b3 01       		.byte	0x1
 3241 05b4 6E0B     		.2byte	0xb6e
 3242 05b6 6B000000 		.4byte	0x6b
 3243 05ba 0B030000 		.4byte	.LLST22
 3244 05be 0A       		.uleb128 0xa
 3245 05bf A4010000 		.4byte	.LASF25
 3246 05c3 01       		.byte	0x1
 3247 05c4 700B     		.2byte	0xb70
 3248 05c6 6B000000 		.4byte	0x6b
 3249 05ca 2C030000 		.4byte	.LLST23
 3250 05ce 0A       		.uleb128 0xa
 3251 05cf 2F020000 		.4byte	.LASF61
 3252 05d3 01       		.byte	0x1
 3253 05d4 710B     		.2byte	0xb71
 3254 05d6 83000000 		.4byte	0x83
 3255 05da 3F030000 		.4byte	.LLST24
 3256 05de 0A       		.uleb128 0xa
 3257 05df B5020000 		.4byte	.LASF62
 3258 05e3 01       		.byte	0x1
 3259 05e4 720B     		.2byte	0xb72
 3260 05e6 83000000 		.4byte	0x83
 3261 05ea 52030000 		.4byte	.LLST25
 3262 05ee 16       		.uleb128 0x16
 3263 05ef 10000000 		.4byte	.LVL64
 3264 05f3 F9030000 		.4byte	0x3f9
 3265 05f7 01060000 		.4byte	0x601
 3266 05fb 15       		.uleb128 0x15
 3267 05fc 01       		.uleb128 0x1
 3268 05fd 50       		.byte	0x50
 3269 05fe 01       		.uleb128 0x1
 3270 05ff 30       		.byte	0x30
 3271 0600 00       		.byte	0
 3272 0601 16       		.uleb128 0x16
 3273 0602 1A000000 		.4byte	.LVL65
 3274 0606 F9030000 		.4byte	0x3f9
 3275 060a 14060000 		.4byte	0x614
 3276 060e 15       		.uleb128 0x15
 3277 060f 01       		.uleb128 0x1
 3278 0610 50       		.byte	0x50
 3279 0611 01       		.uleb128 0x1
 3280 0612 30       		.byte	0x30
 3281 0613 00       		.byte	0
 3282 0614 0C       		.uleb128 0xc
 3283 0615 26000000 		.4byte	.LVL67
 3284 0619 160D0000 		.4byte	0xd16
 3285 061d 0C       		.uleb128 0xc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 126


 3286 061e 46000000 		.4byte	.LVL73
 3287 0622 210D0000 		.4byte	0xd21
 3288 0626 00       		.byte	0
 3289 0627 10       		.uleb128 0x10
 3290 0628 89020000 		.4byte	.LASF63
 3291 062c 01       		.byte	0x1
 3292 062d 900B     		.2byte	0xb90
 3293 062f 6B000000 		.4byte	0x6b
 3294 0633 00000000 		.4byte	.LFB23
 3295 0637 2C000000 		.4byte	.LFE23-.LFB23
 3296 063b 01       		.uleb128 0x1
 3297 063c 9C       		.byte	0x9c
 3298 063d 71060000 		.4byte	0x671
 3299 0641 0E       		.uleb128 0xe
 3300 0642 D5030000 		.4byte	.LASF46
 3301 0646 01       		.byte	0x1
 3302 0647 900B     		.2byte	0xb90
 3303 0649 6B000000 		.4byte	0x6b
 3304 064d 86030000 		.4byte	.LLST26
 3305 0651 0A       		.uleb128 0xa
 3306 0652 DC030000 		.4byte	.LASF60
 3307 0656 01       		.byte	0x1
 3308 0657 920B     		.2byte	0xb92
 3309 0659 6B000000 		.4byte	0x6b
 3310 065d A7030000 		.4byte	.LLST27
 3311 0661 14       		.uleb128 0x14
 3312 0662 0E000000 		.4byte	.LVL77
 3313 0666 F9030000 		.4byte	0x3f9
 3314 066a 15       		.uleb128 0x15
 3315 066b 01       		.uleb128 0x1
 3316 066c 50       		.byte	0x50
 3317 066d 01       		.uleb128 0x1
 3318 066e 30       		.byte	0x30
 3319 066f 00       		.byte	0
 3320 0670 00       		.byte	0
 3321 0671 11       		.uleb128 0x11
 3322 0672 42010000 		.4byte	.LASF64
 3323 0676 01       		.byte	0x1
 3324 0677 0B0C     		.2byte	0xc0b
 3325 0679 00000000 		.4byte	.LFB30
 3326 067d 18000000 		.4byte	.LFE30-.LFB30
 3327 0681 01       		.uleb128 0x1
 3328 0682 9C       		.byte	0x9c
 3329 0683 08       		.uleb128 0x8
 3330 0684 EF060000 		.4byte	.LASF65
 3331 0688 01       		.byte	0x1
 3332 0689 1F0C     		.2byte	0xc1f
 3333 068b 00000000 		.4byte	.LFB31
 3334 068f 30000000 		.4byte	.LFE31-.LFB31
 3335 0693 01       		.uleb128 0x1
 3336 0694 9C       		.byte	0x9c
 3337 0695 BC060000 		.4byte	0x6bc
 3338 0699 0E       		.uleb128 0xe
 3339 069a 76050000 		.4byte	.LASF66
 3340 069e 01       		.byte	0x1
 3341 069f 1F0C     		.2byte	0xc1f
 3342 06a1 83000000 		.4byte	0x83
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 127


 3343 06a5 BA030000 		.4byte	.LLST28
 3344 06a9 0C       		.uleb128 0xc
 3345 06aa 0E000000 		.4byte	.LVL82
 3346 06ae 2C0D0000 		.4byte	0xd2c
 3347 06b2 0C       		.uleb128 0xc
 3348 06b3 26000000 		.4byte	.LVL84
 3349 06b7 2C0D0000 		.4byte	0xd2c
 3350 06bb 00       		.byte	0
 3351 06bc 0B       		.uleb128 0xb
 3352 06bd 70020000 		.4byte	.LASF67
 3353 06c1 01       		.byte	0x1
 3354 06c2 AE       		.byte	0xae
 3355 06c3 00000000 		.4byte	.LFB3
 3356 06c7 F4000000 		.4byte	.LFE3-.LFB3
 3357 06cb 01       		.uleb128 0x1
 3358 06cc 9C       		.byte	0x9c
 3359 06cd 85070000 		.4byte	0x785
 3360 06d1 17       		.uleb128 0x17
 3361 06d2 6900     		.ascii	"i\000"
 3362 06d4 01       		.byte	0x1
 3363 06d5 B1       		.byte	0xb1
 3364 06d6 83000000 		.4byte	0x83
 3365 06da D8030000 		.4byte	.LLST29
 3366 06de 18       		.uleb128 0x18
 3367 06df 93010000 		.4byte	.LASF21
 3368 06e3 01       		.byte	0x1
 3369 06e4 B4       		.byte	0xb4
 3370 06e5 83000000 		.4byte	0x83
 3371 06e9 0F040000 		.4byte	.LLST30
 3372 06ed 18       		.uleb128 0x18
 3373 06ee A4010000 		.4byte	.LASF25
 3374 06f2 01       		.byte	0x1
 3375 06f3 B5       		.byte	0xb5
 3376 06f4 6B000000 		.4byte	0x6b
 3377 06f8 45040000 		.4byte	.LLST31
 3378 06fc 18       		.uleb128 0x18
 3379 06fd A7030000 		.4byte	.LASF68
 3380 0701 01       		.byte	0x1
 3381 0702 B6       		.byte	0xb6
 3382 0703 83000000 		.4byte	0x83
 3383 0707 58040000 		.4byte	.LLST32
 3384 070b 18       		.uleb128 0x18
 3385 070c B3010000 		.4byte	.LASF69
 3386 0710 01       		.byte	0x1
 3387 0711 B7       		.byte	0xb7
 3388 0712 83000000 		.4byte	0x83
 3389 0716 8D040000 		.4byte	.LLST33
 3390 071a 19       		.uleb128 0x19
 3391 071b E3060000 		.4byte	.LASF70
 3392 071f 01       		.byte	0x1
 3393 0720 B8       		.byte	0xb8
 3394 0721 C1000000 		.4byte	0xc1
 3395 0725 02       		.uleb128 0x2
 3396 0726 91       		.byte	0x91
 3397 0727 6C       		.sleb128 -20
 3398 0728 0C       		.uleb128 0xc
 3399 0729 08000000 		.4byte	.LVL87
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 128


 3400 072d 370D0000 		.4byte	0xd37
 3401 0731 0C       		.uleb128 0xc
 3402 0732 10000000 		.4byte	.LVL88
 3403 0736 160D0000 		.4byte	0xd16
 3404 073a 16       		.uleb128 0x16
 3405 073b 82000000 		.4byte	.LVL101
 3406 073f 420D0000 		.4byte	0xd42
 3407 0743 4E070000 		.4byte	0x74e
 3408 0747 15       		.uleb128 0x15
 3409 0748 01       		.uleb128 0x1
 3410 0749 50       		.byte	0x50
 3411 074a 02       		.uleb128 0x2
 3412 074b 08       		.byte	0x8
 3413 074c 30       		.byte	0x30
 3414 074d 00       		.byte	0
 3415 074e 16       		.uleb128 0x16
 3416 074f 9E000000 		.4byte	.LVL104
 3417 0753 83060000 		.4byte	0x683
 3418 0757 61070000 		.4byte	0x761
 3419 075b 15       		.uleb128 0x15
 3420 075c 01       		.uleb128 0x1
 3421 075d 50       		.byte	0x50
 3422 075e 01       		.uleb128 0x1
 3423 075f 31       		.byte	0x31
 3424 0760 00       		.byte	0
 3425 0761 16       		.uleb128 0x16
 3426 0762 B2000000 		.4byte	.LVL107
 3427 0766 83060000 		.4byte	0x683
 3428 076a 74070000 		.4byte	0x774
 3429 076e 15       		.uleb128 0x15
 3430 076f 01       		.uleb128 0x1
 3431 0770 50       		.byte	0x50
 3432 0771 01       		.uleb128 0x1
 3433 0772 31       		.byte	0x31
 3434 0773 00       		.byte	0
 3435 0774 14       		.uleb128 0x14
 3436 0775 C8000000 		.4byte	.LVL109
 3437 0779 210D0000 		.4byte	0xd21
 3438 077d 15       		.uleb128 0x15
 3439 077e 01       		.uleb128 0x1
 3440 077f 50       		.byte	0x50
 3441 0780 02       		.uleb128 0x2
 3442 0781 75       		.byte	0x75
 3443 0782 00       		.sleb128 0
 3444 0783 00       		.byte	0
 3445 0784 00       		.byte	0
 3446 0785 0B       		.uleb128 0xb
 3447 0786 96070000 		.4byte	.LASF71
 3448 078a 01       		.byte	0x1
 3449 078b 69       		.byte	0x69
 3450 078c 00000000 		.4byte	.LFB1
 3451 0790 18000000 		.4byte	.LFE1-.LFB1
 3452 0794 01       		.uleb128 0x1
 3453 0795 9C       		.byte	0x9c
 3454 0796 A4070000 		.4byte	0x7a4
 3455 079a 0C       		.uleb128 0xc
 3456 079b 12000000 		.4byte	.LVL110
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 129


 3457 079f BC060000 		.4byte	0x6bc
 3458 07a3 00       		.byte	0
 3459 07a4 08       		.uleb128 0x8
 3460 07a5 E5030000 		.4byte	.LASF72
 3461 07a9 01       		.byte	0x1
 3462 07aa 3103     		.2byte	0x331
 3463 07ac 00000000 		.4byte	.LFB10
 3464 07b0 80000000 		.4byte	.LFE10-.LFB10
 3465 07b4 01       		.uleb128 0x1
 3466 07b5 9C       		.byte	0x9c
 3467 07b6 3D080000 		.4byte	0x83d
 3468 07ba 0E       		.uleb128 0xe
 3469 07bb 93010000 		.4byte	.LASF21
 3470 07bf 01       		.byte	0x1
 3471 07c0 3103     		.2byte	0x331
 3472 07c2 83000000 		.4byte	0x83
 3473 07c6 AC040000 		.4byte	.LLST34
 3474 07ca 12       		.uleb128 0x12
 3475 07cb 1A010000 		.4byte	.LASF73
 3476 07cf 01       		.byte	0x1
 3477 07d0 3403     		.2byte	0x334
 3478 07d2 4D080000 		.4byte	0x84d
 3479 07d6 02       		.uleb128 0x2
 3480 07d7 91       		.byte	0x91
 3481 07d8 68       		.sleb128 -24
 3482 07d9 12       		.uleb128 0x12
 3483 07da 02020000 		.4byte	.LASF74
 3484 07de 01       		.byte	0x1
 3485 07df 3503     		.2byte	0x335
 3486 07e1 62080000 		.4byte	0x862
 3487 07e5 02       		.uleb128 0x2
 3488 07e6 91       		.byte	0x91
 3489 07e7 58       		.sleb128 -40
 3490 07e8 0A       		.uleb128 0xa
 3491 07e9 E4010000 		.4byte	.LASF75
 3492 07ed 01       		.byte	0x1
 3493 07ee 3E03     		.2byte	0x33e
 3494 07f0 83000000 		.4byte	0x83
 3495 07f4 E5040000 		.4byte	.LLST35
 3496 07f8 0A       		.uleb128 0xa
 3497 07f9 A4010000 		.4byte	.LASF25
 3498 07fd 01       		.byte	0x1
 3499 07fe 4503     		.2byte	0x345
 3500 0800 6B000000 		.4byte	0x6b
 3501 0804 1C050000 		.4byte	.LLST36
 3502 0808 0C       		.uleb128 0xc
 3503 0809 0A000000 		.4byte	.LVL113
 3504 080d 160D0000 		.4byte	0xd16
 3505 0811 0C       		.uleb128 0xc
 3506 0812 10000000 		.4byte	.LVL115
 3507 0816 47010000 		.4byte	0x147
 3508 081a 0C       		.uleb128 0xc
 3509 081b 18000000 		.4byte	.LVL117
 3510 081f F3000000 		.4byte	0xf3
 3511 0823 0C       		.uleb128 0xc
 3512 0824 56000000 		.4byte	.LVL121
 3513 0828 BC060000 		.4byte	0x6bc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 130


 3514 082c 14       		.uleb128 0x14
 3515 082d 5C000000 		.4byte	.LVL122
 3516 0831 210D0000 		.4byte	0xd21
 3517 0835 15       		.uleb128 0x15
 3518 0836 01       		.uleb128 0x1
 3519 0837 50       		.byte	0x50
 3520 0838 02       		.uleb128 0x2
 3521 0839 75       		.byte	0x75
 3522 083a 00       		.sleb128 0
 3523 083b 00       		.byte	0
 3524 083c 00       		.byte	0
 3525 083d 1A       		.uleb128 0x1a
 3526 083e C1000000 		.4byte	0xc1
 3527 0842 4D080000 		.4byte	0x84d
 3528 0846 1B       		.uleb128 0x1b
 3529 0847 E0000000 		.4byte	0xe0
 3530 084b 01       		.byte	0x1
 3531 084c 00       		.byte	0
 3532 084d 05       		.uleb128 0x5
 3533 084e 3D080000 		.4byte	0x83d
 3534 0852 1A       		.uleb128 0x1a
 3535 0853 C1000000 		.4byte	0xc1
 3536 0857 62080000 		.4byte	0x862
 3537 085b 1B       		.uleb128 0x1b
 3538 085c E0000000 		.4byte	0xe0
 3539 0860 03       		.byte	0x3
 3540 0861 00       		.byte	0
 3541 0862 05       		.uleb128 0x5
 3542 0863 52080000 		.4byte	0x852
 3543 0867 08       		.uleb128 0x8
 3544 0868 68060000 		.4byte	.LASF76
 3545 086c 01       		.byte	0x1
 3546 086d 360C     		.2byte	0xc36
 3547 086f 00000000 		.4byte	.LFB32
 3548 0873 14000000 		.4byte	.LFE32-.LFB32
 3549 0877 01       		.uleb128 0x1
 3550 0878 9C       		.byte	0x9c
 3551 0879 97080000 		.4byte	0x897
 3552 087d 0E       		.uleb128 0xe
 3553 087e DE070000 		.4byte	.LASF77
 3554 0882 01       		.byte	0x1
 3555 0883 360C     		.2byte	0xc36
 3556 0885 77000000 		.4byte	0x77
 3557 0889 2F050000 		.4byte	.LLST37
 3558 088d 0C       		.uleb128 0xc
 3559 088e 0C000000 		.4byte	.LVL127
 3560 0892 2C0D0000 		.4byte	0xd2c
 3561 0896 00       		.byte	0
 3562 0897 08       		.uleb128 0x8
 3563 0898 46050000 		.4byte	.LASF78
 3564 089c 01       		.byte	0x1
 3565 089d 660A     		.2byte	0xa66
 3566 089f 00000000 		.4byte	.LFB11
 3567 08a3 44000000 		.4byte	.LFE11-.LFB11
 3568 08a7 01       		.uleb128 0x1
 3569 08a8 9C       		.byte	0x9c
 3570 08a9 DC080000 		.4byte	0x8dc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 131


 3571 08ad 0E       		.uleb128 0xe
 3572 08ae 96050000 		.4byte	.LASF79
 3573 08b2 01       		.byte	0x1
 3574 08b3 660A     		.2byte	0xa66
 3575 08b5 83000000 		.4byte	0x83
 3576 08b9 50050000 		.4byte	.LLST38
 3577 08bd 16       		.uleb128 0x16
 3578 08be 2E000000 		.4byte	.LVL131
 3579 08c2 67080000 		.4byte	0x867
 3580 08c6 D2080000 		.4byte	0x8d2
 3581 08ca 15       		.uleb128 0x15
 3582 08cb 01       		.uleb128 0x1
 3583 08cc 50       		.byte	0x50
 3584 08cd 03       		.uleb128 0x3
 3585 08ce 0A       		.byte	0xa
 3586 08cf E803     		.2byte	0x3e8
 3587 08d1 00       		.byte	0
 3588 08d2 0C       		.uleb128 0xc
 3589 08d3 32000000 		.4byte	.LVL132
 3590 08d7 99020000 		.4byte	0x299
 3591 08db 00       		.byte	0
 3592 08dc 1C       		.uleb128 0x1c
 3593 08dd 98010000 		.4byte	.LASF80
 3594 08e1 01       		.byte	0x1
 3595 08e2 440C     		.2byte	0xc44
 3596 08e4 00000000 		.4byte	.LFB33
 3597 08e8 4C000000 		.4byte	.LFE33-.LFB33
 3598 08ec 01       		.uleb128 0x1
 3599 08ed 9C       		.byte	0x9c
 3600 08ee 03090000 		.4byte	0x903
 3601 08f2 0E       		.uleb128 0xe
 3602 08f3 93010000 		.4byte	.LASF21
 3603 08f7 01       		.byte	0x1
 3604 08f8 440C     		.2byte	0xc44
 3605 08fa 83000000 		.4byte	0x83
 3606 08fe 7C050000 		.4byte	.LLST39
 3607 0902 00       		.byte	0
 3608 0903 11       		.uleb128 0x11
 3609 0904 80070000 		.4byte	.LASF81
 3610 0908 01       		.byte	0x1
 3611 0909 B00C     		.2byte	0xcb0
 3612 090b 00000000 		.4byte	.LFB37
 3613 090f 10000000 		.4byte	.LFE37-.LFB37
 3614 0913 01       		.uleb128 0x1
 3615 0914 9C       		.byte	0x9c
 3616 0915 11       		.uleb128 0x11
 3617 0916 52010000 		.4byte	.LASF82
 3618 091a 01       		.byte	0x1
 3619 091b C00C     		.2byte	0xcc0
 3620 091d 00000000 		.4byte	.LFB38
 3621 0921 10000000 		.4byte	.LFE38-.LFB38
 3622 0925 01       		.uleb128 0x1
 3623 0926 9C       		.byte	0x9c
 3624 0927 08       		.uleb128 0x8
 3625 0928 8B060000 		.4byte	.LASF83
 3626 092c 01       		.byte	0x1
 3627 092d 9F0C     		.2byte	0xc9f
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 132


 3628 092f 00000000 		.4byte	.LFB36
 3629 0933 18000000 		.4byte	.LFE36-.LFB36
 3630 0937 01       		.uleb128 0x1
 3631 0938 9C       		.byte	0x9c
 3632 0939 47090000 		.4byte	0x947
 3633 093d 0C       		.uleb128 0xc
 3634 093e 06000000 		.4byte	.LVL137
 3635 0942 15090000 		.4byte	0x915
 3636 0946 00       		.byte	0
 3637 0947 11       		.uleb128 0x11
 3638 0948 0F070000 		.4byte	.LASF84
 3639 094c 01       		.byte	0x1
 3640 094d D00C     		.2byte	0xcd0
 3641 094f 00000000 		.4byte	.LFB39
 3642 0953 10000000 		.4byte	.LFE39-.LFB39
 3643 0957 01       		.uleb128 0x1
 3644 0958 9C       		.byte	0x9c
 3645 0959 08       		.uleb128 0x8
 3646 095a F2070000 		.4byte	.LASF85
 3647 095e 01       		.byte	0x1
 3648 095f E10C     		.2byte	0xce1
 3649 0961 00000000 		.4byte	.LFB40
 3650 0965 10000000 		.4byte	.LFE40-.LFB40
 3651 0969 01       		.uleb128 0x1
 3652 096a 9C       		.byte	0x9c
 3653 096b 80090000 		.4byte	0x980
 3654 096f 0E       		.uleb128 0xe
 3655 0970 B5020000 		.4byte	.LASF62
 3656 0974 01       		.byte	0x1
 3657 0975 E10C     		.2byte	0xce1
 3658 0977 83000000 		.4byte	0x83
 3659 097b 9D050000 		.4byte	.LLST40
 3660 097f 00       		.byte	0
 3661 0980 0D       		.uleb128 0xd
 3662 0981 BB010000 		.4byte	.LASF86
 3663 0985 01       		.byte	0x1
 3664 0986 F10C     		.2byte	0xcf1
 3665 0988 83000000 		.4byte	0x83
 3666 098c 00000000 		.4byte	.LFB41
 3667 0990 10000000 		.4byte	.LFE41-.LFB41
 3668 0994 01       		.uleb128 0x1
 3669 0995 9C       		.byte	0x9c
 3670 0996 0D       		.uleb128 0xd
 3671 0997 F9040000 		.4byte	.LASF87
 3672 099b 01       		.byte	0x1
 3673 099c 010D     		.2byte	0xd01
 3674 099e 83000000 		.4byte	0x83
 3675 09a2 00000000 		.4byte	.LFB42
 3676 09a6 10000000 		.4byte	.LFE42-.LFB42
 3677 09aa 01       		.uleb128 0x1
 3678 09ab 9C       		.byte	0x9c
 3679 09ac 08       		.uleb128 0x8
 3680 09ad AE030000 		.4byte	.LASF88
 3681 09b1 01       		.byte	0x1
 3682 09b2 210D     		.2byte	0xd21
 3683 09b4 00000000 		.4byte	.LFB43
 3684 09b8 20000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 133


 3685 09bc 01       		.uleb128 0x1
 3686 09bd 9C       		.byte	0x9c
 3687 09be D1090000 		.4byte	0x9d1
 3688 09c2 0F       		.uleb128 0xf
 3689 09c3 BB020000 		.4byte	.LASF89
 3690 09c7 01       		.byte	0x1
 3691 09c8 210D     		.2byte	0xd21
 3692 09ca 83000000 		.4byte	0x83
 3693 09ce 01       		.uleb128 0x1
 3694 09cf 50       		.byte	0x50
 3695 09d0 00       		.byte	0
 3696 09d1 0D       		.uleb128 0xd
 3697 09d2 F7060000 		.4byte	.LASF90
 3698 09d6 01       		.byte	0x1
 3699 09d7 3A0D     		.2byte	0xd3a
 3700 09d9 83000000 		.4byte	0x83
 3701 09dd 00000000 		.4byte	.LFB44
 3702 09e1 10000000 		.4byte	.LFE44-.LFB44
 3703 09e5 01       		.uleb128 0x1
 3704 09e6 9C       		.byte	0x9c
 3705 09e7 0D       		.uleb128 0xd
 3706 09e8 D5020000 		.4byte	.LASF91
 3707 09ec 01       		.byte	0x1
 3708 09ed 510D     		.2byte	0xd51
 3709 09ef 83000000 		.4byte	0x83
 3710 09f3 00000000 		.4byte	.LFB45
 3711 09f7 10000000 		.4byte	.LFE45-.LFB45
 3712 09fb 01       		.uleb128 0x1
 3713 09fc 9C       		.byte	0x9c
 3714 09fd 1D       		.uleb128 0x1d
 3715 09fe 05080000 		.4byte	.LASF123
 3716 0a02 01       		.byte	0x1
 3717 0a03 A60D     		.2byte	0xda6
 3718 0a05 00000000 		.4byte	.LFB49
 3719 0a09 28000000 		.4byte	.LFE49-.LFB49
 3720 0a0d 01       		.uleb128 0x1
 3721 0a0e 9C       		.byte	0x9c
 3722 0a0f 2B0A0000 		.4byte	0xa2b
 3723 0a13 09       		.uleb128 0x9
 3724 0a14 6900     		.ascii	"i\000"
 3725 0a16 01       		.byte	0x1
 3726 0a17 A80D     		.2byte	0xda8
 3727 0a19 83000000 		.4byte	0x83
 3728 0a1d BE050000 		.4byte	.LLST41
 3729 0a21 0C       		.uleb128 0xc
 3730 0a22 06000000 		.4byte	.LVL141
 3731 0a26 E7090000 		.4byte	0x9e7
 3732 0a2a 00       		.byte	0
 3733 0a2b 11       		.uleb128 0x11
 3734 0a2c F8020000 		.4byte	.LASF92
 3735 0a30 01       		.byte	0x1
 3736 0a31 5E0D     		.2byte	0xd5e
 3737 0a33 00000000 		.4byte	.LFB46
 3738 0a37 0C000000 		.4byte	.LFE46-.LFB46
 3739 0a3b 01       		.uleb128 0x1
 3740 0a3c 9C       		.byte	0x9c
 3741 0a3d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 134


 3742 0a3e A7020000 		.4byte	.LASF93
 3743 0a42 01       		.byte	0x1
 3744 0a43 810C     		.2byte	0xc81
 3745 0a45 00000000 		.4byte	.LFB35
 3746 0a49 44000000 		.4byte	.LFE35-.LFB35
 3747 0a4d 01       		.uleb128 0x1
 3748 0a4e 9C       		.byte	0x9c
 3749 0a4f A30A0000 		.4byte	0xaa3
 3750 0a53 09       		.uleb128 0x9
 3751 0a54 6900     		.ascii	"i\000"
 3752 0a56 01       		.byte	0x1
 3753 0a57 830C     		.2byte	0xc83
 3754 0a59 83000000 		.4byte	0x83
 3755 0a5d DC050000 		.4byte	.LLST42
 3756 0a61 16       		.uleb128 0x16
 3757 0a62 1C000000 		.4byte	.LVL151
 3758 0a66 1E040000 		.4byte	0x41e
 3759 0a6a 7D0A0000 		.4byte	0xa7d
 3760 0a6e 15       		.uleb128 0x15
 3761 0a6f 01       		.uleb128 0x1
 3762 0a70 50       		.byte	0x50
 3763 0a71 01       		.uleb128 0x1
 3764 0a72 3F       		.byte	0x3f
 3765 0a73 15       		.uleb128 0x15
 3766 0a74 01       		.uleb128 0x1
 3767 0a75 51       		.byte	0x51
 3768 0a76 05       		.uleb128 0x5
 3769 0a77 03       		.byte	0x3
 3770 0a78 00000000 		.4byte	CySysTickServiceCallbacks
 3771 0a7c 00       		.byte	0
 3772 0a7d 16       		.uleb128 0x16
 3773 0a7e 22000000 		.4byte	.LVL152
 3774 0a82 AC090000 		.4byte	0x9ac
 3775 0a86 900A0000 		.4byte	0xa90
 3776 0a8a 15       		.uleb128 0x15
 3777 0a8b 01       		.uleb128 0x1
 3778 0a8c 50       		.byte	0x50
 3779 0a8d 01       		.uleb128 0x1
 3780 0a8e 31       		.byte	0x31
 3781 0a8f 00       		.byte	0
 3782 0a90 0C       		.uleb128 0xc
 3783 0a91 32000000 		.4byte	.LVL154
 3784 0a95 59090000 		.4byte	0x959
 3785 0a99 0C       		.uleb128 0xc
 3786 0a9a 36000000 		.4byte	.LVL155
 3787 0a9e 2B0A0000 		.4byte	0xa2b
 3788 0aa2 00       		.byte	0
 3789 0aa3 08       		.uleb128 0x8
 3790 0aa4 4B040000 		.4byte	.LASF94
 3791 0aa8 01       		.byte	0x1
 3792 0aa9 640C     		.2byte	0xc64
 3793 0aab 00000000 		.4byte	.LFB34
 3794 0aaf 20000000 		.4byte	.LFE34-.LFB34
 3795 0ab3 01       		.uleb128 0x1
 3796 0ab4 9C       		.byte	0x9c
 3797 0ab5 CC0A0000 		.4byte	0xacc
 3798 0ab9 0C       		.uleb128 0xc
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 135


 3799 0aba 0E000000 		.4byte	.LVL156
 3800 0abe 3D0A0000 		.4byte	0xa3d
 3801 0ac2 0C       		.uleb128 0xc
 3802 0ac3 18000000 		.4byte	.LVL157
 3803 0ac7 27090000 		.4byte	0x927
 3804 0acb 00       		.byte	0
 3805 0acc 10       		.uleb128 0x10
 3806 0acd B2060000 		.4byte	.LASF95
 3807 0ad1 01       		.byte	0x1
 3808 0ad2 810D     		.2byte	0xd81
 3809 0ad4 E7000000 		.4byte	0xe7
 3810 0ad8 00000000 		.4byte	.LFB47
 3811 0adc 10000000 		.4byte	.LFE47-.LFB47
 3812 0ae0 01       		.uleb128 0x1
 3813 0ae1 9C       		.byte	0x9c
 3814 0ae2 130B0000 		.4byte	0xb13
 3815 0ae6 0E       		.uleb128 0xe
 3816 0ae7 D5030000 		.4byte	.LASF46
 3817 0aeb 01       		.byte	0x1
 3818 0aec 810D     		.2byte	0xd81
 3819 0aee 83000000 		.4byte	0x83
 3820 0af2 FB050000 		.4byte	.LLST43
 3821 0af6 0F       		.uleb128 0xf
 3822 0af7 DF040000 		.4byte	.LASF96
 3823 0afb 01       		.byte	0x1
 3824 0afc 810D     		.2byte	0xd81
 3825 0afe E7000000 		.4byte	0xe7
 3826 0b02 01       		.uleb128 0x1
 3827 0b03 51       		.byte	0x51
 3828 0b04 12       		.uleb128 0x12
 3829 0b05 60000000 		.4byte	.LASF97
 3830 0b09 01       		.byte	0x1
 3831 0b0a 830D     		.2byte	0xd83
 3832 0b0c E7000000 		.4byte	0xe7
 3833 0b10 01       		.uleb128 0x1
 3834 0b11 50       		.byte	0x50
 3835 0b12 00       		.byte	0
 3836 0b13 10       		.uleb128 0x10
 3837 0b14 6B030000 		.4byte	.LASF98
 3838 0b18 01       		.byte	0x1
 3839 0b19 990D     		.2byte	0xd99
 3840 0b1b E7000000 		.4byte	0xe7
 3841 0b1f 00000000 		.4byte	.LFB48
 3842 0b23 0C000000 		.4byte	.LFE48-.LFB48
 3843 0b27 01       		.uleb128 0x1
 3844 0b28 9C       		.byte	0x9c
 3845 0b29 3E0B0000 		.4byte	0xb3e
 3846 0b2d 0E       		.uleb128 0xe
 3847 0b2e D5030000 		.4byte	.LASF46
 3848 0b32 01       		.byte	0x1
 3849 0b33 990D     		.2byte	0xd99
 3850 0b35 83000000 		.4byte	0x83
 3851 0b39 1C060000 		.4byte	.LLST44
 3852 0b3d 00       		.byte	0
 3853 0b3e 08       		.uleb128 0x8
 3854 0b3f C7020000 		.4byte	.LASF99
 3855 0b43 01       		.byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 136


 3856 0b44 C60D     		.2byte	0xdc6
 3857 0b46 00000000 		.4byte	.LFB50
 3858 0b4a 70000000 		.4byte	.LFE50-.LFB50
 3859 0b4e 01       		.uleb128 0x1
 3860 0b4f 9C       		.byte	0x9c
 3861 0b50 630B0000 		.4byte	0xb63
 3862 0b54 0F       		.uleb128 0xf
 3863 0b55 DA060000 		.4byte	.LASF100
 3864 0b59 01       		.byte	0x1
 3865 0b5a C60D     		.2byte	0xdc6
 3866 0b5c 630B0000 		.4byte	0xb63
 3867 0b60 01       		.uleb128 0x1
 3868 0b61 50       		.byte	0x50
 3869 0b62 00       		.byte	0
 3870 0b63 06       		.uleb128 0x6
 3871 0b64 04       		.byte	0x4
 3872 0b65 83000000 		.4byte	0x83
 3873 0b69 08       		.uleb128 0x8
 3874 0b6a A7050000 		.4byte	.LASF101
 3875 0b6e 01       		.byte	0x1
 3876 0b6f F30D     		.2byte	0xdf3
 3877 0b71 00000000 		.4byte	.LFB51
 3878 0b75 20000000 		.4byte	.LFE51-.LFB51
 3879 0b79 01       		.uleb128 0x1
 3880 0b7a 9C       		.byte	0x9c
 3881 0b7b A00B0000 		.4byte	0xba0
 3882 0b7f 0E       		.uleb128 0xe
 3883 0b80 67040000 		.4byte	.LASF102
 3884 0b84 01       		.byte	0x1
 3885 0b85 F30D     		.2byte	0xdf3
 3886 0b87 83000000 		.4byte	0x83
 3887 0b8b 3D060000 		.4byte	.LLST45
 3888 0b8f 0A       		.uleb128 0xa
 3889 0b90 A7030000 		.4byte	.LASF68
 3890 0b94 01       		.byte	0x1
 3891 0b95 F50D     		.2byte	0xdf5
 3892 0b97 83000000 		.4byte	0x83
 3893 0b9b 5E060000 		.4byte	.LLST46
 3894 0b9f 00       		.byte	0
 3895 0ba0 08       		.uleb128 0x8
 3896 0ba1 FA030000 		.4byte	.LASF103
 3897 0ba5 01       		.byte	0x1
 3898 0ba6 0F0E     		.2byte	0xe0f
 3899 0ba8 00000000 		.4byte	.LFB52
 3900 0bac 20000000 		.4byte	.LFE52-.LFB52
 3901 0bb0 01       		.uleb128 0x1
 3902 0bb1 9C       		.byte	0x9c
 3903 0bb2 D70B0000 		.4byte	0xbd7
 3904 0bb6 0E       		.uleb128 0xe
 3905 0bb7 67040000 		.4byte	.LASF102
 3906 0bbb 01       		.byte	0x1
 3907 0bbc 0F0E     		.2byte	0xe0f
 3908 0bbe 83000000 		.4byte	0x83
 3909 0bc2 7C060000 		.4byte	.LLST47
 3910 0bc6 0A       		.uleb128 0xa
 3911 0bc7 A7030000 		.4byte	.LASF68
 3912 0bcb 01       		.byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 137


 3913 0bcc 110E     		.2byte	0xe11
 3914 0bce 83000000 		.4byte	0x83
 3915 0bd2 9D060000 		.4byte	.LLST48
 3916 0bd6 00       		.byte	0
 3917 0bd7 08       		.uleb128 0x8
 3918 0bd8 62070000 		.4byte	.LASF104
 3919 0bdc 01       		.byte	0x1
 3920 0bdd 2B0E     		.2byte	0xe2b
 3921 0bdf 00000000 		.4byte	.LFB53
 3922 0be3 20000000 		.4byte	.LFE53-.LFB53
 3923 0be7 01       		.uleb128 0x1
 3924 0be8 9C       		.byte	0x9c
 3925 0be9 0E0C0000 		.4byte	0xc0e
 3926 0bed 0E       		.uleb128 0xe
 3927 0bee 67040000 		.4byte	.LASF102
 3928 0bf2 01       		.byte	0x1
 3929 0bf3 2B0E     		.2byte	0xe2b
 3930 0bf5 83000000 		.4byte	0x83
 3931 0bf9 BB060000 		.4byte	.LLST49
 3932 0bfd 0A       		.uleb128 0xa
 3933 0bfe A7030000 		.4byte	.LASF68
 3934 0c02 01       		.byte	0x1
 3935 0c03 2D0E     		.2byte	0xe2d
 3936 0c05 83000000 		.4byte	0x83
 3937 0c09 DC060000 		.4byte	.LLST50
 3938 0c0d 00       		.byte	0
 3939 0c0e 08       		.uleb128 0x8
 3940 0c0f 88040000 		.4byte	.LASF105
 3941 0c13 01       		.byte	0x1
 3942 0c14 490E     		.2byte	0xe49
 3943 0c16 00000000 		.4byte	.LFB54
 3944 0c1a 68000000 		.4byte	.LFE54-.LFB54
 3945 0c1e 01       		.uleb128 0x1
 3946 0c1f 9C       		.byte	0x9c
 3947 0c20 640C0000 		.4byte	0xc64
 3948 0c24 0E       		.uleb128 0xe
 3949 0c25 32010000 		.4byte	.LASF106
 3950 0c29 01       		.byte	0x1
 3951 0c2a 490E     		.2byte	0xe49
 3952 0c2c 83000000 		.4byte	0x83
 3953 0c30 FA060000 		.4byte	.LLST51
 3954 0c34 0E       		.uleb128 0xe
 3955 0c35 67040000 		.4byte	.LASF102
 3956 0c39 01       		.byte	0x1
 3957 0c3a 490E     		.2byte	0xe49
 3958 0c3c 83000000 		.4byte	0x83
 3959 0c40 66070000 		.4byte	.LLST52
 3960 0c44 0A       		.uleb128 0xa
 3961 0c45 A7030000 		.4byte	.LASF68
 3962 0c49 01       		.byte	0x1
 3963 0c4a 4B0E     		.2byte	0xe4b
 3964 0c4c 83000000 		.4byte	0x83
 3965 0c50 D2070000 		.4byte	.LLST53
 3966 0c54 14       		.uleb128 0x14
 3967 0c55 56000000 		.4byte	.LVL192
 3968 0c59 F9030000 		.4byte	0x3f9
 3969 0c5d 15       		.uleb128 0x15
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 138


 3970 0c5e 01       		.uleb128 0x1
 3971 0c5f 50       		.byte	0x50
 3972 0c60 01       		.uleb128 0x1
 3973 0c61 30       		.byte	0x30
 3974 0c62 00       		.byte	0
 3975 0c63 00       		.byte	0
 3976 0c64 1A       		.uleb128 0x1a
 3977 0c65 E7000000 		.4byte	0xe7
 3978 0c69 740C0000 		.4byte	0xc74
 3979 0c6d 1B       		.uleb128 0x1b
 3980 0c6e E0000000 		.4byte	0xe0
 3981 0c72 04       		.byte	0x4
 3982 0c73 00       		.byte	0
 3983 0c74 19       		.uleb128 0x19
 3984 0c75 C7060000 		.4byte	.LASF107
 3985 0c79 01       		.byte	0x1
 3986 0c7a 22       		.byte	0x22
 3987 0c7b 640C0000 		.4byte	0xc64
 3988 0c7f 05       		.uleb128 0x5
 3989 0c80 03       		.byte	0x3
 3990 0c81 00000000 		.4byte	CySysTickCallbacks
 3991 0c85 1E       		.uleb128 0x1e
 3992 0c86 0B050000 		.4byte	.LASF108
 3993 0c8a 01       		.byte	0x1
 3994 0c8b 1B       		.byte	0x1b
 3995 0c8c 83000000 		.4byte	0x83
 3996 0c90 05       		.uleb128 0x5
 3997 0c91 03       		.byte	0x3
 3998 0c92 00000000 		.4byte	cydelayFreqHz
 3999 0c96 1E       		.uleb128 0x1e
 4000 0c97 12020000 		.4byte	.LASF109
 4001 0c9b 01       		.byte	0x1
 4002 0c9c 1C       		.byte	0x1c
 4003 0c9d 83000000 		.4byte	0x83
 4004 0ca1 05       		.uleb128 0x5
 4005 0ca2 03       		.byte	0x3
 4006 0ca3 00000000 		.4byte	cydelayFreqKhz
 4007 0ca7 1E       		.uleb128 0x1e
 4008 0ca8 40070000 		.4byte	.LASF110
 4009 0cac 01       		.byte	0x1
 4010 0cad 1D       		.byte	0x1d
 4011 0cae 6B000000 		.4byte	0x6b
 4012 0cb2 05       		.uleb128 0x5
 4013 0cb3 03       		.byte	0x3
 4014 0cb4 00000000 		.4byte	cydelayFreqMhz
 4015 0cb8 1E       		.uleb128 0x1e
 4016 0cb9 9A020000 		.4byte	.LASF111
 4017 0cbd 01       		.byte	0x1
 4018 0cbe 1E       		.byte	0x1e
 4019 0cbf 83000000 		.4byte	0x83
 4020 0cc3 05       		.uleb128 0x5
 4021 0cc4 03       		.byte	0x3
 4022 0cc5 00000000 		.4byte	cydelay32kMs
 4023 0cc9 1E       		.uleb128 0x1e
 4024 0cca 77040000 		.4byte	.LASF112
 4025 0cce 01       		.byte	0x1
 4026 0ccf 36       		.byte	0x36
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 139


 4027 0cd0 83000000 		.4byte	0x83
 4028 0cd4 05       		.uleb128 0x5
 4029 0cd5 03       		.byte	0x3
 4030 0cd6 00000000 		.4byte	CySysTickInitVar
 4031 0cda 1A       		.uleb128 0x1a
 4032 0cdb EA0C0000 		.4byte	0xcea
 4033 0cdf EA0C0000 		.4byte	0xcea
 4034 0ce3 1B       		.uleb128 0x1b
 4035 0ce4 E0000000 		.4byte	0xe0
 4036 0ce8 2D       		.byte	0x2d
 4037 0ce9 00       		.byte	0
 4038 0cea 1F       		.uleb128 0x1f
 4039 0ceb 6B000000 		.4byte	0x6b
 4040 0cef 1E       		.uleb128 0x1e
 4041 0cf0 E8040000 		.4byte	.LASF113
 4042 0cf4 01       		.byte	0x1
 4043 0cf5 3B       		.byte	0x3b
 4044 0cf6 000D0000 		.4byte	0xd00
 4045 0cfa 05       		.uleb128 0x5
 4046 0cfb 03       		.byte	0x3
 4047 0cfc 00000000 		.4byte	cyImoFreqMhz2Reg
 4048 0d00 1F       		.uleb128 0x1f
 4049 0d01 DA0C0000 		.4byte	0xcda
 4050 0d05 1E       		.uleb128 0x1e
 4051 0d06 38000000 		.4byte	.LASF114
 4052 0d0a 01       		.byte	0x1
 4053 0d0b 58       		.byte	0x58
 4054 0d0c 83000000 		.4byte	0x83
 4055 0d10 05       		.uleb128 0x5
 4056 0d11 03       		.byte	0x3
 4057 0d12 00000000 		.4byte	CySysClkPumpConfig
 4058 0d16 20       		.uleb128 0x20
 4059 0d17 44030000 		.4byte	.LASF115
 4060 0d1b 44030000 		.4byte	.LASF115
 4061 0d1f 03       		.byte	0x3
 4062 0d20 F8       		.byte	0xf8
 4063 0d21 20       		.uleb128 0x20
 4064 0d22 30050000 		.4byte	.LASF116
 4065 0d26 30050000 		.4byte	.LASF116
 4066 0d2a 03       		.byte	0x3
 4067 0d2b F9       		.byte	0xf9
 4068 0d2c 20       		.uleb128 0x20
 4069 0d2d 83050000 		.4byte	.LASF117
 4070 0d31 83050000 		.4byte	.LASF117
 4071 0d35 03       		.byte	0x3
 4072 0d36 EF       		.byte	0xef
 4073 0d37 20       		.uleb128 0x20
 4074 0d38 4F070000 		.4byte	.LASF118
 4075 0d3c 4F070000 		.4byte	.LASF118
 4076 0d40 04       		.byte	0x4
 4077 0d41 54       		.byte	0x54
 4078 0d42 20       		.uleb128 0x20
 4079 0d43 A7070000 		.4byte	.LASF119
 4080 0d47 A7070000 		.4byte	.LASF119
 4081 0d4b 05       		.byte	0x5
 4082 0d4c 52       		.byte	0x52
 4083 0d4d 00       		.byte	0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 140


 4084              		.section	.debug_abbrev,"",%progbits
 4085              	.Ldebug_abbrev0:
 4086 0000 01       		.uleb128 0x1
 4087 0001 11       		.uleb128 0x11
 4088 0002 01       		.byte	0x1
 4089 0003 25       		.uleb128 0x25
 4090 0004 0E       		.uleb128 0xe
 4091 0005 13       		.uleb128 0x13
 4092 0006 0B       		.uleb128 0xb
 4093 0007 03       		.uleb128 0x3
 4094 0008 0E       		.uleb128 0xe
 4095 0009 1B       		.uleb128 0x1b
 4096 000a 0E       		.uleb128 0xe
 4097 000b 55       		.uleb128 0x55
 4098 000c 17       		.uleb128 0x17
 4099 000d 11       		.uleb128 0x11
 4100 000e 01       		.uleb128 0x1
 4101 000f 10       		.uleb128 0x10
 4102 0010 17       		.uleb128 0x17
 4103 0011 00       		.byte	0
 4104 0012 00       		.byte	0
 4105 0013 02       		.uleb128 0x2
 4106 0014 24       		.uleb128 0x24
 4107 0015 00       		.byte	0
 4108 0016 0B       		.uleb128 0xb
 4109 0017 0B       		.uleb128 0xb
 4110 0018 3E       		.uleb128 0x3e
 4111 0019 0B       		.uleb128 0xb
 4112 001a 03       		.uleb128 0x3
 4113 001b 0E       		.uleb128 0xe
 4114 001c 00       		.byte	0
 4115 001d 00       		.byte	0
 4116 001e 03       		.uleb128 0x3
 4117 001f 24       		.uleb128 0x24
 4118 0020 00       		.byte	0
 4119 0021 0B       		.uleb128 0xb
 4120 0022 0B       		.uleb128 0xb
 4121 0023 3E       		.uleb128 0x3e
 4122 0024 0B       		.uleb128 0xb
 4123 0025 03       		.uleb128 0x3
 4124 0026 08       		.uleb128 0x8
 4125 0027 00       		.byte	0
 4126 0028 00       		.byte	0
 4127 0029 04       		.uleb128 0x4
 4128 002a 16       		.uleb128 0x16
 4129 002b 00       		.byte	0
 4130 002c 03       		.uleb128 0x3
 4131 002d 0E       		.uleb128 0xe
 4132 002e 3A       		.uleb128 0x3a
 4133 002f 0B       		.uleb128 0xb
 4134 0030 3B       		.uleb128 0x3b
 4135 0031 05       		.uleb128 0x5
 4136 0032 49       		.uleb128 0x49
 4137 0033 13       		.uleb128 0x13
 4138 0034 00       		.byte	0
 4139 0035 00       		.byte	0
 4140 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 141


 4141 0037 35       		.uleb128 0x35
 4142 0038 00       		.byte	0
 4143 0039 49       		.uleb128 0x49
 4144 003a 13       		.uleb128 0x13
 4145 003b 00       		.byte	0
 4146 003c 00       		.byte	0
 4147 003d 06       		.uleb128 0x6
 4148 003e 0F       		.uleb128 0xf
 4149 003f 00       		.byte	0
 4150 0040 0B       		.uleb128 0xb
 4151 0041 0B       		.uleb128 0xb
 4152 0042 49       		.uleb128 0x49
 4153 0043 13       		.uleb128 0x13
 4154 0044 00       		.byte	0
 4155 0045 00       		.byte	0
 4156 0046 07       		.uleb128 0x7
 4157 0047 15       		.uleb128 0x15
 4158 0048 00       		.byte	0
 4159 0049 27       		.uleb128 0x27
 4160 004a 19       		.uleb128 0x19
 4161 004b 00       		.byte	0
 4162 004c 00       		.byte	0
 4163 004d 08       		.uleb128 0x8
 4164 004e 2E       		.uleb128 0x2e
 4165 004f 01       		.byte	0x1
 4166 0050 3F       		.uleb128 0x3f
 4167 0051 19       		.uleb128 0x19
 4168 0052 03       		.uleb128 0x3
 4169 0053 0E       		.uleb128 0xe
 4170 0054 3A       		.uleb128 0x3a
 4171 0055 0B       		.uleb128 0xb
 4172 0056 3B       		.uleb128 0x3b
 4173 0057 05       		.uleb128 0x5
 4174 0058 27       		.uleb128 0x27
 4175 0059 19       		.uleb128 0x19
 4176 005a 11       		.uleb128 0x11
 4177 005b 01       		.uleb128 0x1
 4178 005c 12       		.uleb128 0x12
 4179 005d 06       		.uleb128 0x6
 4180 005e 40       		.uleb128 0x40
 4181 005f 18       		.uleb128 0x18
 4182 0060 9742     		.uleb128 0x2117
 4183 0062 19       		.uleb128 0x19
 4184 0063 01       		.uleb128 0x1
 4185 0064 13       		.uleb128 0x13
 4186 0065 00       		.byte	0
 4187 0066 00       		.byte	0
 4188 0067 09       		.uleb128 0x9
 4189 0068 34       		.uleb128 0x34
 4190 0069 00       		.byte	0
 4191 006a 03       		.uleb128 0x3
 4192 006b 08       		.uleb128 0x8
 4193 006c 3A       		.uleb128 0x3a
 4194 006d 0B       		.uleb128 0xb
 4195 006e 3B       		.uleb128 0x3b
 4196 006f 05       		.uleb128 0x5
 4197 0070 49       		.uleb128 0x49
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 142


 4198 0071 13       		.uleb128 0x13
 4199 0072 02       		.uleb128 0x2
 4200 0073 17       		.uleb128 0x17
 4201 0074 00       		.byte	0
 4202 0075 00       		.byte	0
 4203 0076 0A       		.uleb128 0xa
 4204 0077 34       		.uleb128 0x34
 4205 0078 00       		.byte	0
 4206 0079 03       		.uleb128 0x3
 4207 007a 0E       		.uleb128 0xe
 4208 007b 3A       		.uleb128 0x3a
 4209 007c 0B       		.uleb128 0xb
 4210 007d 3B       		.uleb128 0x3b
 4211 007e 05       		.uleb128 0x5
 4212 007f 49       		.uleb128 0x49
 4213 0080 13       		.uleb128 0x13
 4214 0081 02       		.uleb128 0x2
 4215 0082 17       		.uleb128 0x17
 4216 0083 00       		.byte	0
 4217 0084 00       		.byte	0
 4218 0085 0B       		.uleb128 0xb
 4219 0086 2E       		.uleb128 0x2e
 4220 0087 01       		.byte	0x1
 4221 0088 3F       		.uleb128 0x3f
 4222 0089 19       		.uleb128 0x19
 4223 008a 03       		.uleb128 0x3
 4224 008b 0E       		.uleb128 0xe
 4225 008c 3A       		.uleb128 0x3a
 4226 008d 0B       		.uleb128 0xb
 4227 008e 3B       		.uleb128 0x3b
 4228 008f 0B       		.uleb128 0xb
 4229 0090 27       		.uleb128 0x27
 4230 0091 19       		.uleb128 0x19
 4231 0092 11       		.uleb128 0x11
 4232 0093 01       		.uleb128 0x1
 4233 0094 12       		.uleb128 0x12
 4234 0095 06       		.uleb128 0x6
 4235 0096 40       		.uleb128 0x40
 4236 0097 18       		.uleb128 0x18
 4237 0098 9742     		.uleb128 0x2117
 4238 009a 19       		.uleb128 0x19
 4239 009b 01       		.uleb128 0x1
 4240 009c 13       		.uleb128 0x13
 4241 009d 00       		.byte	0
 4242 009e 00       		.byte	0
 4243 009f 0C       		.uleb128 0xc
 4244 00a0 898201   		.uleb128 0x4109
 4245 00a3 00       		.byte	0
 4246 00a4 11       		.uleb128 0x11
 4247 00a5 01       		.uleb128 0x1
 4248 00a6 31       		.uleb128 0x31
 4249 00a7 13       		.uleb128 0x13
 4250 00a8 00       		.byte	0
 4251 00a9 00       		.byte	0
 4252 00aa 0D       		.uleb128 0xd
 4253 00ab 2E       		.uleb128 0x2e
 4254 00ac 00       		.byte	0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 143


 4255 00ad 3F       		.uleb128 0x3f
 4256 00ae 19       		.uleb128 0x19
 4257 00af 03       		.uleb128 0x3
 4258 00b0 0E       		.uleb128 0xe
 4259 00b1 3A       		.uleb128 0x3a
 4260 00b2 0B       		.uleb128 0xb
 4261 00b3 3B       		.uleb128 0x3b
 4262 00b4 05       		.uleb128 0x5
 4263 00b5 27       		.uleb128 0x27
 4264 00b6 19       		.uleb128 0x19
 4265 00b7 49       		.uleb128 0x49
 4266 00b8 13       		.uleb128 0x13
 4267 00b9 11       		.uleb128 0x11
 4268 00ba 01       		.uleb128 0x1
 4269 00bb 12       		.uleb128 0x12
 4270 00bc 06       		.uleb128 0x6
 4271 00bd 40       		.uleb128 0x40
 4272 00be 18       		.uleb128 0x18
 4273 00bf 9742     		.uleb128 0x2117
 4274 00c1 19       		.uleb128 0x19
 4275 00c2 00       		.byte	0
 4276 00c3 00       		.byte	0
 4277 00c4 0E       		.uleb128 0xe
 4278 00c5 05       		.uleb128 0x5
 4279 00c6 00       		.byte	0
 4280 00c7 03       		.uleb128 0x3
 4281 00c8 0E       		.uleb128 0xe
 4282 00c9 3A       		.uleb128 0x3a
 4283 00ca 0B       		.uleb128 0xb
 4284 00cb 3B       		.uleb128 0x3b
 4285 00cc 05       		.uleb128 0x5
 4286 00cd 49       		.uleb128 0x49
 4287 00ce 13       		.uleb128 0x13
 4288 00cf 02       		.uleb128 0x2
 4289 00d0 17       		.uleb128 0x17
 4290 00d1 00       		.byte	0
 4291 00d2 00       		.byte	0
 4292 00d3 0F       		.uleb128 0xf
 4293 00d4 05       		.uleb128 0x5
 4294 00d5 00       		.byte	0
 4295 00d6 03       		.uleb128 0x3
 4296 00d7 0E       		.uleb128 0xe
 4297 00d8 3A       		.uleb128 0x3a
 4298 00d9 0B       		.uleb128 0xb
 4299 00da 3B       		.uleb128 0x3b
 4300 00db 05       		.uleb128 0x5
 4301 00dc 49       		.uleb128 0x49
 4302 00dd 13       		.uleb128 0x13
 4303 00de 02       		.uleb128 0x2
 4304 00df 18       		.uleb128 0x18
 4305 00e0 00       		.byte	0
 4306 00e1 00       		.byte	0
 4307 00e2 10       		.uleb128 0x10
 4308 00e3 2E       		.uleb128 0x2e
 4309 00e4 01       		.byte	0x1
 4310 00e5 3F       		.uleb128 0x3f
 4311 00e6 19       		.uleb128 0x19
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 144


 4312 00e7 03       		.uleb128 0x3
 4313 00e8 0E       		.uleb128 0xe
 4314 00e9 3A       		.uleb128 0x3a
 4315 00ea 0B       		.uleb128 0xb
 4316 00eb 3B       		.uleb128 0x3b
 4317 00ec 05       		.uleb128 0x5
 4318 00ed 27       		.uleb128 0x27
 4319 00ee 19       		.uleb128 0x19
 4320 00ef 49       		.uleb128 0x49
 4321 00f0 13       		.uleb128 0x13
 4322 00f1 11       		.uleb128 0x11
 4323 00f2 01       		.uleb128 0x1
 4324 00f3 12       		.uleb128 0x12
 4325 00f4 06       		.uleb128 0x6
 4326 00f5 40       		.uleb128 0x40
 4327 00f6 18       		.uleb128 0x18
 4328 00f7 9742     		.uleb128 0x2117
 4329 00f9 19       		.uleb128 0x19
 4330 00fa 01       		.uleb128 0x1
 4331 00fb 13       		.uleb128 0x13
 4332 00fc 00       		.byte	0
 4333 00fd 00       		.byte	0
 4334 00fe 11       		.uleb128 0x11
 4335 00ff 2E       		.uleb128 0x2e
 4336 0100 00       		.byte	0
 4337 0101 3F       		.uleb128 0x3f
 4338 0102 19       		.uleb128 0x19
 4339 0103 03       		.uleb128 0x3
 4340 0104 0E       		.uleb128 0xe
 4341 0105 3A       		.uleb128 0x3a
 4342 0106 0B       		.uleb128 0xb
 4343 0107 3B       		.uleb128 0x3b
 4344 0108 05       		.uleb128 0x5
 4345 0109 27       		.uleb128 0x27
 4346 010a 19       		.uleb128 0x19
 4347 010b 11       		.uleb128 0x11
 4348 010c 01       		.uleb128 0x1
 4349 010d 12       		.uleb128 0x12
 4350 010e 06       		.uleb128 0x6
 4351 010f 40       		.uleb128 0x40
 4352 0110 18       		.uleb128 0x18
 4353 0111 9742     		.uleb128 0x2117
 4354 0113 19       		.uleb128 0x19
 4355 0114 00       		.byte	0
 4356 0115 00       		.byte	0
 4357 0116 12       		.uleb128 0x12
 4358 0117 34       		.uleb128 0x34
 4359 0118 00       		.byte	0
 4360 0119 03       		.uleb128 0x3
 4361 011a 0E       		.uleb128 0xe
 4362 011b 3A       		.uleb128 0x3a
 4363 011c 0B       		.uleb128 0xb
 4364 011d 3B       		.uleb128 0x3b
 4365 011e 05       		.uleb128 0x5
 4366 011f 49       		.uleb128 0x49
 4367 0120 13       		.uleb128 0x13
 4368 0121 02       		.uleb128 0x2
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 145


 4369 0122 18       		.uleb128 0x18
 4370 0123 00       		.byte	0
 4371 0124 00       		.byte	0
 4372 0125 13       		.uleb128 0x13
 4373 0126 34       		.uleb128 0x34
 4374 0127 00       		.byte	0
 4375 0128 03       		.uleb128 0x3
 4376 0129 0E       		.uleb128 0xe
 4377 012a 3A       		.uleb128 0x3a
 4378 012b 0B       		.uleb128 0xb
 4379 012c 3B       		.uleb128 0x3b
 4380 012d 05       		.uleb128 0x5
 4381 012e 49       		.uleb128 0x49
 4382 012f 13       		.uleb128 0x13
 4383 0130 1C       		.uleb128 0x1c
 4384 0131 06       		.uleb128 0x6
 4385 0132 00       		.byte	0
 4386 0133 00       		.byte	0
 4387 0134 14       		.uleb128 0x14
 4388 0135 898201   		.uleb128 0x4109
 4389 0138 01       		.byte	0x1
 4390 0139 11       		.uleb128 0x11
 4391 013a 01       		.uleb128 0x1
 4392 013b 31       		.uleb128 0x31
 4393 013c 13       		.uleb128 0x13
 4394 013d 00       		.byte	0
 4395 013e 00       		.byte	0
 4396 013f 15       		.uleb128 0x15
 4397 0140 8A8201   		.uleb128 0x410a
 4398 0143 00       		.byte	0
 4399 0144 02       		.uleb128 0x2
 4400 0145 18       		.uleb128 0x18
 4401 0146 9142     		.uleb128 0x2111
 4402 0148 18       		.uleb128 0x18
 4403 0149 00       		.byte	0
 4404 014a 00       		.byte	0
 4405 014b 16       		.uleb128 0x16
 4406 014c 898201   		.uleb128 0x4109
 4407 014f 01       		.byte	0x1
 4408 0150 11       		.uleb128 0x11
 4409 0151 01       		.uleb128 0x1
 4410 0152 31       		.uleb128 0x31
 4411 0153 13       		.uleb128 0x13
 4412 0154 01       		.uleb128 0x1
 4413 0155 13       		.uleb128 0x13
 4414 0156 00       		.byte	0
 4415 0157 00       		.byte	0
 4416 0158 17       		.uleb128 0x17
 4417 0159 34       		.uleb128 0x34
 4418 015a 00       		.byte	0
 4419 015b 03       		.uleb128 0x3
 4420 015c 08       		.uleb128 0x8
 4421 015d 3A       		.uleb128 0x3a
 4422 015e 0B       		.uleb128 0xb
 4423 015f 3B       		.uleb128 0x3b
 4424 0160 0B       		.uleb128 0xb
 4425 0161 49       		.uleb128 0x49
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 146


 4426 0162 13       		.uleb128 0x13
 4427 0163 02       		.uleb128 0x2
 4428 0164 17       		.uleb128 0x17
 4429 0165 00       		.byte	0
 4430 0166 00       		.byte	0
 4431 0167 18       		.uleb128 0x18
 4432 0168 34       		.uleb128 0x34
 4433 0169 00       		.byte	0
 4434 016a 03       		.uleb128 0x3
 4435 016b 0E       		.uleb128 0xe
 4436 016c 3A       		.uleb128 0x3a
 4437 016d 0B       		.uleb128 0xb
 4438 016e 3B       		.uleb128 0x3b
 4439 016f 0B       		.uleb128 0xb
 4440 0170 49       		.uleb128 0x49
 4441 0171 13       		.uleb128 0x13
 4442 0172 02       		.uleb128 0x2
 4443 0173 17       		.uleb128 0x17
 4444 0174 00       		.byte	0
 4445 0175 00       		.byte	0
 4446 0176 19       		.uleb128 0x19
 4447 0177 34       		.uleb128 0x34
 4448 0178 00       		.byte	0
 4449 0179 03       		.uleb128 0x3
 4450 017a 0E       		.uleb128 0xe
 4451 017b 3A       		.uleb128 0x3a
 4452 017c 0B       		.uleb128 0xb
 4453 017d 3B       		.uleb128 0x3b
 4454 017e 0B       		.uleb128 0xb
 4455 017f 49       		.uleb128 0x49
 4456 0180 13       		.uleb128 0x13
 4457 0181 02       		.uleb128 0x2
 4458 0182 18       		.uleb128 0x18
 4459 0183 00       		.byte	0
 4460 0184 00       		.byte	0
 4461 0185 1A       		.uleb128 0x1a
 4462 0186 01       		.uleb128 0x1
 4463 0187 01       		.byte	0x1
 4464 0188 49       		.uleb128 0x49
 4465 0189 13       		.uleb128 0x13
 4466 018a 01       		.uleb128 0x1
 4467 018b 13       		.uleb128 0x13
 4468 018c 00       		.byte	0
 4469 018d 00       		.byte	0
 4470 018e 1B       		.uleb128 0x1b
 4471 018f 21       		.uleb128 0x21
 4472 0190 00       		.byte	0
 4473 0191 49       		.uleb128 0x49
 4474 0192 13       		.uleb128 0x13
 4475 0193 2F       		.uleb128 0x2f
 4476 0194 0B       		.uleb128 0xb
 4477 0195 00       		.byte	0
 4478 0196 00       		.byte	0
 4479 0197 1C       		.uleb128 0x1c
 4480 0198 2E       		.uleb128 0x2e
 4481 0199 01       		.byte	0x1
 4482 019a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 147


 4483 019b 19       		.uleb128 0x19
 4484 019c 03       		.uleb128 0x3
 4485 019d 0E       		.uleb128 0xe
 4486 019e 3A       		.uleb128 0x3a
 4487 019f 0B       		.uleb128 0xb
 4488 01a0 3B       		.uleb128 0x3b
 4489 01a1 05       		.uleb128 0x5
 4490 01a2 27       		.uleb128 0x27
 4491 01a3 19       		.uleb128 0x19
 4492 01a4 11       		.uleb128 0x11
 4493 01a5 01       		.uleb128 0x1
 4494 01a6 12       		.uleb128 0x12
 4495 01a7 06       		.uleb128 0x6
 4496 01a8 40       		.uleb128 0x40
 4497 01a9 18       		.uleb128 0x18
 4498 01aa 9642     		.uleb128 0x2116
 4499 01ac 19       		.uleb128 0x19
 4500 01ad 01       		.uleb128 0x1
 4501 01ae 13       		.uleb128 0x13
 4502 01af 00       		.byte	0
 4503 01b0 00       		.byte	0
 4504 01b1 1D       		.uleb128 0x1d
 4505 01b2 2E       		.uleb128 0x2e
 4506 01b3 01       		.byte	0x1
 4507 01b4 03       		.uleb128 0x3
 4508 01b5 0E       		.uleb128 0xe
 4509 01b6 3A       		.uleb128 0x3a
 4510 01b7 0B       		.uleb128 0xb
 4511 01b8 3B       		.uleb128 0x3b
 4512 01b9 05       		.uleb128 0x5
 4513 01ba 27       		.uleb128 0x27
 4514 01bb 19       		.uleb128 0x19
 4515 01bc 11       		.uleb128 0x11
 4516 01bd 01       		.uleb128 0x1
 4517 01be 12       		.uleb128 0x12
 4518 01bf 06       		.uleb128 0x6
 4519 01c0 40       		.uleb128 0x40
 4520 01c1 18       		.uleb128 0x18
 4521 01c2 9642     		.uleb128 0x2116
 4522 01c4 19       		.uleb128 0x19
 4523 01c5 01       		.uleb128 0x1
 4524 01c6 13       		.uleb128 0x13
 4525 01c7 00       		.byte	0
 4526 01c8 00       		.byte	0
 4527 01c9 1E       		.uleb128 0x1e
 4528 01ca 34       		.uleb128 0x34
 4529 01cb 00       		.byte	0
 4530 01cc 03       		.uleb128 0x3
 4531 01cd 0E       		.uleb128 0xe
 4532 01ce 3A       		.uleb128 0x3a
 4533 01cf 0B       		.uleb128 0xb
 4534 01d0 3B       		.uleb128 0x3b
 4535 01d1 0B       		.uleb128 0xb
 4536 01d2 49       		.uleb128 0x49
 4537 01d3 13       		.uleb128 0x13
 4538 01d4 3F       		.uleb128 0x3f
 4539 01d5 19       		.uleb128 0x19
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 148


 4540 01d6 02       		.uleb128 0x2
 4541 01d7 18       		.uleb128 0x18
 4542 01d8 00       		.byte	0
 4543 01d9 00       		.byte	0
 4544 01da 1F       		.uleb128 0x1f
 4545 01db 26       		.uleb128 0x26
 4546 01dc 00       		.byte	0
 4547 01dd 49       		.uleb128 0x49
 4548 01de 13       		.uleb128 0x13
 4549 01df 00       		.byte	0
 4550 01e0 00       		.byte	0
 4551 01e1 20       		.uleb128 0x20
 4552 01e2 2E       		.uleb128 0x2e
 4553 01e3 00       		.byte	0
 4554 01e4 3F       		.uleb128 0x3f
 4555 01e5 19       		.uleb128 0x19
 4556 01e6 3C       		.uleb128 0x3c
 4557 01e7 19       		.uleb128 0x19
 4558 01e8 6E       		.uleb128 0x6e
 4559 01e9 0E       		.uleb128 0xe
 4560 01ea 03       		.uleb128 0x3
 4561 01eb 0E       		.uleb128 0xe
 4562 01ec 3A       		.uleb128 0x3a
 4563 01ed 0B       		.uleb128 0xb
 4564 01ee 3B       		.uleb128 0x3b
 4565 01ef 0B       		.uleb128 0xb
 4566 01f0 00       		.byte	0
 4567 01f1 00       		.byte	0
 4568 01f2 00       		.byte	0
 4569              		.section	.debug_loc,"",%progbits
 4570              	.Ldebug_loc0:
 4571              	.LLST0:
 4572 0000 00000000 		.4byte	.LVL0
 4573 0004 04000000 		.4byte	.LVL1
 4574 0008 0200     		.2byte	0x2
 4575 000a 30       		.byte	0x30
 4576 000b 9F       		.byte	0x9f
 4577 000c 04000000 		.4byte	.LVL1
 4578 0010 16000000 		.4byte	.LVL2
 4579 0014 0100     		.2byte	0x1
 4580 0016 53       		.byte	0x53
 4581 0017 16000000 		.4byte	.LVL2
 4582 001b 18000000 		.4byte	.LVL3
 4583 001f 0300     		.2byte	0x3
 4584 0021 73       		.byte	0x73
 4585 0022 7D       		.sleb128 -3
 4586 0023 9F       		.byte	0x9f
 4587 0024 18000000 		.4byte	.LVL3
 4588 0028 20000000 		.4byte	.LVL5
 4589 002c 0100     		.2byte	0x1
 4590 002e 53       		.byte	0x53
 4591 002f 00000000 		.4byte	0
 4592 0033 00000000 		.4byte	0
 4593              	.LLST1:
 4594 0037 00000000 		.4byte	.LVL0
 4595 003b 16000000 		.4byte	.LVL2
 4596 003f 0200     		.2byte	0x2
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 149


 4597 0041 33       		.byte	0x33
 4598 0042 9F       		.byte	0x9f
 4599 0043 16000000 		.4byte	.LVL2
 4600 0047 18000000 		.4byte	.LVL3
 4601 004b 0100     		.2byte	0x1
 4602 004d 53       		.byte	0x53
 4603 004e 18000000 		.4byte	.LVL3
 4604 0052 20000000 		.4byte	.LVL5
 4605 0056 0200     		.2byte	0x2
 4606 0058 33       		.byte	0x33
 4607 0059 9F       		.byte	0x9f
 4608 005a 20000000 		.4byte	.LVL5
 4609 005e 30000000 		.4byte	.LVL6
 4610 0062 0100     		.2byte	0x1
 4611 0064 53       		.byte	0x53
 4612 0065 30000000 		.4byte	.LVL6
 4613 0069 32000000 		.4byte	.LVL7
 4614 006d 0700     		.2byte	0x7
 4615 006f 73       		.byte	0x73
 4616 0070 B39C8080 		.sleb128 -268431821
 4616      7F
 4617 0075 9F       		.byte	0x9f
 4618 0076 00000000 		.4byte	0
 4619 007a 00000000 		.4byte	0
 4620              	.LLST2:
 4621 007e 00000000 		.4byte	.LVL9
 4622 0082 07000000 		.4byte	.LVL10-1
 4623 0086 0100     		.2byte	0x1
 4624 0088 50       		.byte	0x50
 4625 0089 07000000 		.4byte	.LVL10-1
 4626 008d 12000000 		.4byte	.LVL12
 4627 0091 0100     		.2byte	0x1
 4628 0093 54       		.byte	0x54
 4629 0094 12000000 		.4byte	.LVL12
 4630 0098 20000000 		.4byte	.LFE6
 4631 009c 0400     		.2byte	0x4
 4632 009e F3       		.byte	0xf3
 4633 009f 01       		.uleb128 0x1
 4634 00a0 50       		.byte	0x50
 4635 00a1 9F       		.byte	0x9f
 4636 00a2 00000000 		.4byte	0
 4637 00a6 00000000 		.4byte	0
 4638              	.LLST3:
 4639 00aa 08000000 		.4byte	.LVL10
 4640 00ae 19000000 		.4byte	.LVL14-1
 4641 00b2 0100     		.2byte	0x1
 4642 00b4 50       		.byte	0x50
 4643 00b5 00000000 		.4byte	0
 4644 00b9 00000000 		.4byte	0
 4645              	.LLST4:
 4646 00bd 10000000 		.4byte	.LVL11
 4647 00c1 14000000 		.4byte	.LVL13
 4648 00c5 0100     		.2byte	0x1
 4649 00c7 53       		.byte	0x53
 4650 00c8 14000000 		.4byte	.LVL13
 4651 00cc 1A000000 		.4byte	.LVL15
 4652 00d0 0100     		.2byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 150


 4653 00d2 54       		.byte	0x54
 4654 00d3 00000000 		.4byte	0
 4655 00d7 00000000 		.4byte	0
 4656              	.LLST5:
 4657 00db 06000000 		.4byte	.LVL17
 4658 00df 11000000 		.4byte	.LVL19-1
 4659 00e3 0100     		.2byte	0x1
 4660 00e5 50       		.byte	0x50
 4661 00e6 00000000 		.4byte	0
 4662 00ea 00000000 		.4byte	0
 4663              	.LLST6:
 4664 00ee 0E000000 		.4byte	.LVL18
 4665 00f2 14000000 		.4byte	.LVL20
 4666 00f6 0100     		.2byte	0x1
 4667 00f8 54       		.byte	0x54
 4668 00f9 14000000 		.4byte	.LVL20
 4669 00fd 1C000000 		.4byte	.LFE8
 4670 0101 0100     		.2byte	0x1
 4671 0103 50       		.byte	0x50
 4672 0104 00000000 		.4byte	0
 4673 0108 00000000 		.4byte	0
 4674              	.LLST7:
 4675 010c 00000000 		.4byte	.LVL21
 4676 0110 07000000 		.4byte	.LVL22-1
 4677 0114 0100     		.2byte	0x1
 4678 0116 50       		.byte	0x50
 4679 0117 07000000 		.4byte	.LVL22-1
 4680 011b 14000000 		.4byte	.LVL23
 4681 011f 0100     		.2byte	0x1
 4682 0121 54       		.byte	0x54
 4683 0122 14000000 		.4byte	.LVL23
 4684 0126 30000000 		.4byte	.LFE9
 4685 012a 0400     		.2byte	0x4
 4686 012c F3       		.byte	0xf3
 4687 012d 01       		.uleb128 0x1
 4688 012e 50       		.byte	0x50
 4689 012f 9F       		.byte	0x9f
 4690 0130 00000000 		.4byte	0
 4691 0134 00000000 		.4byte	0
 4692              	.LLST8:
 4693 0138 08000000 		.4byte	.LVL22
 4694 013c 23000000 		.4byte	.LVL24-1
 4695 0140 0100     		.2byte	0x1
 4696 0142 50       		.byte	0x50
 4697 0143 00000000 		.4byte	0
 4698 0147 00000000 		.4byte	0
 4699              	.LLST9:
 4700 014b 00000000 		.4byte	.LVL25
 4701 014f 04000000 		.4byte	.LVL26
 4702 0153 0100     		.2byte	0x1
 4703 0155 50       		.byte	0x50
 4704 0156 04000000 		.4byte	.LVL26
 4705 015a 14000000 		.4byte	.LFE15
 4706 015e 0100     		.2byte	0x1
 4707 0160 52       		.byte	0x52
 4708 0161 00000000 		.4byte	0
 4709 0165 00000000 		.4byte	0
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 151


 4710              	.LLST10:
 4711 0169 00000000 		.4byte	.LVL31
 4712 016d 04000000 		.4byte	.LVL32
 4713 0171 0100     		.2byte	0x1
 4714 0173 50       		.byte	0x50
 4715 0174 04000000 		.4byte	.LVL32
 4716 0178 14000000 		.4byte	.LFE24
 4717 017c 0400     		.2byte	0x4
 4718 017e F3       		.byte	0xf3
 4719 017f 01       		.uleb128 0x1
 4720 0180 50       		.byte	0x50
 4721 0181 9F       		.byte	0x9f
 4722 0182 00000000 		.4byte	0
 4723 0186 00000000 		.4byte	0
 4724              	.LLST11:
 4725 018a 00000000 		.4byte	.LVL33
 4726 018e 08000000 		.4byte	.LVL34
 4727 0192 0100     		.2byte	0x1
 4728 0194 50       		.byte	0x50
 4729 0195 08000000 		.4byte	.LVL34
 4730 0199 18000000 		.4byte	.LFE25
 4731 019d 0400     		.2byte	0x4
 4732 019f F3       		.byte	0xf3
 4733 01a0 01       		.uleb128 0x1
 4734 01a1 50       		.byte	0x50
 4735 01a2 9F       		.byte	0x9f
 4736 01a3 00000000 		.4byte	0
 4737 01a7 00000000 		.4byte	0
 4738              	.LLST12:
 4739 01ab 00000000 		.4byte	.LVL35
 4740 01af 04000000 		.4byte	.LVL36
 4741 01b3 0100     		.2byte	0x1
 4742 01b5 50       		.byte	0x50
 4743 01b6 04000000 		.4byte	.LVL36
 4744 01ba 14000000 		.4byte	.LFE26
 4745 01be 0400     		.2byte	0x4
 4746 01c0 F3       		.byte	0xf3
 4747 01c1 01       		.uleb128 0x1
 4748 01c2 50       		.byte	0x50
 4749 01c3 9F       		.byte	0x9f
 4750 01c4 00000000 		.4byte	0
 4751 01c8 00000000 		.4byte	0
 4752              	.LLST13:
 4753 01cc 00000000 		.4byte	.LVL37
 4754 01d0 04000000 		.4byte	.LVL38
 4755 01d4 0100     		.2byte	0x1
 4756 01d6 50       		.byte	0x50
 4757 01d7 04000000 		.4byte	.LVL38
 4758 01db 14000000 		.4byte	.LFE27
 4759 01df 0400     		.2byte	0x4
 4760 01e1 F3       		.byte	0xf3
 4761 01e2 01       		.uleb128 0x1
 4762 01e3 50       		.byte	0x50
 4763 01e4 9F       		.byte	0x9f
 4764 01e5 00000000 		.4byte	0
 4765 01e9 00000000 		.4byte	0
 4766              	.LLST14:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 152


 4767 01ed 00000000 		.4byte	.LVL39
 4768 01f1 04000000 		.4byte	.LVL40
 4769 01f5 0100     		.2byte	0x1
 4770 01f7 50       		.byte	0x50
 4771 01f8 04000000 		.4byte	.LVL40
 4772 01fc 14000000 		.4byte	.LFE28
 4773 0200 0400     		.2byte	0x4
 4774 0202 F3       		.byte	0xf3
 4775 0203 01       		.uleb128 0x1
 4776 0204 50       		.byte	0x50
 4777 0205 9F       		.byte	0x9f
 4778 0206 00000000 		.4byte	0
 4779 020a 00000000 		.4byte	0
 4780              	.LLST15:
 4781 020e 00000000 		.4byte	.LVL42
 4782 0212 0C000000 		.4byte	.LVL44
 4783 0216 0100     		.2byte	0x1
 4784 0218 50       		.byte	0x50
 4785 0219 0C000000 		.4byte	.LVL44
 4786 021d 20000000 		.4byte	.LFE18
 4787 0221 0400     		.2byte	0x4
 4788 0223 F3       		.byte	0xf3
 4789 0224 01       		.uleb128 0x1
 4790 0225 50       		.byte	0x50
 4791 0226 9F       		.byte	0x9f
 4792 0227 00000000 		.4byte	0
 4793 022b 00000000 		.4byte	0
 4794              	.LLST16:
 4795 022f 00000000 		.4byte	.LVL42
 4796 0233 0F000000 		.4byte	.LVL45-1
 4797 0237 0100     		.2byte	0x1
 4798 0239 51       		.byte	0x51
 4799 023a 0F000000 		.4byte	.LVL45-1
 4800 023e 1E000000 		.4byte	.LVL47
 4801 0242 0100     		.2byte	0x1
 4802 0244 55       		.byte	0x55
 4803 0245 1E000000 		.4byte	.LVL47
 4804 0249 20000000 		.4byte	.LFE18
 4805 024d 0400     		.2byte	0x4
 4806 024f F3       		.byte	0xf3
 4807 0250 01       		.uleb128 0x1
 4808 0251 51       		.byte	0x51
 4809 0252 9F       		.byte	0x9f
 4810 0253 00000000 		.4byte	0
 4811 0257 00000000 		.4byte	0
 4812              	.LLST17:
 4813 025b 00000000 		.4byte	.LVL48
 4814 025f 0A000000 		.4byte	.LVL50
 4815 0263 0100     		.2byte	0x1
 4816 0265 50       		.byte	0x50
 4817 0266 0A000000 		.4byte	.LVL50
 4818 026a 1C000000 		.4byte	.LFE19
 4819 026e 0400     		.2byte	0x4
 4820 0270 F3       		.byte	0xf3
 4821 0271 01       		.uleb128 0x1
 4822 0272 50       		.byte	0x50
 4823 0273 9F       		.byte	0x9f
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 153


 4824 0274 00000000 		.4byte	0
 4825 0278 00000000 		.4byte	0
 4826              	.LLST18:
 4827 027c 00000000 		.4byte	.LVL52
 4828 0280 0C000000 		.4byte	.LVL54
 4829 0284 0100     		.2byte	0x1
 4830 0286 50       		.byte	0x50
 4831 0287 0C000000 		.4byte	.LVL54
 4832 028b 22000000 		.4byte	.LFE20
 4833 028f 0400     		.2byte	0x4
 4834 0291 F3       		.byte	0xf3
 4835 0292 01       		.uleb128 0x1
 4836 0293 50       		.byte	0x50
 4837 0294 9F       		.byte	0x9f
 4838 0295 00000000 		.4byte	0
 4839 0299 00000000 		.4byte	0
 4840              	.LLST19:
 4841 029d 00000000 		.4byte	.LVL52
 4842 02a1 0F000000 		.4byte	.LVL55-1
 4843 02a5 0100     		.2byte	0x1
 4844 02a7 51       		.byte	0x51
 4845 02a8 0F000000 		.4byte	.LVL55-1
 4846 02ac 20000000 		.4byte	.LVL57
 4847 02b0 0100     		.2byte	0x1
 4848 02b2 55       		.byte	0x55
 4849 02b3 20000000 		.4byte	.LVL57
 4850 02b7 22000000 		.4byte	.LFE20
 4851 02bb 0400     		.2byte	0x4
 4852 02bd F3       		.byte	0xf3
 4853 02be 01       		.uleb128 0x1
 4854 02bf 51       		.byte	0x51
 4855 02c0 9F       		.byte	0x9f
 4856 02c1 00000000 		.4byte	0
 4857 02c5 00000000 		.4byte	0
 4858              	.LLST20:
 4859 02c9 00000000 		.4byte	.LVL58
 4860 02cd 0A000000 		.4byte	.LVL60
 4861 02d1 0100     		.2byte	0x1
 4862 02d3 50       		.byte	0x50
 4863 02d4 0A000000 		.4byte	.LVL60
 4864 02d8 1E000000 		.4byte	.LFE21
 4865 02dc 0400     		.2byte	0x4
 4866 02de F3       		.byte	0xf3
 4867 02df 01       		.uleb128 0x1
 4868 02e0 50       		.byte	0x50
 4869 02e1 9F       		.byte	0x9f
 4870 02e2 00000000 		.4byte	0
 4871 02e6 00000000 		.4byte	0
 4872              	.LLST21:
 4873 02ea 00000000 		.4byte	.LVL62
 4874 02ee 0C000000 		.4byte	.LVL63
 4875 02f2 0100     		.2byte	0x1
 4876 02f4 50       		.byte	0x50
 4877 02f5 0C000000 		.4byte	.LVL63
 4878 02f9 4C000000 		.4byte	.LFE22
 4879 02fd 0400     		.2byte	0x4
 4880 02ff F3       		.byte	0xf3
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 154


 4881 0300 01       		.uleb128 0x1
 4882 0301 50       		.byte	0x50
 4883 0302 9F       		.byte	0x9f
 4884 0303 00000000 		.4byte	0
 4885 0307 00000000 		.4byte	0
 4886              	.LLST22:
 4887 030b 00000000 		.4byte	.LVL62
 4888 030f 0F000000 		.4byte	.LVL64-1
 4889 0313 0100     		.2byte	0x1
 4890 0315 51       		.byte	0x51
 4891 0316 0F000000 		.4byte	.LVL64-1
 4892 031a 4C000000 		.4byte	.LFE22
 4893 031e 0400     		.2byte	0x4
 4894 0320 F3       		.byte	0xf3
 4895 0321 01       		.uleb128 0x1
 4896 0322 51       		.byte	0x51
 4897 0323 9F       		.byte	0x9f
 4898 0324 00000000 		.4byte	0
 4899 0328 00000000 		.4byte	0
 4900              	.LLST23:
 4901 032c 26000000 		.4byte	.LVL67
 4902 0330 45000000 		.4byte	.LVL73-1
 4903 0334 0100     		.2byte	0x1
 4904 0336 50       		.byte	0x50
 4905 0337 00000000 		.4byte	0
 4906 033b 00000000 		.4byte	0
 4907              	.LLST24:
 4908 033f 22000000 		.4byte	.LVL66
 4909 0343 46000000 		.4byte	.LVL74
 4910 0347 0100     		.2byte	0x1
 4911 0349 55       		.byte	0x55
 4912 034a 00000000 		.4byte	0
 4913 034e 00000000 		.4byte	0
 4914              	.LLST25:
 4915 0352 32000000 		.4byte	.LVL68
 4916 0356 38000000 		.4byte	.LVL69
 4917 035a 0100     		.2byte	0x1
 4918 035c 51       		.byte	0x51
 4919 035d 3A000000 		.4byte	.LVL70
 4920 0361 3C000000 		.4byte	.LVL71
 4921 0365 0100     		.2byte	0x1
 4922 0367 51       		.byte	0x51
 4923 0368 3C000000 		.4byte	.LVL71
 4924 036c 40000000 		.4byte	.LVL72
 4925 0370 0100     		.2byte	0x1
 4926 0372 53       		.byte	0x53
 4927 0373 40000000 		.4byte	.LVL72
 4928 0377 45000000 		.4byte	.LVL73-1
 4929 037b 0100     		.2byte	0x1
 4930 037d 51       		.byte	0x51
 4931 037e 00000000 		.4byte	0
 4932 0382 00000000 		.4byte	0
 4933              	.LLST26:
 4934 0386 00000000 		.4byte	.LVL75
 4935 038a 0A000000 		.4byte	.LVL76
 4936 038e 0100     		.2byte	0x1
 4937 0390 50       		.byte	0x50
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 155


 4938 0391 0A000000 		.4byte	.LVL76
 4939 0395 2C000000 		.4byte	.LFE23
 4940 0399 0400     		.2byte	0x4
 4941 039b F3       		.byte	0xf3
 4942 039c 01       		.uleb128 0x1
 4943 039d 50       		.byte	0x50
 4944 039e 9F       		.byte	0x9f
 4945 039f 00000000 		.4byte	0
 4946 03a3 00000000 		.4byte	0
 4947              	.LLST27:
 4948 03a7 24000000 		.4byte	.LVL78
 4949 03ab 26000000 		.4byte	.LVL79
 4950 03af 0100     		.2byte	0x1
 4951 03b1 50       		.byte	0x50
 4952 03b2 00000000 		.4byte	0
 4953 03b6 00000000 		.4byte	0
 4954              	.LLST28:
 4955 03ba 00000000 		.4byte	.LVL80
 4956 03be 06000000 		.4byte	.LVL81
 4957 03c2 0100     		.2byte	0x1
 4958 03c4 50       		.byte	0x50
 4959 03c5 06000000 		.4byte	.LVL81
 4960 03c9 26000000 		.4byte	.LVL85
 4961 03cd 0100     		.2byte	0x1
 4962 03cf 54       		.byte	0x54
 4963 03d0 00000000 		.4byte	0
 4964 03d4 00000000 		.4byte	0
 4965              	.LLST29:
 4966 03d8 12000000 		.4byte	.LVL89
 4967 03dc 16000000 		.4byte	.LVL90
 4968 03e0 0200     		.2byte	0x2
 4969 03e2 30       		.byte	0x30
 4970 03e3 9F       		.byte	0x9f
 4971 03e4 16000000 		.4byte	.LVL90
 4972 03e8 28000000 		.4byte	.LVL91
 4973 03ec 0100     		.2byte	0x1
 4974 03ee 53       		.byte	0x53
 4975 03ef 28000000 		.4byte	.LVL91
 4976 03f3 2A000000 		.4byte	.LVL92
 4977 03f7 0300     		.2byte	0x3
 4978 03f9 73       		.byte	0x73
 4979 03fa 7D       		.sleb128 -3
 4980 03fb 9F       		.byte	0x9f
 4981 03fc 2A000000 		.4byte	.LVL92
 4982 0400 32000000 		.4byte	.LVL94
 4983 0404 0100     		.2byte	0x1
 4984 0406 53       		.byte	0x53
 4985 0407 00000000 		.4byte	0
 4986 040b 00000000 		.4byte	0
 4987              	.LLST30:
 4988 040f 12000000 		.4byte	.LVL89
 4989 0413 28000000 		.4byte	.LVL91
 4990 0417 0200     		.2byte	0x2
 4991 0419 33       		.byte	0x33
 4992 041a 9F       		.byte	0x9f
 4993 041b 28000000 		.4byte	.LVL91
 4994 041f 2A000000 		.4byte	.LVL92
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 156


 4995 0423 0100     		.2byte	0x1
 4996 0425 53       		.byte	0x53
 4997 0426 2A000000 		.4byte	.LVL92
 4998 042a 32000000 		.4byte	.LVL94
 4999 042e 0200     		.2byte	0x2
 5000 0430 33       		.byte	0x33
 5001 0431 9F       		.byte	0x9f
 5002 0432 32000000 		.4byte	.LVL94
 5003 0436 5C000000 		.4byte	.LVL96
 5004 043a 0100     		.2byte	0x1
 5005 043c 53       		.byte	0x53
 5006 043d 00000000 		.4byte	0
 5007 0441 00000000 		.4byte	0
 5008              	.LLST31:
 5009 0445 12000000 		.4byte	.LVL89
 5010 0449 C8000000 		.4byte	.LVL109
 5011 044d 0100     		.2byte	0x1
 5012 044f 55       		.byte	0x55
 5013 0450 00000000 		.4byte	0
 5014 0454 00000000 		.4byte	0
 5015              	.LLST32:
 5016 0458 56000000 		.4byte	.LVL95
 5017 045c 6E000000 		.4byte	.LVL97
 5018 0460 0100     		.2byte	0x1
 5019 0462 51       		.byte	0x51
 5020 0463 6E000000 		.4byte	.LVL97
 5021 0467 78000000 		.4byte	.LVL99
 5022 046b 0100     		.2byte	0x1
 5023 046d 53       		.byte	0x53
 5024 046e 78000000 		.4byte	.LVL99
 5025 0472 7C000000 		.4byte	.LVL100
 5026 0476 0200     		.2byte	0x2
 5027 0478 74       		.byte	0x74
 5028 0479 00       		.sleb128 0
 5029 047a 94000000 		.4byte	.LVL102
 5030 047e B8000000 		.4byte	.LVL108
 5031 0482 0100     		.2byte	0x1
 5032 0484 56       		.byte	0x56
 5033 0485 00000000 		.4byte	0
 5034 0489 00000000 		.4byte	0
 5035              	.LLST33:
 5036 048d 04000000 		.4byte	.LVL86
 5037 0491 98000000 		.4byte	.LVL103
 5038 0495 0200     		.2byte	0x2
 5039 0497 30       		.byte	0x30
 5040 0498 9F       		.byte	0x9f
 5041 0499 98000000 		.4byte	.LVL103
 5042 049d C8000000 		.4byte	.LVL109
 5043 04a1 0100     		.2byte	0x1
 5044 04a3 54       		.byte	0x54
 5045 04a4 00000000 		.4byte	0
 5046 04a8 00000000 		.4byte	0
 5047              	.LLST34:
 5048 04ac 00000000 		.4byte	.LVL111
 5049 04b0 09000000 		.4byte	.LVL113-1
 5050 04b4 0100     		.2byte	0x1
 5051 04b6 50       		.byte	0x50
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 157


 5052 04b7 09000000 		.4byte	.LVL113-1
 5053 04bb 2C000000 		.4byte	.LVL120
 5054 04bf 0100     		.2byte	0x1
 5055 04c1 54       		.byte	0x54
 5056 04c2 2C000000 		.4byte	.LVL120
 5057 04c6 5E000000 		.4byte	.LVL123
 5058 04ca 0300     		.2byte	0x3
 5059 04cc 74       		.byte	0x74
 5060 04cd 03       		.sleb128 3
 5061 04ce 9F       		.byte	0x9f
 5062 04cf 5E000000 		.4byte	.LVL123
 5063 04d3 80000000 		.4byte	.LFE10
 5064 04d7 0400     		.2byte	0x4
 5065 04d9 F3       		.byte	0xf3
 5066 04da 01       		.uleb128 0x1
 5067 04db 50       		.byte	0x50
 5068 04dc 9F       		.byte	0x9f
 5069 04dd 00000000 		.4byte	0
 5070 04e1 00000000 		.4byte	0
 5071              	.LLST35:
 5072 04e5 06000000 		.4byte	.LVL112
 5073 04e9 14000000 		.4byte	.LVL116
 5074 04ed 0200     		.2byte	0x2
 5075 04ef 30       		.byte	0x30
 5076 04f0 9F       		.byte	0x9f
 5077 04f1 14000000 		.4byte	.LVL116
 5078 04f5 1C000000 		.4byte	.LVL118
 5079 04f9 0200     		.2byte	0x2
 5080 04fb 31       		.byte	0x31
 5081 04fc 9F       		.byte	0x9f
 5082 04fd 1C000000 		.4byte	.LVL118
 5083 0501 1E000000 		.4byte	.LVL119
 5084 0505 0200     		.2byte	0x2
 5085 0507 30       		.byte	0x30
 5086 0508 9F       		.byte	0x9f
 5087 0509 1E000000 		.4byte	.LVL119
 5088 050d 55000000 		.4byte	.LVL121-1
 5089 0511 0100     		.2byte	0x1
 5090 0513 51       		.byte	0x51
 5091 0514 00000000 		.4byte	0
 5092 0518 00000000 		.4byte	0
 5093              	.LLST36:
 5094 051c 0C000000 		.4byte	.LVL114
 5095 0520 5E000000 		.4byte	.LVL124
 5096 0524 0100     		.2byte	0x1
 5097 0526 55       		.byte	0x55
 5098 0527 00000000 		.4byte	0
 5099 052b 00000000 		.4byte	0
 5100              	.LLST37:
 5101 052f 00000000 		.4byte	.LVL125
 5102 0533 08000000 		.4byte	.LVL126
 5103 0537 0100     		.2byte	0x1
 5104 0539 50       		.byte	0x50
 5105 053a 08000000 		.4byte	.LVL126
 5106 053e 14000000 		.4byte	.LFE32
 5107 0542 0400     		.2byte	0x4
 5108 0544 F3       		.byte	0xf3
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 158


 5109 0545 01       		.uleb128 0x1
 5110 0546 50       		.byte	0x50
 5111 0547 9F       		.byte	0x9f
 5112 0548 00000000 		.4byte	0
 5113 054c 00000000 		.4byte	0
 5114              	.LLST38:
 5115 0550 00000000 		.4byte	.LVL128
 5116 0554 14000000 		.4byte	.LVL129
 5117 0558 0100     		.2byte	0x1
 5118 055a 50       		.byte	0x50
 5119 055b 14000000 		.4byte	.LVL129
 5120 055f 18000000 		.4byte	.LVL130
 5121 0563 0100     		.2byte	0x1
 5122 0565 53       		.byte	0x53
 5123 0566 18000000 		.4byte	.LVL130
 5124 056a 44000000 		.4byte	.LFE11
 5125 056e 0400     		.2byte	0x4
 5126 0570 F3       		.byte	0xf3
 5127 0571 01       		.uleb128 0x1
 5128 0572 50       		.byte	0x50
 5129 0573 9F       		.byte	0x9f
 5130 0574 00000000 		.4byte	0
 5131 0578 00000000 		.4byte	0
 5132              	.LLST39:
 5133 057c 00000000 		.4byte	.LVL133
 5134 0580 1A000000 		.4byte	.LVL134
 5135 0584 0100     		.2byte	0x1
 5136 0586 50       		.byte	0x50
 5137 0587 1A000000 		.4byte	.LVL134
 5138 058b 4C000000 		.4byte	.LFE33
 5139 058f 0400     		.2byte	0x4
 5140 0591 F3       		.byte	0xf3
 5141 0592 01       		.uleb128 0x1
 5142 0593 50       		.byte	0x50
 5143 0594 9F       		.byte	0x9f
 5144 0595 00000000 		.4byte	0
 5145 0599 00000000 		.4byte	0
 5146              	.LLST40:
 5147 059d 00000000 		.4byte	.LVL138
 5148 05a1 02000000 		.4byte	.LVL139
 5149 05a5 0100     		.2byte	0x1
 5150 05a7 50       		.byte	0x50
 5151 05a8 02000000 		.4byte	.LVL139
 5152 05ac 10000000 		.4byte	.LFE40
 5153 05b0 0400     		.2byte	0x4
 5154 05b2 F3       		.byte	0xf3
 5155 05b3 01       		.uleb128 0x1
 5156 05b4 50       		.byte	0x50
 5157 05b5 9F       		.byte	0x9f
 5158 05b6 00000000 		.4byte	0
 5159 05ba 00000000 		.4byte	0
 5160              	.LLST41:
 5161 05be 0C000000 		.4byte	.LVL142
 5162 05c2 1C000000 		.4byte	.LVL145
 5163 05c6 0100     		.2byte	0x1
 5164 05c8 54       		.byte	0x54
 5165 05c9 1E000000 		.4byte	.LVL146
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 159


 5166 05cd 22000000 		.4byte	.LVL147
 5167 05d1 0100     		.2byte	0x1
 5168 05d3 54       		.byte	0x54
 5169 05d4 00000000 		.4byte	0
 5170 05d8 00000000 		.4byte	0
 5171              	.LLST42:
 5172 05dc 02000000 		.4byte	.LVL148
 5173 05e0 06000000 		.4byte	.LVL149
 5174 05e4 0200     		.2byte	0x2
 5175 05e6 30       		.byte	0x30
 5176 05e7 9F       		.byte	0x9f
 5177 05e8 06000000 		.4byte	.LVL149
 5178 05ec 1B000000 		.4byte	.LVL151-1
 5179 05f0 0100     		.2byte	0x1
 5180 05f2 53       		.byte	0x53
 5181 05f3 00000000 		.4byte	0
 5182 05f7 00000000 		.4byte	0
 5183              	.LLST43:
 5184 05fb 00000000 		.4byte	.LVL158
 5185 05ff 06000000 		.4byte	.LVL159
 5186 0603 0100     		.2byte	0x1
 5187 0605 50       		.byte	0x50
 5188 0606 06000000 		.4byte	.LVL159
 5189 060a 10000000 		.4byte	.LFE47
 5190 060e 0400     		.2byte	0x4
 5191 0610 F3       		.byte	0xf3
 5192 0611 01       		.uleb128 0x1
 5193 0612 50       		.byte	0x50
 5194 0613 9F       		.byte	0x9f
 5195 0614 00000000 		.4byte	0
 5196 0618 00000000 		.4byte	0
 5197              	.LLST44:
 5198 061c 00000000 		.4byte	.LVL160
 5199 0620 02000000 		.4byte	.LVL161
 5200 0624 0100     		.2byte	0x1
 5201 0626 50       		.byte	0x50
 5202 0627 02000000 		.4byte	.LVL161
 5203 062b 0C000000 		.4byte	.LFE48
 5204 062f 0400     		.2byte	0x4
 5205 0631 F3       		.byte	0xf3
 5206 0632 01       		.uleb128 0x1
 5207 0633 50       		.byte	0x50
 5208 0634 9F       		.byte	0x9f
 5209 0635 00000000 		.4byte	0
 5210 0639 00000000 		.4byte	0
 5211              	.LLST45:
 5212 063d 00000000 		.4byte	.LVL163
 5213 0641 0A000000 		.4byte	.LVL165
 5214 0645 0100     		.2byte	0x1
 5215 0647 50       		.byte	0x50
 5216 0648 0A000000 		.4byte	.LVL165
 5217 064c 20000000 		.4byte	.LFE51
 5218 0650 0400     		.2byte	0x4
 5219 0652 F3       		.byte	0xf3
 5220 0653 01       		.uleb128 0x1
 5221 0654 50       		.byte	0x50
 5222 0655 9F       		.byte	0x9f
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 160


 5223 0656 00000000 		.4byte	0
 5224 065a 00000000 		.4byte	0
 5225              	.LLST46:
 5226 065e 08000000 		.4byte	.LVL164
 5227 0662 12000000 		.4byte	.LVL166
 5228 0666 0100     		.2byte	0x1
 5229 0668 52       		.byte	0x52
 5230 0669 12000000 		.4byte	.LVL166
 5231 066d 20000000 		.4byte	.LFE51
 5232 0671 0100     		.2byte	0x1
 5233 0673 50       		.byte	0x50
 5234 0674 00000000 		.4byte	0
 5235 0678 00000000 		.4byte	0
 5236              	.LLST47:
 5237 067c 00000000 		.4byte	.LVL167
 5238 0680 0A000000 		.4byte	.LVL169
 5239 0684 0100     		.2byte	0x1
 5240 0686 50       		.byte	0x50
 5241 0687 0A000000 		.4byte	.LVL169
 5242 068b 20000000 		.4byte	.LFE52
 5243 068f 0400     		.2byte	0x4
 5244 0691 F3       		.byte	0xf3
 5245 0692 01       		.uleb128 0x1
 5246 0693 50       		.byte	0x50
 5247 0694 9F       		.byte	0x9f
 5248 0695 00000000 		.4byte	0
 5249 0699 00000000 		.4byte	0
 5250              	.LLST48:
 5251 069d 08000000 		.4byte	.LVL168
 5252 06a1 12000000 		.4byte	.LVL170
 5253 06a5 0100     		.2byte	0x1
 5254 06a7 52       		.byte	0x52
 5255 06a8 12000000 		.4byte	.LVL170
 5256 06ac 20000000 		.4byte	.LFE52
 5257 06b0 0100     		.2byte	0x1
 5258 06b2 50       		.byte	0x50
 5259 06b3 00000000 		.4byte	0
 5260 06b7 00000000 		.4byte	0
 5261              	.LLST49:
 5262 06bb 00000000 		.4byte	.LVL171
 5263 06bf 0A000000 		.4byte	.LVL173
 5264 06c3 0100     		.2byte	0x1
 5265 06c5 50       		.byte	0x50
 5266 06c6 0A000000 		.4byte	.LVL173
 5267 06ca 20000000 		.4byte	.LFE53
 5268 06ce 0400     		.2byte	0x4
 5269 06d0 F3       		.byte	0xf3
 5270 06d1 01       		.uleb128 0x1
 5271 06d2 50       		.byte	0x50
 5272 06d3 9F       		.byte	0x9f
 5273 06d4 00000000 		.4byte	0
 5274 06d8 00000000 		.4byte	0
 5275              	.LLST50:
 5276 06dc 08000000 		.4byte	.LVL172
 5277 06e0 12000000 		.4byte	.LVL174
 5278 06e4 0100     		.2byte	0x1
 5279 06e6 52       		.byte	0x52
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 161


 5280 06e7 12000000 		.4byte	.LVL174
 5281 06eb 20000000 		.4byte	.LFE53
 5282 06ef 0100     		.2byte	0x1
 5283 06f1 50       		.byte	0x50
 5284 06f2 00000000 		.4byte	0
 5285 06f6 00000000 		.4byte	0
 5286              	.LLST51:
 5287 06fa 00000000 		.4byte	.LVL175
 5288 06fe 08000000 		.4byte	.LVL176
 5289 0702 0100     		.2byte	0x1
 5290 0704 50       		.byte	0x50
 5291 0705 08000000 		.4byte	.LVL176
 5292 0709 1C000000 		.4byte	.LVL180
 5293 070d 0400     		.2byte	0x4
 5294 070f F3       		.byte	0xf3
 5295 0710 01       		.uleb128 0x1
 5296 0711 50       		.byte	0x50
 5297 0712 9F       		.byte	0x9f
 5298 0713 1C000000 		.4byte	.LVL180
 5299 0717 22000000 		.4byte	.LVL181
 5300 071b 0100     		.2byte	0x1
 5301 071d 50       		.byte	0x50
 5302 071e 22000000 		.4byte	.LVL181
 5303 0722 36000000 		.4byte	.LVL185
 5304 0726 0400     		.2byte	0x4
 5305 0728 F3       		.byte	0xf3
 5306 0729 01       		.uleb128 0x1
 5307 072a 50       		.byte	0x50
 5308 072b 9F       		.byte	0x9f
 5309 072c 36000000 		.4byte	.LVL185
 5310 0730 3C000000 		.4byte	.LVL186
 5311 0734 0100     		.2byte	0x1
 5312 0736 50       		.byte	0x50
 5313 0737 3C000000 		.4byte	.LVL186
 5314 073b 50000000 		.4byte	.LVL190
 5315 073f 0400     		.2byte	0x4
 5316 0741 F3       		.byte	0xf3
 5317 0742 01       		.uleb128 0x1
 5318 0743 50       		.byte	0x50
 5319 0744 9F       		.byte	0x9f
 5320 0745 50000000 		.4byte	.LVL190
 5321 0749 52000000 		.4byte	.LVL191
 5322 074d 0100     		.2byte	0x1
 5323 074f 50       		.byte	0x50
 5324 0750 52000000 		.4byte	.LVL191
 5325 0754 68000000 		.4byte	.LFE54
 5326 0758 0400     		.2byte	0x4
 5327 075a F3       		.byte	0xf3
 5328 075b 01       		.uleb128 0x1
 5329 075c 50       		.byte	0x50
 5330 075d 9F       		.byte	0x9f
 5331 075e 00000000 		.4byte	0
 5332 0762 00000000 		.4byte	0
 5333              	.LLST52:
 5334 0766 00000000 		.4byte	.LVL175
 5335 076a 10000000 		.4byte	.LVL178
 5336 076e 0100     		.2byte	0x1
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 162


 5337 0770 51       		.byte	0x51
 5338 0771 10000000 		.4byte	.LVL178
 5339 0775 1C000000 		.4byte	.LVL180
 5340 0779 0400     		.2byte	0x4
 5341 077b F3       		.byte	0xf3
 5342 077c 01       		.uleb128 0x1
 5343 077d 51       		.byte	0x51
 5344 077e 9F       		.byte	0x9f
 5345 077f 1C000000 		.4byte	.LVL180
 5346 0783 2A000000 		.4byte	.LVL183
 5347 0787 0100     		.2byte	0x1
 5348 0789 51       		.byte	0x51
 5349 078a 2A000000 		.4byte	.LVL183
 5350 078e 36000000 		.4byte	.LVL185
 5351 0792 0400     		.2byte	0x4
 5352 0794 F3       		.byte	0xf3
 5353 0795 01       		.uleb128 0x1
 5354 0796 51       		.byte	0x51
 5355 0797 9F       		.byte	0x9f
 5356 0798 36000000 		.4byte	.LVL185
 5357 079c 44000000 		.4byte	.LVL188
 5358 07a0 0100     		.2byte	0x1
 5359 07a2 51       		.byte	0x51
 5360 07a3 44000000 		.4byte	.LVL188
 5361 07a7 50000000 		.4byte	.LVL190
 5362 07ab 0400     		.2byte	0x4
 5363 07ad F3       		.byte	0xf3
 5364 07ae 01       		.uleb128 0x1
 5365 07af 51       		.byte	0x51
 5366 07b0 9F       		.byte	0x9f
 5367 07b1 50000000 		.4byte	.LVL190
 5368 07b5 55000000 		.4byte	.LVL192-1
 5369 07b9 0100     		.2byte	0x1
 5370 07bb 51       		.byte	0x51
 5371 07bc 55000000 		.4byte	.LVL192-1
 5372 07c0 68000000 		.4byte	.LFE54
 5373 07c4 0400     		.2byte	0x4
 5374 07c6 F3       		.byte	0xf3
 5375 07c7 01       		.uleb128 0x1
 5376 07c8 51       		.byte	0x51
 5377 07c9 9F       		.byte	0x9f
 5378 07ca 00000000 		.4byte	0
 5379 07ce 00000000 		.4byte	0
 5380              	.LLST53:
 5381 07d2 0E000000 		.4byte	.LVL177
 5382 07d6 18000000 		.4byte	.LVL179
 5383 07da 0100     		.2byte	0x1
 5384 07dc 52       		.byte	0x52
 5385 07dd 18000000 		.4byte	.LVL179
 5386 07e1 1C000000 		.4byte	.LVL180
 5387 07e5 0100     		.2byte	0x1
 5388 07e7 51       		.byte	0x51
 5389 07e8 28000000 		.4byte	.LVL182
 5390 07ec 32000000 		.4byte	.LVL184
 5391 07f0 0100     		.2byte	0x1
 5392 07f2 52       		.byte	0x52
 5393 07f3 32000000 		.4byte	.LVL184
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 163


 5394 07f7 36000000 		.4byte	.LVL185
 5395 07fb 0100     		.2byte	0x1
 5396 07fd 51       		.byte	0x51
 5397 07fe 42000000 		.4byte	.LVL187
 5398 0802 4C000000 		.4byte	.LVL189
 5399 0806 0100     		.2byte	0x1
 5400 0808 52       		.byte	0x52
 5401 0809 4C000000 		.4byte	.LVL189
 5402 080d 50000000 		.4byte	.LVL190
 5403 0811 0100     		.2byte	0x1
 5404 0813 51       		.byte	0x51
 5405 0814 00000000 		.4byte	0
 5406 0818 00000000 		.4byte	0
 5407              		.section	.debug_aranges,"",%progbits
 5408 0000 C4010000 		.4byte	0x1c4
 5409 0004 0200     		.2byte	0x2
 5410 0006 00000000 		.4byte	.Ldebug_info0
 5411 000a 04       		.byte	0x4
 5412 000b 00       		.byte	0
 5413 000c 0000     		.2byte	0
 5414 000e 0000     		.2byte	0
 5415 0010 00000000 		.4byte	.LFB4
 5416 0014 54000000 		.4byte	.LFE4-.LFB4
 5417 0018 00000000 		.4byte	.LFB2
 5418 001c 18000000 		.4byte	.LFE2-.LFB2
 5419 0020 00000000 		.4byte	.LFB5
 5420 0024 14000000 		.4byte	.LFE5-.LFB5
 5421 0028 00000000 		.4byte	.LFB6
 5422 002c 20000000 		.4byte	.LFE6-.LFB6
 5423 0030 00000000 		.4byte	.LFB7
 5424 0034 38000000 		.4byte	.LFE7-.LFB7
 5425 0038 00000000 		.4byte	.LFB8
 5426 003c 1C000000 		.4byte	.LFE8-.LFB8
 5427 0040 00000000 		.4byte	.LFB9
 5428 0044 30000000 		.4byte	.LFE9-.LFB9
 5429 0048 00000000 		.4byte	.LFB12
 5430 004c 20000000 		.4byte	.LFE12-.LFB12
 5431 0050 00000000 		.4byte	.LFB13
 5432 0054 10000000 		.4byte	.LFE13-.LFB13
 5433 0058 00000000 		.4byte	.LFB14
 5434 005c 0C000000 		.4byte	.LFE14-.LFB14
 5435 0060 00000000 		.4byte	.LFB15
 5436 0064 14000000 		.4byte	.LFE15-.LFB15
 5437 0068 00000000 		.4byte	.LFB16
 5438 006c 10000000 		.4byte	.LFE16-.LFB16
 5439 0070 00000000 		.4byte	.LFB17
 5440 0074 0C000000 		.4byte	.LFE17-.LFB17
 5441 0078 00000000 		.4byte	.LFB24
 5442 007c 14000000 		.4byte	.LFE24-.LFB24
 5443 0080 00000000 		.4byte	.LFB25
 5444 0084 18000000 		.4byte	.LFE25-.LFB25
 5445 0088 00000000 		.4byte	.LFB26
 5446 008c 14000000 		.4byte	.LFE26-.LFB26
 5447 0090 00000000 		.4byte	.LFB27
 5448 0094 14000000 		.4byte	.LFE27-.LFB27
 5449 0098 00000000 		.4byte	.LFB28
 5450 009c 14000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 164


 5451 00a0 00000000 		.4byte	.LFB29
 5452 00a4 04000000 		.4byte	.LFE29-.LFB29
 5453 00a8 00000000 		.4byte	.LFB18
 5454 00ac 20000000 		.4byte	.LFE18-.LFB18
 5455 00b0 00000000 		.4byte	.LFB19
 5456 00b4 1C000000 		.4byte	.LFE19-.LFB19
 5457 00b8 00000000 		.4byte	.LFB20
 5458 00bc 22000000 		.4byte	.LFE20-.LFB20
 5459 00c0 00000000 		.4byte	.LFB21
 5460 00c4 1E000000 		.4byte	.LFE21-.LFB21
 5461 00c8 00000000 		.4byte	.LFB22
 5462 00cc 4C000000 		.4byte	.LFE22-.LFB22
 5463 00d0 00000000 		.4byte	.LFB23
 5464 00d4 2C000000 		.4byte	.LFE23-.LFB23
 5465 00d8 00000000 		.4byte	.LFB30
 5466 00dc 18000000 		.4byte	.LFE30-.LFB30
 5467 00e0 00000000 		.4byte	.LFB31
 5468 00e4 30000000 		.4byte	.LFE31-.LFB31
 5469 00e8 00000000 		.4byte	.LFB3
 5470 00ec F4000000 		.4byte	.LFE3-.LFB3
 5471 00f0 00000000 		.4byte	.LFB1
 5472 00f4 18000000 		.4byte	.LFE1-.LFB1
 5473 00f8 00000000 		.4byte	.LFB10
 5474 00fc 80000000 		.4byte	.LFE10-.LFB10
 5475 0100 00000000 		.4byte	.LFB32
 5476 0104 14000000 		.4byte	.LFE32-.LFB32
 5477 0108 00000000 		.4byte	.LFB11
 5478 010c 44000000 		.4byte	.LFE11-.LFB11
 5479 0110 00000000 		.4byte	.LFB33
 5480 0114 4C000000 		.4byte	.LFE33-.LFB33
 5481 0118 00000000 		.4byte	.LFB37
 5482 011c 10000000 		.4byte	.LFE37-.LFB37
 5483 0120 00000000 		.4byte	.LFB38
 5484 0124 10000000 		.4byte	.LFE38-.LFB38
 5485 0128 00000000 		.4byte	.LFB36
 5486 012c 18000000 		.4byte	.LFE36-.LFB36
 5487 0130 00000000 		.4byte	.LFB39
 5488 0134 10000000 		.4byte	.LFE39-.LFB39
 5489 0138 00000000 		.4byte	.LFB40
 5490 013c 10000000 		.4byte	.LFE40-.LFB40
 5491 0140 00000000 		.4byte	.LFB41
 5492 0144 10000000 		.4byte	.LFE41-.LFB41
 5493 0148 00000000 		.4byte	.LFB42
 5494 014c 10000000 		.4byte	.LFE42-.LFB42
 5495 0150 00000000 		.4byte	.LFB43
 5496 0154 20000000 		.4byte	.LFE43-.LFB43
 5497 0158 00000000 		.4byte	.LFB44
 5498 015c 10000000 		.4byte	.LFE44-.LFB44
 5499 0160 00000000 		.4byte	.LFB45
 5500 0164 10000000 		.4byte	.LFE45-.LFB45
 5501 0168 00000000 		.4byte	.LFB49
 5502 016c 28000000 		.4byte	.LFE49-.LFB49
 5503 0170 00000000 		.4byte	.LFB46
 5504 0174 0C000000 		.4byte	.LFE46-.LFB46
 5505 0178 00000000 		.4byte	.LFB35
 5506 017c 44000000 		.4byte	.LFE35-.LFB35
 5507 0180 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 165


 5508 0184 20000000 		.4byte	.LFE34-.LFB34
 5509 0188 00000000 		.4byte	.LFB47
 5510 018c 10000000 		.4byte	.LFE47-.LFB47
 5511 0190 00000000 		.4byte	.LFB48
 5512 0194 0C000000 		.4byte	.LFE48-.LFB48
 5513 0198 00000000 		.4byte	.LFB50
 5514 019c 70000000 		.4byte	.LFE50-.LFB50
 5515 01a0 00000000 		.4byte	.LFB51
 5516 01a4 20000000 		.4byte	.LFE51-.LFB51
 5517 01a8 00000000 		.4byte	.LFB52
 5518 01ac 20000000 		.4byte	.LFE52-.LFB52
 5519 01b0 00000000 		.4byte	.LFB53
 5520 01b4 20000000 		.4byte	.LFE53-.LFB53
 5521 01b8 00000000 		.4byte	.LFB54
 5522 01bc 68000000 		.4byte	.LFE54-.LFB54
 5523 01c0 00000000 		.4byte	0
 5524 01c4 00000000 		.4byte	0
 5525              		.section	.debug_ranges,"",%progbits
 5526              	.Ldebug_ranges0:
 5527 0000 00000000 		.4byte	.LFB4
 5528 0004 54000000 		.4byte	.LFE4
 5529 0008 00000000 		.4byte	.LFB2
 5530 000c 18000000 		.4byte	.LFE2
 5531 0010 00000000 		.4byte	.LFB5
 5532 0014 14000000 		.4byte	.LFE5
 5533 0018 00000000 		.4byte	.LFB6
 5534 001c 20000000 		.4byte	.LFE6
 5535 0020 00000000 		.4byte	.LFB7
 5536 0024 38000000 		.4byte	.LFE7
 5537 0028 00000000 		.4byte	.LFB8
 5538 002c 1C000000 		.4byte	.LFE8
 5539 0030 00000000 		.4byte	.LFB9
 5540 0034 30000000 		.4byte	.LFE9
 5541 0038 00000000 		.4byte	.LFB12
 5542 003c 20000000 		.4byte	.LFE12
 5543 0040 00000000 		.4byte	.LFB13
 5544 0044 10000000 		.4byte	.LFE13
 5545 0048 00000000 		.4byte	.LFB14
 5546 004c 0C000000 		.4byte	.LFE14
 5547 0050 00000000 		.4byte	.LFB15
 5548 0054 14000000 		.4byte	.LFE15
 5549 0058 00000000 		.4byte	.LFB16
 5550 005c 10000000 		.4byte	.LFE16
 5551 0060 00000000 		.4byte	.LFB17
 5552 0064 0C000000 		.4byte	.LFE17
 5553 0068 00000000 		.4byte	.LFB24
 5554 006c 14000000 		.4byte	.LFE24
 5555 0070 00000000 		.4byte	.LFB25
 5556 0074 18000000 		.4byte	.LFE25
 5557 0078 00000000 		.4byte	.LFB26
 5558 007c 14000000 		.4byte	.LFE26
 5559 0080 00000000 		.4byte	.LFB27
 5560 0084 14000000 		.4byte	.LFE27
 5561 0088 00000000 		.4byte	.LFB28
 5562 008c 14000000 		.4byte	.LFE28
 5563 0090 00000000 		.4byte	.LFB29
 5564 0094 04000000 		.4byte	.LFE29
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 166


 5565 0098 00000000 		.4byte	.LFB18
 5566 009c 20000000 		.4byte	.LFE18
 5567 00a0 00000000 		.4byte	.LFB19
 5568 00a4 1C000000 		.4byte	.LFE19
 5569 00a8 00000000 		.4byte	.LFB20
 5570 00ac 22000000 		.4byte	.LFE20
 5571 00b0 00000000 		.4byte	.LFB21
 5572 00b4 1E000000 		.4byte	.LFE21
 5573 00b8 00000000 		.4byte	.LFB22
 5574 00bc 4C000000 		.4byte	.LFE22
 5575 00c0 00000000 		.4byte	.LFB23
 5576 00c4 2C000000 		.4byte	.LFE23
 5577 00c8 00000000 		.4byte	.LFB30
 5578 00cc 18000000 		.4byte	.LFE30
 5579 00d0 00000000 		.4byte	.LFB31
 5580 00d4 30000000 		.4byte	.LFE31
 5581 00d8 00000000 		.4byte	.LFB3
 5582 00dc F4000000 		.4byte	.LFE3
 5583 00e0 00000000 		.4byte	.LFB1
 5584 00e4 18000000 		.4byte	.LFE1
 5585 00e8 00000000 		.4byte	.LFB10
 5586 00ec 80000000 		.4byte	.LFE10
 5587 00f0 00000000 		.4byte	.LFB32
 5588 00f4 14000000 		.4byte	.LFE32
 5589 00f8 00000000 		.4byte	.LFB11
 5590 00fc 44000000 		.4byte	.LFE11
 5591 0100 00000000 		.4byte	.LFB33
 5592 0104 4C000000 		.4byte	.LFE33
 5593 0108 00000000 		.4byte	.LFB37
 5594 010c 10000000 		.4byte	.LFE37
 5595 0110 00000000 		.4byte	.LFB38
 5596 0114 10000000 		.4byte	.LFE38
 5597 0118 00000000 		.4byte	.LFB36
 5598 011c 18000000 		.4byte	.LFE36
 5599 0120 00000000 		.4byte	.LFB39
 5600 0124 10000000 		.4byte	.LFE39
 5601 0128 00000000 		.4byte	.LFB40
 5602 012c 10000000 		.4byte	.LFE40
 5603 0130 00000000 		.4byte	.LFB41
 5604 0134 10000000 		.4byte	.LFE41
 5605 0138 00000000 		.4byte	.LFB42
 5606 013c 10000000 		.4byte	.LFE42
 5607 0140 00000000 		.4byte	.LFB43
 5608 0144 20000000 		.4byte	.LFE43
 5609 0148 00000000 		.4byte	.LFB44
 5610 014c 10000000 		.4byte	.LFE44
 5611 0150 00000000 		.4byte	.LFB45
 5612 0154 10000000 		.4byte	.LFE45
 5613 0158 00000000 		.4byte	.LFB49
 5614 015c 28000000 		.4byte	.LFE49
 5615 0160 00000000 		.4byte	.LFB46
 5616 0164 0C000000 		.4byte	.LFE46
 5617 0168 00000000 		.4byte	.LFB35
 5618 016c 44000000 		.4byte	.LFE35
 5619 0170 00000000 		.4byte	.LFB34
 5620 0174 20000000 		.4byte	.LFE34
 5621 0178 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 167


 5622 017c 10000000 		.4byte	.LFE47
 5623 0180 00000000 		.4byte	.LFB48
 5624 0184 0C000000 		.4byte	.LFE48
 5625 0188 00000000 		.4byte	.LFB50
 5626 018c 70000000 		.4byte	.LFE50
 5627 0190 00000000 		.4byte	.LFB51
 5628 0194 20000000 		.4byte	.LFE51
 5629 0198 00000000 		.4byte	.LFB52
 5630 019c 20000000 		.4byte	.LFE52
 5631 01a0 00000000 		.4byte	.LFB53
 5632 01a4 20000000 		.4byte	.LFE53
 5633 01a8 00000000 		.4byte	.LFB54
 5634 01ac 68000000 		.4byte	.LFE54
 5635 01b0 00000000 		.4byte	0
 5636 01b4 00000000 		.4byte	0
 5637              		.section	.debug_line,"",%progbits
 5638              	.Ldebug_line0:
 5639 0000 60050000 		.section	.debug_str,"MS",%progbits,1
 5639      02006700 
 5639      00000201 
 5639      FB0E0D00 
 5639      01010101 
 5640              	.LASF55:
 5641 0000 72616D56 		.ascii	"ramVectorTable\000"
 5641      6563746F 
 5641      72546162 
 5641      6C6500
 5642              	.LASF10:
 5643 000f 75696E74 		.ascii	"uint16\000"
 5643      313600
 5644              	.LASF42:
 5645 0016 696E7453 		.ascii	"intState\000"
 5645      74617465 
 5645      00
 5646              	.LASF24:
 5647 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5647      73436C6B 
 5647      57726974 
 5647      65486663 
 5647      6C6B4469 
 5648              	.LASF114:
 5649 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5649      73436C6B 
 5649      50756D70 
 5649      436F6E66 
 5649      696700
 5650              	.LASF27:
 5651 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5651      73456E61 
 5651      626C6550 
 5651      756D7043 
 5651      6C6F636B 
 5652              	.LASF97:
 5653 0060 72657456 		.ascii	"retVal\000"
 5653      616C00
 5654              	.LASF41:
 5655 0067 43794469 		.ascii	"CyDisableInts\000"
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 168


 5655      7361626C 
 5655      65496E74 
 5655      7300
 5656              	.LASF120:
 5657 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5657      43313120 
 5657      352E342E 
 5657      31203230 
 5657      31363036 
 5658 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5658      20726576 
 5658      6973696F 
 5658      6E203233 
 5658      37373135 
 5659 00db 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5659      66756E63 
 5659      74696F6E 
 5659      2D736563 
 5659      74696F6E 
 5660              	.LASF7:
 5661 0103 6C6F6E67 		.ascii	"long long unsigned int\000"
 5661      206C6F6E 
 5661      6720756E 
 5661      7369676E 
 5661      65642069 
 5662              	.LASF73:
 5663 011a 70617261 		.ascii	"parameters\000"
 5663      6D657465 
 5663      727300
 5664              	.LASF43:
 5665 0125 4379456E 		.ascii	"CyEnableInts\000"
 5665      61626C65 
 5665      496E7473 
 5665      00
 5666              	.LASF106:
 5667 0132 696E7465 		.ascii	"interfaceNumber\000"
 5667      72666163 
 5667      654E756D 
 5667      62657200 
 5668              	.LASF64:
 5669 0142 4379536F 		.ascii	"CySoftwareReset\000"
 5669      66747761 
 5669      72655265 
 5669      73657400 
 5670              	.LASF82:
 5671 0152 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5671      73546963 
 5671      6B456E61 
 5671      626C6549 
 5671      6E746572 
 5672              	.LASF47:
 5673 016b 4379496E 		.ascii	"CyIntGetState\000"
 5673      74476574 
 5673      53746174 
 5673      6500
 5674              	.LASF6:
 5675 0179 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 169


 5675      206C6F6E 
 5675      6720696E 
 5675      7400
 5676              	.LASF0:
 5677 0187 7369676E 		.ascii	"signed char\000"
 5677      65642063 
 5677      68617200 
 5678              	.LASF21:
 5679 0193 66726571 		.ascii	"freq\000"
 5679      00
 5680              	.LASF80:
 5681 0198 43794465 		.ascii	"CyDelayFreq\000"
 5681      6C617946 
 5681      72657100 
 5682              	.LASF25:
 5683 01a4 696E7465 		.ascii	"interruptState\000"
 5683      72727570 
 5683      74537461 
 5683      746500
 5684              	.LASF69:
 5685 01b3 6C664C69 		.ascii	"lfLimit\000"
 5685      6D697400 
 5686              	.LASF86:
 5687 01bb 43795379 		.ascii	"CySysTickGetReload\000"
 5687      73546963 
 5687      6B476574 
 5687      52656C6F 
 5687      616400
 5688              	.LASF33:
 5689 01ce 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5689      73436C6B 
 5689      496D6F47 
 5689      65745763 
 5689      6F4C6F63 
 5690              	.LASF75:
 5691 01e4 77636F4C 		.ascii	"wcoLock\000"
 5691      6F636B00 
 5692              	.LASF4:
 5693 01ec 6C6F6E67 		.ascii	"long int\000"
 5693      20696E74 
 5693      00
 5694              	.LASF48:
 5695 01f5 4379496E 		.ascii	"CyIntDisable\000"
 5695      74446973 
 5695      61626C65 
 5695      00
 5696              	.LASF74:
 5697 0202 72656756 		.ascii	"regValues\000"
 5697      616C7565 
 5697      7300
 5698              	.LASF9:
 5699 020c 75696E74 		.ascii	"uint8\000"
 5699      3800
 5700              	.LASF109:
 5701 0212 63796465 		.ascii	"cydelayFreqKhz\000"
 5701      6C617946 
 5701      7265714B 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 170


 5701      687A00
 5702              	.LASF29:
 5703 0221 656E6162 		.ascii	"enable\000"
 5703      6C6500
 5704              	.LASF13:
 5705 0228 646F7562 		.ascii	"double\000"
 5705      6C6500
 5706              	.LASF61:
 5707 022f 73686966 		.ascii	"shift\000"
 5707      7400
 5708              	.LASF36:
 5709 0235 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5709      734C7664 
 5709      436C6561 
 5709      72496E74 
 5709      65727275 
 5710              	.LASF11:
 5711 024c 75696E74 		.ascii	"uint32\000"
 5711      333200
 5712              	.LASF44:
 5713 0253 6D61736B 		.ascii	"mask\000"
 5713      00
 5714              	.LASF37:
 5715 0258 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5715      73436C6B 
 5715      47657453 
 5715      7973636C 
 5715      6B536F75 
 5716              	.LASF67:
 5717 0270 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5717      73436C6B 
 5717      496D6F45 
 5717      6E61626C 
 5717      6557636F 
 5718              	.LASF63:
 5719 0289 4379496E 		.ascii	"CyIntGetPriority\000"
 5719      74476574 
 5719      5072696F 
 5719      72697479 
 5719      00
 5720              	.LASF111:
 5721 029a 63796465 		.ascii	"cydelay32kMs\000"
 5721      6C617933 
 5721      326B4D73 
 5721      00
 5722              	.LASF93:
 5723 02a7 43795379 		.ascii	"CySysTickInit\000"
 5723      73546963 
 5723      6B496E69 
 5723      7400
 5724              	.LASF62:
 5725 02b5 76616C75 		.ascii	"value\000"
 5725      6500
 5726              	.LASF89:
 5727 02bb 636C6F63 		.ascii	"clockSource\000"
 5727      6B536F75 
 5727      72636500 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 171


 5728              	.LASF99:
 5729 02c7 43794765 		.ascii	"CyGetUniqueId\000"
 5729      74556E69 
 5729      71756549 
 5729      6400
 5730              	.LASF91:
 5731 02d5 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5731      73546963 
 5731      6B476574 
 5731      436F756E 
 5731      74466C61 
 5732              	.LASF8:
 5733 02eb 756E7369 		.ascii	"unsigned int\000"
 5733      676E6564 
 5733      20696E74 
 5733      00
 5734              	.LASF92:
 5735 02f8 43795379 		.ascii	"CySysTickClear\000"
 5735      73546963 
 5735      6B436C65 
 5735      617200
 5736              	.LASF5:
 5737 0307 6C6F6E67 		.ascii	"long unsigned int\000"
 5737      20756E73 
 5737      69676E65 
 5737      6420696E 
 5737      7400
 5738              	.LASF34:
 5739 0319 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5739      734C7664 
 5739      47657449 
 5739      6E746572 
 5739      72757074 
 5740              	.LASF23:
 5741 0334 43795379 		.ascii	"CySysClkImoStop\000"
 5741      73436C6B 
 5741      496D6F53 
 5741      746F7000 
 5742              	.LASF115:
 5743 0344 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5743      74657243 
 5743      72697469 
 5743      63616C53 
 5743      65637469 
 5744              	.LASF49:
 5745 035b 4379496E 		.ascii	"CyIntSetPending\000"
 5745      74536574 
 5745      50656E64 
 5745      696E6700 
 5746              	.LASF98:
 5747 036b 43795379 		.ascii	"CySysTickGetCallback\000"
 5747      73546963 
 5747      6B476574 
 5747      43616C6C 
 5747      6261636B 
 5748              	.LASF38:
 5749 0380 43795379 		.ascii	"CySysGetResetReason\000"
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 172


 5749      73476574 
 5749      52657365 
 5749      74526561 
 5749      736F6E00 
 5750              	.LASF3:
 5751 0394 73686F72 		.ascii	"short unsigned int\000"
 5751      7420756E 
 5751      7369676E 
 5751      65642069 
 5751      6E7400
 5752              	.LASF68:
 5753 03a7 72656754 		.ascii	"regTmp\000"
 5753      6D7000
 5754              	.LASF88:
 5755 03ae 43795379 		.ascii	"CySysTickSetClockSource\000"
 5755      73546963 
 5755      6B536574 
 5755      436C6F63 
 5755      6B536F75 
 5756              	.LASF57:
 5757 03c6 4379496E 		.ascii	"CyIntSetVector\000"
 5757      74536574 
 5757      56656374 
 5757      6F7200
 5758              	.LASF46:
 5759 03d5 6E756D62 		.ascii	"number\000"
 5759      657200
 5760              	.LASF60:
 5761 03dc 7072696F 		.ascii	"priority\000"
 5761      72697479 
 5761      00
 5762              	.LASF72:
 5763 03e5 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5763      73436C6B 
 5763      57726974 
 5763      65496D6F 
 5763      46726571 
 5764              	.LASF103:
 5765 03fa 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5765      73536574 
 5765      466C6173 
 5765      68416363 
 5765      65737341 
 5766              	.LASF52:
 5767 0419 4379496E 		.ascii	"CyIntSetSysVector\000"
 5767      74536574 
 5767      53797356 
 5767      6563746F 
 5767      7200
 5768              	.LASF22:
 5769 042b 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5769      73436C6B 
 5769      496D6F44 
 5769      69736162 
 5769      6C655763 
 5770              	.LASF16:
 5771 0445 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 173


 5771      3200
 5772              	.LASF94:
 5773 044b 43795379 		.ascii	"CySysTickStart\000"
 5773      73546963 
 5773      6B537461 
 5773      727400
 5774              	.LASF40:
 5775 045a 72657475 		.ascii	"returnStatus\000"
 5775      726E5374 
 5775      61747573 
 5775      00
 5776              	.LASF102:
 5777 0467 736F7572 		.ascii	"source\000"
 5777      636500
 5778              	.LASF19:
 5779 046e 73697A65 		.ascii	"sizetype\000"
 5779      74797065 
 5779      00
 5780              	.LASF112:
 5781 0477 43795379 		.ascii	"CySysTickInitVar\000"
 5781      73546963 
 5781      6B496E69 
 5781      74566172 
 5781      00
 5782              	.LASF105:
 5783 0488 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5783      73536574 
 5783      50657269 
 5783      70686572 
 5783      616C4163 
 5784              	.LASF50:
 5785 04ac 4379496E 		.ascii	"CyIntClearPending\000"
 5785      74436C65 
 5785      61725065 
 5785      6E64696E 
 5785      6700
 5786              	.LASF18:
 5787 04be 6C6F6E67 		.ascii	"long double\000"
 5787      20646F75 
 5787      626C6500 
 5788              	.LASF53:
 5789 04ca 61646472 		.ascii	"address\000"
 5789      65737300 
 5790              	.LASF30:
 5791 04d2 73797363 		.ascii	"sysclkSource\000"
 5791      6C6B536F 
 5791      75726365 
 5791      00
 5792              	.LASF96:
 5793 04df 66756E63 		.ascii	"function\000"
 5793      74696F6E 
 5793      00
 5794              	.LASF113:
 5795 04e8 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5795      6F467265 
 5795      714D687A 
 5795      32526567 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 174


 5795      00
 5796              	.LASF87:
 5797 04f9 43795379 		.ascii	"CySysTickGetValue\000"
 5797      73546963 
 5797      6B476574 
 5797      56616C75 
 5797      6500
 5798              	.LASF108:
 5799 050b 63796465 		.ascii	"cydelayFreqHz\000"
 5799      6C617946 
 5799      72657148 
 5799      7A00
 5800              	.LASF59:
 5801 0519 4379496E 		.ascii	"CyIntSetPriority\000"
 5801      74536574 
 5801      5072696F 
 5801      72697479 
 5801      00
 5802              	.LASF12:
 5803 052a 666C6F61 		.ascii	"float\000"
 5803      7400
 5804              	.LASF116:
 5805 0530 43794578 		.ascii	"CyExitCriticalSection\000"
 5805      69744372 
 5805      69746963 
 5805      616C5365 
 5805      6374696F 
 5806              	.LASF78:
 5807 0546 43795379 		.ascii	"CySysLvdEnable\000"
 5807      734C7664 
 5807      456E6162 
 5807      6C6500
 5808              	.LASF20:
 5809 0555 63795379 		.ascii	"cySysTickCallback\000"
 5809      73546963 
 5809      6B43616C 
 5809      6C626163 
 5809      6B00
 5810              	.LASF58:
 5811 0567 4379496E 		.ascii	"CyIntGetVector\000"
 5811      74476574 
 5811      56656374 
 5811      6F7200
 5812              	.LASF66:
 5813 0576 6D696C6C 		.ascii	"milliseconds\000"
 5813      69736563 
 5813      6F6E6473 
 5813      00
 5814              	.LASF117:
 5815 0583 43794465 		.ascii	"CyDelayCycles\000"
 5815      6C617943 
 5815      79636C65 
 5815      7300
 5816              	.LASF15:
 5817 0591 72656738 		.ascii	"reg8\000"
 5817      00
 5818              	.LASF79:
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 175


 5819 0596 74687265 		.ascii	"threshold\000"
 5819      73686F6C 
 5819      6400
 5820              	.LASF51:
 5821 05a0 43794861 		.ascii	"CyHalt\000"
 5821      6C7400
 5822              	.LASF101:
 5823 05a7 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5823      73536574 
 5823      52616D41 
 5823      63636573 
 5823      73417262 
 5824              	.LASF1:
 5825 05c4 756E7369 		.ascii	"unsigned char\000"
 5825      676E6564 
 5825      20636861 
 5825      7200
 5826              	.LASF2:
 5827 05d2 73686F72 		.ascii	"short int\000"
 5827      7420696E 
 5827      7400
 5828              	.LASF45:
 5829 05dc 4379496E 		.ascii	"CyIntEnable\000"
 5829      74456E61 
 5829      626C6500 
 5830              	.LASF56:
 5831 05e8 4379496E 		.ascii	"CyIntGetSysVector\000"
 5831      74476574 
 5831      53797356 
 5831      6563746F 
 5831      7200
 5832              	.LASF122:
 5833 05fa 433A5C55 		.ascii	"C:\\Users\\tsien\\Documents\\GitHub\\Battery_Manage"
 5833      73657273 
 5833      5C747369 
 5833      656E5C44 
 5833      6F63756D 
 5834 0628 6D656E74 		.ascii	"ment_Board_PY2023\\BatteryBalance\\BatteryBalance.c"
 5834      5F426F61 
 5834      72645F50 
 5834      59323032 
 5834      335C4261 
 5835 0659 7964736E 		.ascii	"ydsn\000"
 5835      00
 5836              	.LASF28:
 5837 065e 636C6B53 		.ascii	"clkSelect\000"
 5837      656C6563 
 5837      7400
 5838              	.LASF76:
 5839 0668 43794465 		.ascii	"CyDelayUs\000"
 5839      6C617955 
 5839      7300
 5840              	.LASF39:
 5841 0672 72656173 		.ascii	"reason\000"
 5841      6F6E00
 5842              	.LASF14:
 5843 0679 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 176


 5843      00
 5844              	.LASF17:
 5845 067e 63796973 		.ascii	"cyisraddress\000"
 5845      72616464 
 5845      72657373 
 5845      00
 5846              	.LASF83:
 5847 068b 43795379 		.ascii	"CySysTickEnable\000"
 5847      73546963 
 5847      6B456E61 
 5847      626C6500 
 5848              	.LASF31:
 5849 069b 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5849      73436C6B 
 5849      57726974 
 5849      65537973 
 5849      636C6B44 
 5850              	.LASF95:
 5851 06b2 43795379 		.ascii	"CySysTickSetCallback\000"
 5851      73546963 
 5851      6B536574 
 5851      43616C6C 
 5851      6261636B 
 5852              	.LASF107:
 5853 06c7 43795379 		.ascii	"CySysTickCallbacks\000"
 5853      73546963 
 5853      6B43616C 
 5853      6C626163 
 5853      6B7300
 5854              	.LASF100:
 5855 06da 756E6971 		.ascii	"uniqueId\000"
 5855      75654964 
 5855      00
 5856              	.LASF70:
 5857 06e3 666C6173 		.ascii	"flashCtlReg\000"
 5857      6843746C 
 5857      52656700 
 5858              	.LASF65:
 5859 06ef 43794465 		.ascii	"CyDelay\000"
 5859      6C617900 
 5860              	.LASF90:
 5861 06f7 43795379 		.ascii	"CySysTickGetClockSource\000"
 5861      73546963 
 5861      6B476574 
 5861      436C6F63 
 5861      6B536F75 
 5862              	.LASF84:
 5863 070f 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5863      73546963 
 5863      6B446973 
 5863      61626C65 
 5863      496E7465 
 5864              	.LASF35:
 5865 0729 43795379 		.ascii	"CySysLvdDisable\000"
 5865      734C7664 
 5865      44697361 
 5865      626C6500 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 177


 5866              	.LASF54:
 5867 0739 6F6C6449 		.ascii	"oldIsr\000"
 5867      737200
 5868              	.LASF110:
 5869 0740 63796465 		.ascii	"cydelayFreqMhz\000"
 5869      6C617946 
 5869      7265714D 
 5869      687A00
 5870              	.LASF118:
 5871 074f 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5871      73436C6B 
 5871      57636F45 
 5871      6E61626C 
 5871      656400
 5872              	.LASF104:
 5873 0762 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5873      73536574 
 5873      446D6163 
 5873      41636365 
 5873      73734172 
 5874              	.LASF81:
 5875 0780 43795379 		.ascii	"CySysTickStop\000"
 5875      73546963 
 5875      6B53746F 
 5875      7000
 5876              	.LASF32:
 5877 078e 64697669 		.ascii	"divider\000"
 5877      64657200 
 5878              	.LASF71:
 5879 0796 43795379 		.ascii	"CySysClkImoStart\000"
 5879      73436C6B 
 5879      496D6F53 
 5879      74617274 
 5879      00
 5880              	.LASF119:
 5881 07a7 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5881      73466C61 
 5881      73685365 
 5881      74576169 
 5881      74437963 
 5882              	.LASF121:
 5883 07bf 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5883      72617465 
 5883      645F536F 
 5883      75726365 
 5883      5C50536F 
 5884              	.LASF77:
 5885 07de 6D696372 		.ascii	"microseconds\000"
 5885      6F736563 
 5885      6F6E6473 
 5885      00
 5886              	.LASF26:
 5887 07eb 746D7052 		.ascii	"tmpReg\000"
 5887      656700
 5888              	.LASF85:
 5889 07f2 43795379 		.ascii	"CySysTickSetReload\000"
 5889      73546963 
ARM GAS  C:\Users\tsien\AppData\Local\Temp\ccgrKc8S.s 			page 178


 5889      6B536574 
 5889      52656C6F 
 5889      616400
 5890              	.LASF123:
 5891 0805 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5891      73546963 
 5891      6B536572 
 5891      76696365 
 5891      43616C6C 
 5892              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
